// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetAttributeValuesOutputResponseBody: Equatable {
    public let attributeValues: [AttributeValue]?
    public let nextToken: String?
}

extension GetAttributeValuesOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case attributeValues = "AttributeValues"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let attributeValuesContainer = try containerValues.decodeIfPresent([AttributeValue?].self, forKey: .attributeValues)
        var attributeValuesDecoded0:[AttributeValue]? = nil
        if let attributeValuesContainer = attributeValuesContainer {
            attributeValuesDecoded0 = [AttributeValue]()
            for structure0 in attributeValuesContainer {
                if let structure0 = structure0 {
                    attributeValuesDecoded0?.append(structure0)
                }
            }
        }
        attributeValues = attributeValuesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
