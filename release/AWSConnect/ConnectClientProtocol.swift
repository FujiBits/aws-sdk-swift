// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer
///    contact center and provide reliable customer engagement at any scale.
///          Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing.
///    You can also resolve customer issues more efficiently by getting customers in touch with the
///    appropriate agents.
///          There are limits to the number of Amazon Connect resources that you can create. There are also limits
///    to the number of requests that you can make per second. For more information, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html">Amazon Connect
///     Service Quotas in the Amazon Connect Administrator Guide.
///          You can
///    connect
///    programmatically to an AWS service by using an endpoint. For a list of Amazon Connect endpoints, see
///     <a href="https://docs.aws.amazon.com/general/latest/gr/connect_region.html">Amazon Connect
///    Endpoints.
///
///             Working with contact flows? Check out the <a href="https://docs.aws.amazon.com/connect/latest/adminguide/flow-language.html">Amazon Connect Flow language.
///
public protocol ConnectClientProtocol {
    /// This API is in preview release for Amazon Connect and is subject to change.
    ///          Associates an approved origin to an Amazon Connect instance.
    func associateApprovedOrigin(input: AssociateApprovedOriginInput, completion: @escaping (ClientRuntime.SdkResult<AssociateApprovedOriginOutputResponse, AssociateApprovedOriginOutputError>) -> Void)
    /// This API is in preview release for Amazon Connect and is subject to change.
    ///          Allows the specified Amazon Connect instance to access the specified Amazon Lex or Amazon Lex V2 bot.
    func associateBot(input: AssociateBotInput, completion: @escaping (ClientRuntime.SdkResult<AssociateBotOutputResponse, AssociateBotOutputError>) -> Void)
    /// This API is in preview release for Amazon Connect and is subject to change.
    ///          Associates a storage resource type for the first time. You can only associate one type of
    ///    storage configuration in a single call. This means, for example, that you can't define an
    ///    instance with multiple S3 buckets for storing chat transcripts.
    ///          This API does not create a resource that doesn't exist. It only associates it to the
    ///    instance. Ensure that the resource being specified in the storage configuration, like an S3
    ///    bucket, exists when being used for association.
    func associateInstanceStorageConfig(input: AssociateInstanceStorageConfigInput, completion: @escaping (ClientRuntime.SdkResult<AssociateInstanceStorageConfigOutputResponse, AssociateInstanceStorageConfigOutputError>) -> Void)
    /// This API is in preview release for Amazon Connect and is subject to change.
    ///          Allows the specified Amazon Connect instance to access the specified Lambda function.
    func associateLambdaFunction(input: AssociateLambdaFunctionInput, completion: @escaping (ClientRuntime.SdkResult<AssociateLambdaFunctionOutputResponse, AssociateLambdaFunctionOutputError>) -> Void)
    /// This API is in preview release for Amazon Connect and is subject to change.
    ///          Allows the specified Amazon Connect instance to access the specified Amazon Lex bot.
    func associateLexBot(input: AssociateLexBotInput, completion: @escaping (ClientRuntime.SdkResult<AssociateLexBotOutputResponse, AssociateLexBotOutputError>) -> Void)
    /// This API is in preview release for Amazon Connect and is subject to change.
    ///          Associates a set of quick connects with a queue.
    func associateQueueQuickConnects(input: AssociateQueueQuickConnectsInput, completion: @escaping (ClientRuntime.SdkResult<AssociateQueueQuickConnectsOutputResponse, AssociateQueueQuickConnectsOutputError>) -> Void)
    /// Associates a set of queues with a routing profile.
    func associateRoutingProfileQueues(input: AssociateRoutingProfileQueuesInput, completion: @escaping (ClientRuntime.SdkResult<AssociateRoutingProfileQueuesOutputResponse, AssociateRoutingProfileQueuesOutputError>) -> Void)
    /// This API is in preview release for Amazon Connect and is subject to change.
    ///          Associates a security key to the instance.
    func associateSecurityKey(input: AssociateSecurityKeyInput, completion: @escaping (ClientRuntime.SdkResult<AssociateSecurityKeyOutputResponse, AssociateSecurityKeyOutputError>) -> Void)
    /// This API is in preview release for Amazon Connect and is subject to change.
    ///          Creates an agent status for the specified Amazon Connect instance.
    func createAgentStatus(input: CreateAgentStatusInput, completion: @escaping (ClientRuntime.SdkResult<CreateAgentStatusOutputResponse, CreateAgentStatusOutputError>) -> Void)
    /// Creates a contact flow for the specified Amazon Connect instance.
    ///          You can also create and update contact flows using the <a href="https://docs.aws.amazon.com/connect/latest/adminguide/flow-language.html">Amazon Connect
    ///    Flow language.
    func createContactFlow(input: CreateContactFlowInput, completion: @escaping (ClientRuntime.SdkResult<CreateContactFlowOutputResponse, CreateContactFlowOutputError>) -> Void)
    /// This API is in preview release for Amazon Connect and is subject to change.
    ///          Creates hours of operation.
    func createHoursOfOperation(input: CreateHoursOfOperationInput, completion: @escaping (ClientRuntime.SdkResult<CreateHoursOfOperationOutputResponse, CreateHoursOfOperationOutputError>) -> Void)
    /// This API is in preview release for Amazon Connect and is subject to change.
    ///          Initiates an Amazon Connect instance with all the supported channels enabled. It does not attach any
    ///    storage, such as Amazon Simple Storage Service (Amazon S3) or Amazon Kinesis. It also does not
    ///    allow for any configurations on features, such as Contact Lens for Amazon Connect.
    ///          Amazon Connect enforces a limit on the total number of instances that you can create or delete in 30 days.
    /// If you exceed this limit, you will get an error message indicating there has been an excessive number of attempts at creating or deleting instances.
    /// You must wait 30 days before you can restart creating and deleting instances in your account.
    func createInstance(input: CreateInstanceInput, completion: @escaping (ClientRuntime.SdkResult<CreateInstanceOutputResponse, CreateInstanceOutputError>) -> Void)
    /// Creates an AWS resource association with an Amazon Connect instance.
    func createIntegrationAssociation(input: CreateIntegrationAssociationInput, completion: @escaping (ClientRuntime.SdkResult<CreateIntegrationAssociationOutputResponse, CreateIntegrationAssociationOutputError>) -> Void)
    /// This API is in preview release for Amazon Connect and is subject to change.
    ///          Creates a new queue for the specified Amazon Connect instance.
    func createQueue(input: CreateQueueInput, completion: @escaping (ClientRuntime.SdkResult<CreateQueueOutputResponse, CreateQueueOutputError>) -> Void)
    /// Creates a quick connect for the specified Amazon Connect instance.
    func createQuickConnect(input: CreateQuickConnectInput, completion: @escaping (ClientRuntime.SdkResult<CreateQuickConnectOutputResponse, CreateQuickConnectOutputError>) -> Void)
    /// Creates a new routing profile.
    func createRoutingProfile(input: CreateRoutingProfileInput, completion: @escaping (ClientRuntime.SdkResult<CreateRoutingProfileOutputResponse, CreateRoutingProfileOutputError>) -> Void)
    /// Creates a use case for an integration association.
    func createUseCase(input: CreateUseCaseInput, completion: @escaping (ClientRuntime.SdkResult<CreateUseCaseOutputResponse, CreateUseCaseOutputError>) -> Void)
    /// Creates a user account for the specified Amazon Connect instance.
    ///          For information about how to create user accounts using the Amazon Connect console, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/user-management.html">Add Users in
    ///    the Amazon Connect Administrator Guide.
    func createUser(input: CreateUserInput, completion: @escaping (ClientRuntime.SdkResult<CreateUserOutputResponse, CreateUserOutputError>) -> Void)
    /// Creates a new user hierarchy group.
    func createUserHierarchyGroup(input: CreateUserHierarchyGroupInput, completion: @escaping (ClientRuntime.SdkResult<CreateUserHierarchyGroupOutputResponse, CreateUserHierarchyGroupOutputError>) -> Void)
    /// This API is in preview release for Amazon Connect and is subject to change.
    ///          Deletes an hours of operation.
    func deleteHoursOfOperation(input: DeleteHoursOfOperationInput, completion: @escaping (ClientRuntime.SdkResult<DeleteHoursOfOperationOutputResponse, DeleteHoursOfOperationOutputError>) -> Void)
    /// This API is in preview release for Amazon Connect and is subject to change.
    ///          Deletes the Amazon Connect instance.
    ///          Amazon Connect enforces a limit on the total number of instances that you can create or delete in 30 days.
    /// If you exceed this limit, you will get an error message indicating there has been an excessive number of attempts at creating or deleting instances.
    /// You must wait 30 days before you can restart creating and deleting instances in your account.
    func deleteInstance(input: DeleteInstanceInput, completion: @escaping (ClientRuntime.SdkResult<DeleteInstanceOutputResponse, DeleteInstanceOutputError>) -> Void)
    /// Deletes an AWS resource association from an Amazon Connect instance. The association must not have
    ///    any use cases associated with it.
    func deleteIntegrationAssociation(input: DeleteIntegrationAssociationInput, completion: @escaping (ClientRuntime.SdkResult<DeleteIntegrationAssociationOutputResponse, DeleteIntegrationAssociationOutputError>) -> Void)
    /// Deletes a quick connect.
    func deleteQuickConnect(input: DeleteQuickConnectInput, completion: @escaping (ClientRuntime.SdkResult<DeleteQuickConnectOutputResponse, DeleteQuickConnectOutputError>) -> Void)
    /// Deletes a use case from an integration association.
    func deleteUseCase(input: DeleteUseCaseInput, completion: @escaping (ClientRuntime.SdkResult<DeleteUseCaseOutputResponse, DeleteUseCaseOutputError>) -> Void)
    /// Deletes a user account from the specified Amazon Connect instance.
    ///          For information about what happens to a user's data when their account is deleted, see
    ///     <a href="https://docs.aws.amazon.com/connect/latest/adminguide/delete-users.html">Delete Users from
    ///     Your Amazon Connect Instance in the Amazon Connect Administrator Guide.
    func deleteUser(input: DeleteUserInput, completion: @escaping (ClientRuntime.SdkResult<DeleteUserOutputResponse, DeleteUserOutputError>) -> Void)
    /// Deletes an existing user hierarchy group. It must not be associated with any agents or have
    ///    any active child groups.
    func deleteUserHierarchyGroup(input: DeleteUserHierarchyGroupInput, completion: @escaping (ClientRuntime.SdkResult<DeleteUserHierarchyGroupOutputResponse, DeleteUserHierarchyGroupOutputError>) -> Void)
    /// This API is in preview release for Amazon Connect and is subject to change.
    ///          Describes an agent status.
    func describeAgentStatus(input: DescribeAgentStatusInput, completion: @escaping (ClientRuntime.SdkResult<DescribeAgentStatusOutputResponse, DescribeAgentStatusOutputError>) -> Void)
    /// Describes the specified contact flow.
    ///          You can also create and update contact flows using the <a href="https://docs.aws.amazon.com/connect/latest/adminguide/flow-language.html">Amazon Connect
    ///    Flow language.
    func describeContactFlow(input: DescribeContactFlowInput, completion: @escaping (ClientRuntime.SdkResult<DescribeContactFlowOutputResponse, DescribeContactFlowOutputError>) -> Void)
    /// This API is in preview release for Amazon Connect and is subject to change.
    ///          Describes the hours of operation.
    func describeHoursOfOperation(input: DescribeHoursOfOperationInput, completion: @escaping (ClientRuntime.SdkResult<DescribeHoursOfOperationOutputResponse, DescribeHoursOfOperationOutputError>) -> Void)
    /// This API is in preview release for Amazon Connect and is subject to change.
    ///          Returns the current state of the specified instance identifier. It tracks the instance while
    ///    it is being created and returns an error status, if applicable.
    ///          If an instance is not created successfully, the instance status reason field returns details
    ///    relevant to the reason. The instance in a failed state is returned only for 24 hours after the
    ///    CreateInstance API was invoked.
    func describeInstance(input: DescribeInstanceInput, completion: @escaping (ClientRuntime.SdkResult<DescribeInstanceOutputResponse, DescribeInstanceOutputError>) -> Void)
    /// This API is in preview release for Amazon Connect and is subject to change.
    ///          Describes the specified instance attribute.
    func describeInstanceAttribute(input: DescribeInstanceAttributeInput, completion: @escaping (ClientRuntime.SdkResult<DescribeInstanceAttributeOutputResponse, DescribeInstanceAttributeOutputError>) -> Void)
    /// This API is in preview release for Amazon Connect and is subject to change.
    ///          Retrieves the current storage configurations for the specified resource type, association
    ///    ID, and instance ID.
    func describeInstanceStorageConfig(input: DescribeInstanceStorageConfigInput, completion: @escaping (ClientRuntime.SdkResult<DescribeInstanceStorageConfigOutputResponse, DescribeInstanceStorageConfigOutputError>) -> Void)
    /// This API is in preview release for Amazon Connect and is subject to change.
    ///          Describes the specified queue.
    func describeQueue(input: DescribeQueueInput, completion: @escaping (ClientRuntime.SdkResult<DescribeQueueOutputResponse, DescribeQueueOutputError>) -> Void)
    /// Describes the quick connect.
    func describeQuickConnect(input: DescribeQuickConnectInput, completion: @escaping (ClientRuntime.SdkResult<DescribeQuickConnectOutputResponse, DescribeQuickConnectOutputError>) -> Void)
    /// Describes the specified routing profile.
    func describeRoutingProfile(input: DescribeRoutingProfileInput, completion: @escaping (ClientRuntime.SdkResult<DescribeRoutingProfileOutputResponse, DescribeRoutingProfileOutputError>) -> Void)
    /// Describes the specified user account. You can find the instance ID in the console (it’s the
    ///    final part of the ARN). The console does not display the user IDs. Instead, list the users and
    ///    note the IDs provided in the output.
    func describeUser(input: DescribeUserInput, completion: @escaping (ClientRuntime.SdkResult<DescribeUserOutputResponse, DescribeUserOutputError>) -> Void)
    /// Describes the specified hierarchy group.
    func describeUserHierarchyGroup(input: DescribeUserHierarchyGroupInput, completion: @escaping (ClientRuntime.SdkResult<DescribeUserHierarchyGroupOutputResponse, DescribeUserHierarchyGroupOutputError>) -> Void)
    /// Describes the hierarchy structure of the specified Amazon Connect instance.
    func describeUserHierarchyStructure(input: DescribeUserHierarchyStructureInput, completion: @escaping (ClientRuntime.SdkResult<DescribeUserHierarchyStructureOutputResponse, DescribeUserHierarchyStructureOutputError>) -> Void)
    /// This API is in preview release for Amazon Connect and is subject to change.
    ///          Revokes access to integrated applications from Amazon Connect.
    func disassociateApprovedOrigin(input: DisassociateApprovedOriginInput, completion: @escaping (ClientRuntime.SdkResult<DisassociateApprovedOriginOutputResponse, DisassociateApprovedOriginOutputError>) -> Void)
    /// This API is in preview release for Amazon Connect and is subject to change.
    ///          Revokes authorization from the specified instance to access the specified Amazon Lex or Amazon Lex V2
    ///    bot.
    func disassociateBot(input: DisassociateBotInput, completion: @escaping (ClientRuntime.SdkResult<DisassociateBotOutputResponse, DisassociateBotOutputError>) -> Void)
    /// This API is in preview release for Amazon Connect and is subject to change.
    ///          Removes the storage type configurations for the specified resource type and association
    ///    ID.
    func disassociateInstanceStorageConfig(input: DisassociateInstanceStorageConfigInput, completion: @escaping (ClientRuntime.SdkResult<DisassociateInstanceStorageConfigOutputResponse, DisassociateInstanceStorageConfigOutputError>) -> Void)
    /// This API is in preview release for Amazon Connect and is subject to change.
    ///          Remove the Lambda function from the dropdown options available in the relevant contact flow
    ///    blocks.
    func disassociateLambdaFunction(input: DisassociateLambdaFunctionInput, completion: @escaping (ClientRuntime.SdkResult<DisassociateLambdaFunctionOutputResponse, DisassociateLambdaFunctionOutputError>) -> Void)
    /// This API is in preview release for Amazon Connect and is subject to change.
    ///          Revokes authorization from the specified instance to access the specified Amazon Lex bot.
    func disassociateLexBot(input: DisassociateLexBotInput, completion: @escaping (ClientRuntime.SdkResult<DisassociateLexBotOutputResponse, DisassociateLexBotOutputError>) -> Void)
    /// This API is in preview release for Amazon Connect and is subject to change.
    ///          Disassociates a set of quick connects from a queue.
    func disassociateQueueQuickConnects(input: DisassociateQueueQuickConnectsInput, completion: @escaping (ClientRuntime.SdkResult<DisassociateQueueQuickConnectsOutputResponse, DisassociateQueueQuickConnectsOutputError>) -> Void)
    /// Disassociates a set of queues from a routing profile.
    func disassociateRoutingProfileQueues(input: DisassociateRoutingProfileQueuesInput, completion: @escaping (ClientRuntime.SdkResult<DisassociateRoutingProfileQueuesOutputResponse, DisassociateRoutingProfileQueuesOutputError>) -> Void)
    /// This API is in preview release for Amazon Connect and is subject to change.
    ///          Deletes the specified security key.
    func disassociateSecurityKey(input: DisassociateSecurityKeyInput, completion: @escaping (ClientRuntime.SdkResult<DisassociateSecurityKeyOutputResponse, DisassociateSecurityKeyOutputError>) -> Void)
    /// Retrieves the contact attributes for the specified contact.
    func getContactAttributes(input: GetContactAttributesInput, completion: @escaping (ClientRuntime.SdkResult<GetContactAttributesOutputResponse, GetContactAttributesOutputError>) -> Void)
    /// Gets the real-time metric data from the specified Amazon Connect instance.
    ///          For a description of each metric, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html">Real-time Metrics
    ///     Definitions in the Amazon Connect Administrator Guide.
    func getCurrentMetricData(input: GetCurrentMetricDataInput, completion: @escaping (ClientRuntime.SdkResult<GetCurrentMetricDataOutputResponse, GetCurrentMetricDataOutputError>) -> Void)
    /// Retrieves a token for federation.
    ///
    ///             This API doesn't support root users. If you try to invoke GetFederationToken with root
    ///     credentials, an error message similar to the following one appears:
    ///
    ///                Provided identity: Principal: .... User: .... cannot be used for federation with
    ///      Amazon Connect
    ///
    ///
    func getFederationToken(input: GetFederationTokenInput, completion: @escaping (ClientRuntime.SdkResult<GetFederationTokenOutputResponse, GetFederationTokenOutputError>) -> Void)
    /// Gets historical metric data from the specified Amazon Connect instance.
    ///
    ///          For a description of each historical metric, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html">Historical Metrics
    ///     Definitions in the Amazon Connect Administrator Guide.
    func getMetricData(input: GetMetricDataInput, completion: @escaping (ClientRuntime.SdkResult<GetMetricDataOutputResponse, GetMetricDataOutputError>) -> Void)
    /// This API is in preview release for Amazon Connect and is subject to change.
    ///          Lists agent statuses.
    func listAgentStatuses(input: ListAgentStatusesInput, completion: @escaping (ClientRuntime.SdkResult<ListAgentStatusesOutputResponse, ListAgentStatusesOutputError>) -> Void)
    /// This API is in preview release for Amazon Connect and is subject to change.
    ///          Returns a paginated list of all approved origins associated with the instance.
    func listApprovedOrigins(input: ListApprovedOriginsInput, completion: @escaping (ClientRuntime.SdkResult<ListApprovedOriginsOutputResponse, ListApprovedOriginsOutputError>) -> Void)
    /// This API is in preview release for Amazon Connect and is subject to change.
    ///          For the specified version of Amazon Lex, returns a paginated list of all the Amazon Lex bots currently associated with the
    ///    instance.
    func listBots(input: ListBotsInput, completion: @escaping (ClientRuntime.SdkResult<ListBotsOutputResponse, ListBotsOutputError>) -> Void)
    /// Provides information about the contact flows for the specified Amazon Connect instance.
    ///          You can also create and update contact flows using the <a href="https://docs.aws.amazon.com/connect/latest/adminguide/flow-language.html">Amazon Connect
    ///    Flow language.
    ///          For more information about contact flows, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/concepts-contact-flows.html">Contact Flows in the
    ///     Amazon Connect Administrator Guide.
    func listContactFlows(input: ListContactFlowsInput, completion: @escaping (ClientRuntime.SdkResult<ListContactFlowsOutputResponse, ListContactFlowsOutputError>) -> Void)
    /// Provides information about the hours of operation for the specified Amazon Connect instance.
    ///          For more information about hours of operation, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/set-hours-operation.html">Set the Hours of Operation for a
    ///     Queue in the Amazon Connect Administrator Guide.
    func listHoursOfOperations(input: ListHoursOfOperationsInput, completion: @escaping (ClientRuntime.SdkResult<ListHoursOfOperationsOutputResponse, ListHoursOfOperationsOutputError>) -> Void)
    /// This API is in preview release for Amazon Connect and is subject to change.
    ///          Returns a paginated list of all attribute types for the given instance.
    func listInstanceAttributes(input: ListInstanceAttributesInput, completion: @escaping (ClientRuntime.SdkResult<ListInstanceAttributesOutputResponse, ListInstanceAttributesOutputError>) -> Void)
    /// This API is in preview release for Amazon Connect and is subject to change.
    ///          Return a list of instances which are in active state, creation-in-progress state, and failed
    ///    state. Instances that aren't successfully created (they are in a failed state) are returned only
    ///    for 24 hours after the CreateInstance API was invoked.
    func listInstances(input: ListInstancesInput, completion: @escaping (ClientRuntime.SdkResult<ListInstancesOutputResponse, ListInstancesOutputError>) -> Void)
    /// This API is in preview release for Amazon Connect and is subject to change.
    ///
    ///          Returns a paginated list of storage configs for the identified instance and resource
    ///    type.
    func listInstanceStorageConfigs(input: ListInstanceStorageConfigsInput, completion: @escaping (ClientRuntime.SdkResult<ListInstanceStorageConfigsOutputResponse, ListInstanceStorageConfigsOutputError>) -> Void)
    /// Provides summary information about the AWS resource associations for the specified Amazon Connect
    ///    instance.
    func listIntegrationAssociations(input: ListIntegrationAssociationsInput, completion: @escaping (ClientRuntime.SdkResult<ListIntegrationAssociationsOutputResponse, ListIntegrationAssociationsOutputError>) -> Void)
    /// This API is in preview release for Amazon Connect and is subject to change.
    ///          Returns a paginated list of all Lambda functions that display in the dropdown options in the
    ///    relevant contact flow blocks.
    func listLambdaFunctions(input: ListLambdaFunctionsInput, completion: @escaping (ClientRuntime.SdkResult<ListLambdaFunctionsOutputResponse, ListLambdaFunctionsOutputError>) -> Void)
    /// This API is in preview release for Amazon Connect and is subject to change.
    ///          Returns a paginated list of all the Amazon Lex bots currently associated with the
    ///    instance.
    func listLexBots(input: ListLexBotsInput, completion: @escaping (ClientRuntime.SdkResult<ListLexBotsOutputResponse, ListLexBotsOutputError>) -> Void)
    /// Provides information about the phone numbers for the specified Amazon Connect instance.
    ///          For more information about phone numbers, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/contact-center-phone-number.html">Set Up Phone Numbers for Your
    ///     Contact Center in the Amazon Connect Administrator Guide.
    func listPhoneNumbers(input: ListPhoneNumbersInput, completion: @escaping (ClientRuntime.SdkResult<ListPhoneNumbersOutputResponse, ListPhoneNumbersOutputError>) -> Void)
    /// Provides information about the prompts for the specified Amazon Connect instance.
    func listPrompts(input: ListPromptsInput, completion: @escaping (ClientRuntime.SdkResult<ListPromptsOutputResponse, ListPromptsOutputError>) -> Void)
    /// This API is in preview release for Amazon Connect and is subject to change.
    ///          Lists the quick connects associated with a queue.
    func listQueueQuickConnects(input: ListQueueQuickConnectsInput, completion: @escaping (ClientRuntime.SdkResult<ListQueueQuickConnectsOutputResponse, ListQueueQuickConnectsOutputError>) -> Void)
    /// Provides information about the queues for the specified Amazon Connect instance.
    ///          If you do not specify a QueueTypes
    ///    parameter, both standard and agent queues are returned. This might cause an unexpected truncation
    ///    of results if you have more than 1000 agents and you limit the number of results of the API call
    ///    in code.
    ///          For more information about queues, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/concepts-queues-standard-and-agent.html">Queues: Standard and
    ///     Agent in the Amazon Connect Administrator Guide.
    func listQueues(input: ListQueuesInput, completion: @escaping (ClientRuntime.SdkResult<ListQueuesOutputResponse, ListQueuesOutputError>) -> Void)
    /// Provides information about the quick connects for the specified Amazon Connect instance.
    func listQuickConnects(input: ListQuickConnectsInput, completion: @escaping (ClientRuntime.SdkResult<ListQuickConnectsOutputResponse, ListQuickConnectsOutputError>) -> Void)
    /// Lists the queues associated with a routing profile.
    func listRoutingProfileQueues(input: ListRoutingProfileQueuesInput, completion: @escaping (ClientRuntime.SdkResult<ListRoutingProfileQueuesOutputResponse, ListRoutingProfileQueuesOutputError>) -> Void)
    /// Provides summary information about the routing profiles for the specified Amazon Connect
    ///    instance.
    ///          For more information about routing profiles, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/concepts-routing.html">Routing Profiles and <a href="https://docs.aws.amazon.com/connect/latest/adminguide/routing-profiles.html">Create a Routing
    ///     Profile in the Amazon Connect Administrator Guide.
    func listRoutingProfiles(input: ListRoutingProfilesInput, completion: @escaping (ClientRuntime.SdkResult<ListRoutingProfilesOutputResponse, ListRoutingProfilesOutputError>) -> Void)
    /// This API is in preview release for Amazon Connect and is subject to change.
    ///          Returns a paginated list of all security keys associated with the instance.
    func listSecurityKeys(input: ListSecurityKeysInput, completion: @escaping (ClientRuntime.SdkResult<ListSecurityKeysOutputResponse, ListSecurityKeysOutputError>) -> Void)
    /// Provides summary information about the security profiles for the specified Amazon Connect
    ///    instance.
    ///          For more information about security profiles, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/connect-security-profiles.html">Security Profiles in the
    ///     Amazon Connect Administrator Guide.
    func listSecurityProfiles(input: ListSecurityProfilesInput, completion: @escaping (ClientRuntime.SdkResult<ListSecurityProfilesOutputResponse, ListSecurityProfilesOutputError>) -> Void)
    /// Lists the tags for the specified resource.
    ///          For sample policies that use tags, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/security_iam_id-based-policy-examples.html">Amazon Connect Identity-Based
    ///     Policy Examples in the Amazon Connect Administrator Guide.
    func listTagsForResource(input: ListTagsForResourceInput, completion: @escaping (ClientRuntime.SdkResult<ListTagsForResourceOutputResponse, ListTagsForResourceOutputError>) -> Void)
    /// Lists the use cases for the integration association.
    func listUseCases(input: ListUseCasesInput, completion: @escaping (ClientRuntime.SdkResult<ListUseCasesOutputResponse, ListUseCasesOutputError>) -> Void)
    /// Provides summary information about the hierarchy groups for the specified Amazon Connect
    ///    instance.
    ///          For more information about agent hierarchies, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/agent-hierarchy.html">Set Up Agent Hierarchies in the
    ///     Amazon Connect Administrator Guide.
    func listUserHierarchyGroups(input: ListUserHierarchyGroupsInput, completion: @escaping (ClientRuntime.SdkResult<ListUserHierarchyGroupsOutputResponse, ListUserHierarchyGroupsOutputError>) -> Void)
    /// Provides summary information about the users for the specified Amazon Connect instance.
    func listUsers(input: ListUsersInput, completion: @escaping (ClientRuntime.SdkResult<ListUsersOutputResponse, ListUsersOutputError>) -> Void)
    /// When a contact is being recorded, and the recording has been suspended using
    ///    SuspendContactRecording, this API resumes recording the call.
    ///
    ///          Only voice recordings are supported at this time.
    func resumeContactRecording(input: ResumeContactRecordingInput, completion: @escaping (ClientRuntime.SdkResult<ResumeContactRecordingOutputResponse, ResumeContactRecordingOutputError>) -> Void)
    /// Initiates a contact flow to start a new chat for the customer. Response of this API provides
    ///    a token required to obtain credentials from the <a href="https://docs.aws.amazon.com/connect-participant/latest/APIReference/API_CreateParticipantConnection.html">CreateParticipantConnection API in the Amazon Connect Participant Service.
    ///
    ///          When a new chat contact is successfully created, clients must subscribe to the participant’s
    ///    connection for the created chat within 5 minutes. This is achieved by invoking <a href="https://docs.aws.amazon.com/connect-participant/latest/APIReference/API_CreateParticipantConnection.html">CreateParticipantConnection with WEBSOCKET and CONNECTION_CREDENTIALS.
    ///
    ///          A 429 error occurs in two situations:
    ///
    ///
    ///                API rate limit is exceeded. API TPS throttling returns a TooManyRequests
    ///      exception.
    ///
    ///
    ///                The <a href="https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html">quota for concurrent active
    ///       chats is exceeded. Active chat throttling returns a
    ///       LimitExceededException.
    ///
    ///
    ///
    ///          For more information about chat, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/chat.html">Chat in the Amazon Connect Administrator
    ///     Guide.
    func startChatContact(input: StartChatContactInput, completion: @escaping (ClientRuntime.SdkResult<StartChatContactOutputResponse, StartChatContactOutputError>) -> Void)
    /// Starts recording the contact when the agent joins the call. StartContactRecording is a
    ///    one-time action. For example, if you use StopContactRecording to stop recording an ongoing call,
    ///    you can't use StartContactRecording to restart it. For scenarios where the recording has started
    ///    and you want to suspend and resume it, such as when collecting sensitive information (for
    ///    example, a credit card number), use SuspendContactRecording and ResumeContactRecording.
    ///          You can use this API to override the recording behavior configured in the <a href="https://docs.aws.amazon.com/connect/latest/adminguide/set-recording-behavior.html">Set recording
    ///     behavior block.
    ///          Only voice recordings are supported at this time.
    func startContactRecording(input: StartContactRecordingInput, completion: @escaping (ClientRuntime.SdkResult<StartContactRecordingOutputResponse, StartContactRecordingOutputError>) -> Void)
    /// Places an outbound call to a contact, and then initiates the contact flow. It performs the
    ///    actions in the contact flow that's specified (in ContactFlowId).
    ///
    ///          Agents do not initiate the outbound API, which means that they do not dial the contact. If
    ///    the contact flow places an outbound call to a contact, and then puts the contact in queue, the
    ///    call is then routed to the agent, like any other inbound case.
    ///
    ///          There is a 60-second dialing timeout for this operation. If the call is not connected after
    ///    60 seconds, it fails.
    ///
    ///             UK numbers with a 447 prefix are not allowed by default. Before you can dial these UK
    ///     mobile numbers, you must submit a service quota increase request. For more information, see
    ///      <a href="https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html">Amazon Connect Service Quotas in the Amazon Connect Administrator Guide.
    ///
    ///
    ///             Campaign calls are not allowed by default. Before you can make a call with
    ///     TrafficType = CAMPAIGN, you must submit a service quota increase request. For more information, see
    ///     <a href="https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html">Amazon Connect Service Quotas in the Amazon Connect Administrator Guide.
    ///
    func startOutboundVoiceContact(input: StartOutboundVoiceContactInput, completion: @escaping (ClientRuntime.SdkResult<StartOutboundVoiceContactOutputResponse, StartOutboundVoiceContactOutputError>) -> Void)
    /// Initiates a contact flow to start a new task.
    func startTaskContact(input: StartTaskContactInput, completion: @escaping (ClientRuntime.SdkResult<StartTaskContactOutputResponse, StartTaskContactOutputError>) -> Void)
    /// Ends the specified contact.
    func stopContact(input: StopContactInput, completion: @escaping (ClientRuntime.SdkResult<StopContactOutputResponse, StopContactOutputError>) -> Void)
    /// Stops recording a call when a contact is being recorded. StopContactRecording is a one-time
    ///    action. If you use StopContactRecording to stop recording an ongoing call, you can't use
    ///    StartContactRecording to restart it. For scenarios where the recording has started and you want
    ///    to suspend it for sensitive information (for example, to collect a credit card number), and then
    ///    restart it, use SuspendContactRecording and ResumeContactRecording.
    ///
    ///          Only voice recordings are supported at this time.
    func stopContactRecording(input: StopContactRecordingInput, completion: @escaping (ClientRuntime.SdkResult<StopContactRecordingOutputResponse, StopContactRecordingOutputError>) -> Void)
    /// When a contact is being recorded, this API suspends recording the call. For example, you
    ///    might suspend the call recording while collecting sensitive information, such as a credit card
    ///    number. Then use ResumeContactRecording to restart recording.
    ///          The period of time that the recording is suspended is filled with silence in the final
    ///    recording.
    ///          Only voice recordings are supported at this time.
    func suspendContactRecording(input: SuspendContactRecordingInput, completion: @escaping (ClientRuntime.SdkResult<SuspendContactRecordingOutputResponse, SuspendContactRecordingOutputError>) -> Void)
    /// Adds the specified tags to the specified resource.
    ///          The supported resource types are users, routing profiles, queues, quick connects,
    ///    contact flows, agent status, and hours of operation.
    ///          For sample policies that use tags, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/security_iam_id-based-policy-examples.html">Amazon Connect Identity-Based
    ///     Policy Examples in the Amazon Connect Administrator Guide.
    func tagResource(input: TagResourceInput, completion: @escaping (ClientRuntime.SdkResult<TagResourceOutputResponse, TagResourceOutputError>) -> Void)
    /// Removes the specified tags from the specified resource.
    func untagResource(input: UntagResourceInput, completion: @escaping (ClientRuntime.SdkResult<UntagResourceOutputResponse, UntagResourceOutputError>) -> Void)
    /// This API is in preview release for Amazon Connect and is subject to change.
    ///          Updates agent status.
    func updateAgentStatus(input: UpdateAgentStatusInput, completion: @escaping (ClientRuntime.SdkResult<UpdateAgentStatusOutputResponse, UpdateAgentStatusOutputError>) -> Void)
    /// Creates or updates
    ///    user-defined contact attributes
    ///    associated with the specified contact.
    ///          You can create or update user-defined attributes for both ongoing and completed contacts.
    ///    For example, while the call is active, you can update the customer's name or the reason the
    ///    customer called. You can add notes about steps that the agent took during the call that display
    ///    to the next agent that takes the call. You can also update attributes for a contact using data
    ///    from your CRM application and save the data with the contact in Amazon Connect. You could also flag calls
    ///    for additional analysis, such as legal review or to identify abusive callers.
    ///          Contact attributes are available in Amazon Connect for 24 months, and are then deleted. For
    ///    information about CTR retention and the maximum size of the CTR attributes section, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html#feature-limits">Feature
    ///     specifications in the Amazon Connect Administrator Guide.
    ///
    ///
    ///             Important: You cannot use the operation to update
    ///    attributes for contacts that occurred prior to the release of the API, which was September 12,
    ///    2018. You can update attributes only for contacts that started after the release of the API. If
    ///    you attempt to update attributes for a contact that occurred prior to the release of the API, a
    ///    400 error is returned. This applies also to queued callbacks that were initiated prior to the
    ///    release of the API but are still active in your instance.
    func updateContactAttributes(input: UpdateContactAttributesInput, completion: @escaping (ClientRuntime.SdkResult<UpdateContactAttributesOutputResponse, UpdateContactAttributesOutputError>) -> Void)
    /// Updates the specified contact flow.
    ///          You can also create and update contact flows using the <a href="https://docs.aws.amazon.com/connect/latest/adminguide/flow-language.html">Amazon Connect
    ///    Flow language.
    func updateContactFlowContent(input: UpdateContactFlowContentInput, completion: @escaping (ClientRuntime.SdkResult<UpdateContactFlowContentOutputResponse, UpdateContactFlowContentOutputError>) -> Void)
    /// The name of the contact flow.
    ///          You can also create and update contact flows using the <a href="https://docs.aws.amazon.com/connect/latest/adminguide/flow-language.html">Amazon Connect
    ///    Flow language.
    func updateContactFlowName(input: UpdateContactFlowNameInput, completion: @escaping (ClientRuntime.SdkResult<UpdateContactFlowNameOutputResponse, UpdateContactFlowNameOutputError>) -> Void)
    /// This API is in preview release for Amazon Connect and is subject to change.
    ///          Updates the hours of operation.
    func updateHoursOfOperation(input: UpdateHoursOfOperationInput, completion: @escaping (ClientRuntime.SdkResult<UpdateHoursOfOperationOutputResponse, UpdateHoursOfOperationOutputError>) -> Void)
    /// This API is in preview release for Amazon Connect and is subject to change.
    ///          Updates the value for the specified attribute type.
    func updateInstanceAttribute(input: UpdateInstanceAttributeInput, completion: @escaping (ClientRuntime.SdkResult<UpdateInstanceAttributeOutputResponse, UpdateInstanceAttributeOutputError>) -> Void)
    /// This API is in preview release for Amazon Connect and is subject to change.
    ///          Updates an existing configuration for a resource type. This API is idempotent.
    func updateInstanceStorageConfig(input: UpdateInstanceStorageConfigInput, completion: @escaping (ClientRuntime.SdkResult<UpdateInstanceStorageConfigOutputResponse, UpdateInstanceStorageConfigOutputError>) -> Void)
    /// This API is in preview release for Amazon Connect and is subject to change.
    ///          Updates the hours of operation for the specified queue.
    func updateQueueHoursOfOperation(input: UpdateQueueHoursOfOperationInput, completion: @escaping (ClientRuntime.SdkResult<UpdateQueueHoursOfOperationOutputResponse, UpdateQueueHoursOfOperationOutputError>) -> Void)
    /// This API is in preview release for Amazon Connect and is subject to change.
    ///          Updates the maximum number of contacts allowed in a queue before it is considered
    ///    full.
    func updateQueueMaxContacts(input: UpdateQueueMaxContactsInput, completion: @escaping (ClientRuntime.SdkResult<UpdateQueueMaxContactsOutputResponse, UpdateQueueMaxContactsOutputError>) -> Void)
    /// This API is in preview release for Amazon Connect and is subject to change.
    ///          Updates the name and description of a queue. At least Name or Description must be provided.
    func updateQueueName(input: UpdateQueueNameInput, completion: @escaping (ClientRuntime.SdkResult<UpdateQueueNameOutputResponse, UpdateQueueNameOutputError>) -> Void)
    /// This API is in preview release for Amazon Connect and is subject to change.
    ///          Updates the outbound caller ID name, number, and outbound whisper flow for a specified
    ///    queue.
    func updateQueueOutboundCallerConfig(input: UpdateQueueOutboundCallerConfigInput, completion: @escaping (ClientRuntime.SdkResult<UpdateQueueOutboundCallerConfigOutputResponse, UpdateQueueOutboundCallerConfigOutputError>) -> Void)
    /// This API is in preview release for Amazon Connect and is subject to change.
    ///          Updates the status of the queue.
    func updateQueueStatus(input: UpdateQueueStatusInput, completion: @escaping (ClientRuntime.SdkResult<UpdateQueueStatusOutputResponse, UpdateQueueStatusOutputError>) -> Void)
    /// Updates the configuration settings for the specified quick connect.
    func updateQuickConnectConfig(input: UpdateQuickConnectConfigInput, completion: @escaping (ClientRuntime.SdkResult<UpdateQuickConnectConfigOutputResponse, UpdateQuickConnectConfigOutputError>) -> Void)
    /// Updates the name and description of a quick connect. The request accepts the following data in JSON format. At least Name or Description must be provided.
    func updateQuickConnectName(input: UpdateQuickConnectNameInput, completion: @escaping (ClientRuntime.SdkResult<UpdateQuickConnectNameOutputResponse, UpdateQuickConnectNameOutputError>) -> Void)
    /// Updates the channels that agents can handle in the Contact Control Panel (CCP) for a routing
    ///    profile.
    func updateRoutingProfileConcurrency(input: UpdateRoutingProfileConcurrencyInput, completion: @escaping (ClientRuntime.SdkResult<UpdateRoutingProfileConcurrencyOutputResponse, UpdateRoutingProfileConcurrencyOutputError>) -> Void)
    /// Updates the default outbound queue of a routing profile.
    func updateRoutingProfileDefaultOutboundQueue(input: UpdateRoutingProfileDefaultOutboundQueueInput, completion: @escaping (ClientRuntime.SdkResult<UpdateRoutingProfileDefaultOutboundQueueOutputResponse, UpdateRoutingProfileDefaultOutboundQueueOutputError>) -> Void)
    /// Updates the name and description of a routing profile. The request accepts the following data in JSON format.
    ///    At least Name or Description must be provided.
    func updateRoutingProfileName(input: UpdateRoutingProfileNameInput, completion: @escaping (ClientRuntime.SdkResult<UpdateRoutingProfileNameOutputResponse, UpdateRoutingProfileNameOutputError>) -> Void)
    /// Updates the properties associated with a set of queues for a routing profile.
    func updateRoutingProfileQueues(input: UpdateRoutingProfileQueuesInput, completion: @escaping (ClientRuntime.SdkResult<UpdateRoutingProfileQueuesOutputResponse, UpdateRoutingProfileQueuesOutputError>) -> Void)
    /// Assigns the specified hierarchy group to the specified user.
    func updateUserHierarchy(input: UpdateUserHierarchyInput, completion: @escaping (ClientRuntime.SdkResult<UpdateUserHierarchyOutputResponse, UpdateUserHierarchyOutputError>) -> Void)
    /// Updates the name of the user hierarchy group.
    func updateUserHierarchyGroupName(input: UpdateUserHierarchyGroupNameInput, completion: @escaping (ClientRuntime.SdkResult<UpdateUserHierarchyGroupNameOutputResponse, UpdateUserHierarchyGroupNameOutputError>) -> Void)
    /// Updates the user hierarchy structure: add, remove, and rename user hierarchy levels.
    func updateUserHierarchyStructure(input: UpdateUserHierarchyStructureInput, completion: @escaping (ClientRuntime.SdkResult<UpdateUserHierarchyStructureOutputResponse, UpdateUserHierarchyStructureOutputError>) -> Void)
    /// Updates the identity information for the specified user.
    ///
    ///             We strongly recommend limiting who has the ability to invoke
    ///      UpdateUserIdentityInfo. Someone with that ability can change the login credentials
    ///     of other users by changing their email address. This poses a security risk to your organization.
    ///     They can change the email address of a user to the attacker's email address, and then reset the
    ///     password through email. For more information, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/security-profile-best-practices.html">Best Practices for
    ///      Security Profiles in the Amazon Connect Administrator Guide.
    ///
    func updateUserIdentityInfo(input: UpdateUserIdentityInfoInput, completion: @escaping (ClientRuntime.SdkResult<UpdateUserIdentityInfoOutputResponse, UpdateUserIdentityInfoOutputError>) -> Void)
    /// Updates the phone configuration settings for the specified user.
    func updateUserPhoneConfig(input: UpdateUserPhoneConfigInput, completion: @escaping (ClientRuntime.SdkResult<UpdateUserPhoneConfigOutputResponse, UpdateUserPhoneConfigOutputError>) -> Void)
    /// Assigns the specified routing profile to the specified user.
    func updateUserRoutingProfile(input: UpdateUserRoutingProfileInput, completion: @escaping (ClientRuntime.SdkResult<UpdateUserRoutingProfileOutputResponse, UpdateUserRoutingProfileOutputError>) -> Void)
    /// Assigns the specified security profiles to the specified user.
    func updateUserSecurityProfiles(input: UpdateUserSecurityProfilesInput, completion: @escaping (ClientRuntime.SdkResult<UpdateUserSecurityProfilesOutputResponse, UpdateUserSecurityProfilesOutputError>) -> Void)
}

public enum ConnectClientTypes {}
