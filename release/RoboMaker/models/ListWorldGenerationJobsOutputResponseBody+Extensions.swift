// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListWorldGenerationJobsOutputResponseBody: Equatable {
    public let worldGenerationJobSummaries: [WorldGenerationJobSummary]?
    public let nextToken: String?
}

extension ListWorldGenerationJobsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case worldGenerationJobSummaries
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let worldGenerationJobSummariesContainer = try containerValues.decodeIfPresent([WorldGenerationJobSummary?].self, forKey: .worldGenerationJobSummaries)
        var worldGenerationJobSummariesDecoded0:[WorldGenerationJobSummary]? = nil
        if let worldGenerationJobSummariesContainer = worldGenerationJobSummariesContainer {
            worldGenerationJobSummariesDecoded0 = [WorldGenerationJobSummary]()
            for structure0 in worldGenerationJobSummariesContainer {
                if let structure0 = structure0 {
                    worldGenerationJobSummariesDecoded0?.append(structure0)
                }
            }
        }
        worldGenerationJobSummaries = worldGenerationJobSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
