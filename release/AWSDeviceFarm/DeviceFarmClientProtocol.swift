// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// Welcome to the AWS Device Farm API documentation, which contains APIs for:
///
///
///                 Testing on desktop browsers
///                  Device Farm makes it possible for you to test your web applications on desktop browsers using
///                     Selenium. The APIs for desktop browser testing contain TestGrid in their names. For
///                     more information, see <a href="https://docs.aws.amazon.com/devicefarm/latest/testgrid/">Testing Web
///                         Applications on Selenium with Device Farm.
///
///
///                 Testing on real mobile devices
///                 Device Farm makes it possible for you to test apps on physical phones, tablets, and other
///                     devices in the cloud. For more information, see the <a href="https://docs.aws.amazon.com/devicefarm/latest/developerguide/">Device Farm Developer Guide.
///
///
public protocol DeviceFarmClientProtocol {
    /// Creates a device pool.
    func createDevicePool(input: CreateDevicePoolInput, completion: @escaping (ClientRuntime.SdkResult<CreateDevicePoolOutputResponse, CreateDevicePoolOutputError>) -> Void)
    /// Creates a profile that can be applied to one or more private fleet device
    ///             instances.
    func createInstanceProfile(input: CreateInstanceProfileInput, completion: @escaping (ClientRuntime.SdkResult<CreateInstanceProfileOutputResponse, CreateInstanceProfileOutputError>) -> Void)
    /// Creates a network profile.
    func createNetworkProfile(input: CreateNetworkProfileInput, completion: @escaping (ClientRuntime.SdkResult<CreateNetworkProfileOutputResponse, CreateNetworkProfileOutputError>) -> Void)
    /// Creates a project.
    func createProject(input: CreateProjectInput, completion: @escaping (ClientRuntime.SdkResult<CreateProjectOutputResponse, CreateProjectOutputError>) -> Void)
    /// Specifies and starts a remote access session.
    func createRemoteAccessSession(input: CreateRemoteAccessSessionInput, completion: @escaping (ClientRuntime.SdkResult<CreateRemoteAccessSessionOutputResponse, CreateRemoteAccessSessionOutputError>) -> Void)
    /// Creates a Selenium testing project. Projects are used to track TestGridSession
    ///          instances.
    func createTestGridProject(input: CreateTestGridProjectInput, completion: @escaping (ClientRuntime.SdkResult<CreateTestGridProjectOutputResponse, CreateTestGridProjectOutputError>) -> Void)
    /// Creates a signed, short-term URL that can be passed to a Selenium RemoteWebDriver
    ///          constructor.
    func createTestGridUrl(input: CreateTestGridUrlInput, completion: @escaping (ClientRuntime.SdkResult<CreateTestGridUrlOutputResponse, CreateTestGridUrlOutputError>) -> Void)
    /// Uploads an app or test scripts.
    func createUpload(input: CreateUploadInput, completion: @escaping (ClientRuntime.SdkResult<CreateUploadOutputResponse, CreateUploadOutputError>) -> Void)
    /// Creates a configuration record in Device Farm for your Amazon Virtual Private Cloud
    ///             (VPC) endpoint.
    func createVPCEConfiguration(input: CreateVPCEConfigurationInput, completion: @escaping (ClientRuntime.SdkResult<CreateVPCEConfigurationOutputResponse, CreateVPCEConfigurationOutputError>) -> Void)
    /// Deletes a device pool given the pool ARN. Does not allow deletion of curated pools
    ///             owned by the system.
    func deleteDevicePool(input: DeleteDevicePoolInput, completion: @escaping (ClientRuntime.SdkResult<DeleteDevicePoolOutputResponse, DeleteDevicePoolOutputError>) -> Void)
    /// Deletes a profile that can be applied to one or more private device instances.
    func deleteInstanceProfile(input: DeleteInstanceProfileInput, completion: @escaping (ClientRuntime.SdkResult<DeleteInstanceProfileOutputResponse, DeleteInstanceProfileOutputError>) -> Void)
    /// Deletes a network profile.
    func deleteNetworkProfile(input: DeleteNetworkProfileInput, completion: @escaping (ClientRuntime.SdkResult<DeleteNetworkProfileOutputResponse, DeleteNetworkProfileOutputError>) -> Void)
    /// Deletes an AWS Device Farm project, given the project ARN.
    ///          Deleting this resource does not stop an in-progress run.
    func deleteProject(input: DeleteProjectInput, completion: @escaping (ClientRuntime.SdkResult<DeleteProjectOutputResponse, DeleteProjectOutputError>) -> Void)
    /// Deletes a completed remote access session and its results.
    func deleteRemoteAccessSession(input: DeleteRemoteAccessSessionInput, completion: @escaping (ClientRuntime.SdkResult<DeleteRemoteAccessSessionOutputResponse, DeleteRemoteAccessSessionOutputError>) -> Void)
    /// Deletes the run, given the run ARN.
    ///          Deleting this resource does not stop an in-progress run.
    func deleteRun(input: DeleteRunInput, completion: @escaping (ClientRuntime.SdkResult<DeleteRunOutputResponse, DeleteRunOutputError>) -> Void)
    ///  Deletes a Selenium testing project and all content generated under it.
    ///
    ///             You cannot undo this operation.
    ///
    ///
    ///             You cannot delete a project if it has active sessions.
    ///
    func deleteTestGridProject(input: DeleteTestGridProjectInput, completion: @escaping (ClientRuntime.SdkResult<DeleteTestGridProjectOutputResponse, DeleteTestGridProjectOutputError>) -> Void)
    /// Deletes an upload given the upload ARN.
    func deleteUpload(input: DeleteUploadInput, completion: @escaping (ClientRuntime.SdkResult<DeleteUploadOutputResponse, DeleteUploadOutputError>) -> Void)
    /// Deletes a configuration for your Amazon Virtual Private Cloud (VPC) endpoint.
    func deleteVPCEConfiguration(input: DeleteVPCEConfigurationInput, completion: @escaping (ClientRuntime.SdkResult<DeleteVPCEConfigurationOutputResponse, DeleteVPCEConfigurationOutputError>) -> Void)
    /// Returns the number of unmetered iOS or unmetered Android devices that have been purchased by the
    ///             account.
    func getAccountSettings(input: GetAccountSettingsInput, completion: @escaping (ClientRuntime.SdkResult<GetAccountSettingsOutputResponse, GetAccountSettingsOutputError>) -> Void)
    /// Gets information about a unique device type.
    func getDevice(input: GetDeviceInput, completion: @escaping (ClientRuntime.SdkResult<GetDeviceOutputResponse, GetDeviceOutputError>) -> Void)
    /// Returns information about a device instance that belongs to a private device fleet.
    func getDeviceInstance(input: GetDeviceInstanceInput, completion: @escaping (ClientRuntime.SdkResult<GetDeviceInstanceOutputResponse, GetDeviceInstanceOutputError>) -> Void)
    /// Gets information about a device pool.
    func getDevicePool(input: GetDevicePoolInput, completion: @escaping (ClientRuntime.SdkResult<GetDevicePoolOutputResponse, GetDevicePoolOutputError>) -> Void)
    /// Gets information about compatibility with a device pool.
    func getDevicePoolCompatibility(input: GetDevicePoolCompatibilityInput, completion: @escaping (ClientRuntime.SdkResult<GetDevicePoolCompatibilityOutputResponse, GetDevicePoolCompatibilityOutputError>) -> Void)
    /// Returns information about the specified instance profile.
    func getInstanceProfile(input: GetInstanceProfileInput, completion: @escaping (ClientRuntime.SdkResult<GetInstanceProfileOutputResponse, GetInstanceProfileOutputError>) -> Void)
    /// Gets information about a job.
    func getJob(input: GetJobInput, completion: @escaping (ClientRuntime.SdkResult<GetJobOutputResponse, GetJobOutputError>) -> Void)
    /// Returns information about a network profile.
    func getNetworkProfile(input: GetNetworkProfileInput, completion: @escaping (ClientRuntime.SdkResult<GetNetworkProfileOutputResponse, GetNetworkProfileOutputError>) -> Void)
    /// Gets the current status and future status of all offerings purchased by an AWS account. The response
    ///             indicates how many offerings are currently available and the offerings that will be available in the next
    ///             period. The API returns a NotEligible error if the user is not permitted to invoke the
    ///             operation. If you must be able to invoke this operation, contact <a href="mailto:aws-devicefarm-support@amazon.com">aws-devicefarm-support@amazon.com.
    func getOfferingStatus(input: GetOfferingStatusInput, completion: @escaping (ClientRuntime.SdkResult<GetOfferingStatusOutputResponse, GetOfferingStatusOutputError>) -> Void)
    /// Gets information about a project.
    func getProject(input: GetProjectInput, completion: @escaping (ClientRuntime.SdkResult<GetProjectOutputResponse, GetProjectOutputError>) -> Void)
    /// Returns a link to a currently running remote access session.
    func getRemoteAccessSession(input: GetRemoteAccessSessionInput, completion: @escaping (ClientRuntime.SdkResult<GetRemoteAccessSessionOutputResponse, GetRemoteAccessSessionOutputError>) -> Void)
    /// Gets information about a run.
    func getRun(input: GetRunInput, completion: @escaping (ClientRuntime.SdkResult<GetRunOutputResponse, GetRunOutputError>) -> Void)
    /// Gets information about a suite.
    func getSuite(input: GetSuiteInput, completion: @escaping (ClientRuntime.SdkResult<GetSuiteOutputResponse, GetSuiteOutputError>) -> Void)
    /// Gets information about a test.
    func getTest(input: GetTestInput, completion: @escaping (ClientRuntime.SdkResult<GetTestOutputResponse, GetTestOutputError>) -> Void)
    /// Retrieves information about a Selenium testing project.
    func getTestGridProject(input: GetTestGridProjectInput, completion: @escaping (ClientRuntime.SdkResult<GetTestGridProjectOutputResponse, GetTestGridProjectOutputError>) -> Void)
    /// A session is an instance of a browser created through a RemoteWebDriver with the URL from CreateTestGridUrlResult$url. You can use the following to look up sessions:
    ///
    ///
    ///                The session ARN (GetTestGridSessionRequest$sessionArn).
    ///
    ///
    ///                The project ARN and a session ID (GetTestGridSessionRequest$projectArn and GetTestGridSessionRequest$sessionId).
    ///
    ///
    ///
    func getTestGridSession(input: GetTestGridSessionInput, completion: @escaping (ClientRuntime.SdkResult<GetTestGridSessionOutputResponse, GetTestGridSessionOutputError>) -> Void)
    /// Gets information about an upload.
    func getUpload(input: GetUploadInput, completion: @escaping (ClientRuntime.SdkResult<GetUploadOutputResponse, GetUploadOutputError>) -> Void)
    /// Returns information about the configuration settings for your Amazon Virtual Private
    ///             Cloud (VPC) endpoint.
    func getVPCEConfiguration(input: GetVPCEConfigurationInput, completion: @escaping (ClientRuntime.SdkResult<GetVPCEConfigurationOutputResponse, GetVPCEConfigurationOutputError>) -> Void)
    /// Installs an application to the device in a remote access session. For Android
    ///             applications, the file must be in .apk format. For iOS applications, the file must be in
    ///             .ipa format.
    func installToRemoteAccessSession(input: InstallToRemoteAccessSessionInput, completion: @escaping (ClientRuntime.SdkResult<InstallToRemoteAccessSessionOutputResponse, InstallToRemoteAccessSessionOutputError>) -> Void)
    /// Gets information about artifacts.
    func listArtifacts(input: ListArtifactsInput, completion: @escaping (ClientRuntime.SdkResult<ListArtifactsOutputResponse, ListArtifactsOutputError>) -> Void)
    /// Returns information about the private device instances associated with one or more AWS
    ///             accounts.
    func listDeviceInstances(input: ListDeviceInstancesInput, completion: @escaping (ClientRuntime.SdkResult<ListDeviceInstancesOutputResponse, ListDeviceInstancesOutputError>) -> Void)
    /// Gets information about device pools.
    func listDevicePools(input: ListDevicePoolsInput, completion: @escaping (ClientRuntime.SdkResult<ListDevicePoolsOutputResponse, ListDevicePoolsOutputError>) -> Void)
    /// Gets information about unique device types.
    func listDevices(input: ListDevicesInput, completion: @escaping (ClientRuntime.SdkResult<ListDevicesOutputResponse, ListDevicesOutputError>) -> Void)
    /// Returns information about all the instance profiles in an AWS account.
    func listInstanceProfiles(input: ListInstanceProfilesInput, completion: @escaping (ClientRuntime.SdkResult<ListInstanceProfilesOutputResponse, ListInstanceProfilesOutputError>) -> Void)
    /// Gets information about jobs for a given test run.
    func listJobs(input: ListJobsInput, completion: @escaping (ClientRuntime.SdkResult<ListJobsOutputResponse, ListJobsOutputError>) -> Void)
    /// Returns the list of available network profiles.
    func listNetworkProfiles(input: ListNetworkProfilesInput, completion: @escaping (ClientRuntime.SdkResult<ListNetworkProfilesOutputResponse, ListNetworkProfilesOutputError>) -> Void)
    /// Returns a list of offering promotions. Each offering promotion record contains the ID and description
    ///             of the promotion. The API returns a NotEligible error if the caller is not permitted to invoke
    ///             the operation. Contact <a href="mailto:aws-devicefarm-support@amazon.com">aws-devicefarm-support@amazon.com if you must be able to invoke this operation.
    func listOfferingPromotions(input: ListOfferingPromotionsInput, completion: @escaping (ClientRuntime.SdkResult<ListOfferingPromotionsOutputResponse, ListOfferingPromotionsOutputError>) -> Void)
    /// Returns a list of products or offerings that the user can manage through the API. Each offering record
    ///             indicates the recurring price per unit and the frequency for that offering. The API returns a
    ///                 NotEligible error if the user is not permitted to invoke the operation.  If you must be
    ///             able to invoke this operation, contact <a href="mailto:aws-devicefarm-support@amazon.com">aws-devicefarm-support@amazon.com.
    func listOfferings(input: ListOfferingsInput, completion: @escaping (ClientRuntime.SdkResult<ListOfferingsOutputResponse, ListOfferingsOutputError>) -> Void)
    /// Returns a list of all historical purchases, renewals, and system renewal transactions for an AWS
    ///             account. The list is paginated and ordered by a descending timestamp (most recent transactions are first).
    ///             The API returns a NotEligible error if the user is not permitted to invoke the operation. If
    ///             you must be able to invoke this operation, contact <a href="mailto:aws-devicefarm-support@amazon.com">aws-devicefarm-support@amazon.com.
    func listOfferingTransactions(input: ListOfferingTransactionsInput, completion: @escaping (ClientRuntime.SdkResult<ListOfferingTransactionsOutputResponse, ListOfferingTransactionsOutputError>) -> Void)
    /// Gets information about projects.
    func listProjects(input: ListProjectsInput, completion: @escaping (ClientRuntime.SdkResult<ListProjectsOutputResponse, ListProjectsOutputError>) -> Void)
    /// Returns a list of all currently running remote access sessions.
    func listRemoteAccessSessions(input: ListRemoteAccessSessionsInput, completion: @escaping (ClientRuntime.SdkResult<ListRemoteAccessSessionsOutputResponse, ListRemoteAccessSessionsOutputError>) -> Void)
    /// Gets information about runs, given an AWS Device Farm project ARN.
    func listRuns(input: ListRunsInput, completion: @escaping (ClientRuntime.SdkResult<ListRunsOutputResponse, ListRunsOutputError>) -> Void)
    /// Gets information about samples, given an AWS Device Farm job ARN.
    func listSamples(input: ListSamplesInput, completion: @escaping (ClientRuntime.SdkResult<ListSamplesOutputResponse, ListSamplesOutputError>) -> Void)
    /// Gets information about test suites for a given job.
    func listSuites(input: ListSuitesInput, completion: @escaping (ClientRuntime.SdkResult<ListSuitesOutputResponse, ListSuitesOutputError>) -> Void)
    /// List the tags for an AWS Device Farm resource.
    func listTagsForResource(input: ListTagsForResourceInput, completion: @escaping (ClientRuntime.SdkResult<ListTagsForResourceOutputResponse, ListTagsForResourceOutputError>) -> Void)
    /// Gets a list of all Selenium testing projects in your account.
    func listTestGridProjects(input: ListTestGridProjectsInput, completion: @escaping (ClientRuntime.SdkResult<ListTestGridProjectsOutputResponse, ListTestGridProjectsOutputError>) -> Void)
    /// Returns a list of the actions taken in a TestGridSession.
    func listTestGridSessionActions(input: ListTestGridSessionActionsInput, completion: @escaping (ClientRuntime.SdkResult<ListTestGridSessionActionsOutputResponse, ListTestGridSessionActionsOutputError>) -> Void)
    /// Retrieves a list of artifacts created during the session.
    func listTestGridSessionArtifacts(input: ListTestGridSessionArtifactsInput, completion: @escaping (ClientRuntime.SdkResult<ListTestGridSessionArtifactsOutputResponse, ListTestGridSessionArtifactsOutputError>) -> Void)
    /// Retrieves a list of sessions for a TestGridProject.
    func listTestGridSessions(input: ListTestGridSessionsInput, completion: @escaping (ClientRuntime.SdkResult<ListTestGridSessionsOutputResponse, ListTestGridSessionsOutputError>) -> Void)
    /// Gets information about tests in a given test suite.
    func listTests(input: ListTestsInput, completion: @escaping (ClientRuntime.SdkResult<ListTestsOutputResponse, ListTestsOutputError>) -> Void)
    /// Gets information about unique problems, such as exceptions or crashes.
    ///         Unique problems are defined as a single instance of an error across a run, job, or suite. For example,
    ///             if a call in your application consistently raises an exception (OutOfBoundsException in
    ///                 MyActivity.java:386), ListUniqueProblems returns a single entry instead of many
    ///             individual entries for that exception.
    func listUniqueProblems(input: ListUniqueProblemsInput, completion: @escaping (ClientRuntime.SdkResult<ListUniqueProblemsOutputResponse, ListUniqueProblemsOutputError>) -> Void)
    /// Gets information about uploads, given an AWS Device Farm project ARN.
    func listUploads(input: ListUploadsInput, completion: @escaping (ClientRuntime.SdkResult<ListUploadsOutputResponse, ListUploadsOutputError>) -> Void)
    /// Returns information about all Amazon Virtual Private Cloud (VPC) endpoint
    ///             configurations in the AWS account.
    func listVPCEConfigurations(input: ListVPCEConfigurationsInput, completion: @escaping (ClientRuntime.SdkResult<ListVPCEConfigurationsOutputResponse, ListVPCEConfigurationsOutputError>) -> Void)
    /// Immediately purchases offerings for an AWS account. Offerings renew with the latest total purchased
    ///             quantity for an offering, unless the renewal was overridden. The API returns a NotEligible
    ///             error if the user is not permitted to invoke the operation. If you must be able to invoke this operation,
    ///             contact <a href="mailto:aws-devicefarm-support@amazon.com">aws-devicefarm-support@amazon.com.
    func purchaseOffering(input: PurchaseOfferingInput, completion: @escaping (ClientRuntime.SdkResult<PurchaseOfferingOutputResponse, PurchaseOfferingOutputError>) -> Void)
    /// Explicitly sets the quantity of devices to renew for an offering, starting from the
    ///                 effectiveDate of the next period. The API returns a NotEligible error if the
    ///             user is not permitted to invoke the operation. If you must be able to invoke this operation, contact <a href="mailto:aws-devicefarm-support@amazon.com">aws-devicefarm-support@amazon.com.
    func renewOffering(input: RenewOfferingInput, completion: @escaping (ClientRuntime.SdkResult<RenewOfferingOutputResponse, RenewOfferingOutputError>) -> Void)
    /// Schedules a run.
    func scheduleRun(input: ScheduleRunInput, completion: @escaping (ClientRuntime.SdkResult<ScheduleRunOutputResponse, ScheduleRunOutputError>) -> Void)
    /// Initiates a stop request for the current job. AWS Device Farm immediately stops the job on the device
    ///             where tests have not started. You are not billed for this device. On the device where tests have started,
    ///             setup suite and teardown suite tests run to completion on the device. You are billed for setup, teardown,
    ///             and any tests that were in progress or already completed.
    func stopJob(input: StopJobInput, completion: @escaping (ClientRuntime.SdkResult<StopJobOutputResponse, StopJobOutputError>) -> Void)
    /// Ends a specified remote access session.
    func stopRemoteAccessSession(input: StopRemoteAccessSessionInput, completion: @escaping (ClientRuntime.SdkResult<StopRemoteAccessSessionOutputResponse, StopRemoteAccessSessionOutputError>) -> Void)
    /// Initiates a stop request for the current test run. AWS Device Farm immediately stops the run on devices
    ///             where tests have not started. You are not billed for these devices. On devices where tests have started
    ///             executing, setup suite and teardown suite tests run to completion on those devices. You are billed for
    ///             setup, teardown, and any tests that were in progress or already completed.
    func stopRun(input: StopRunInput, completion: @escaping (ClientRuntime.SdkResult<StopRunOutputResponse, StopRunOutputError>) -> Void)
    /// Associates the specified tags to a resource with the specified resourceArn. If existing tags
    ///             on a resource are not specified in the request parameters, they are not changed. When a resource is deleted,
    ///             the tags associated with that resource are also deleted.
    func tagResource(input: TagResourceInput, completion: @escaping (ClientRuntime.SdkResult<TagResourceOutputResponse, TagResourceOutputError>) -> Void)
    /// Deletes the specified tags from a resource.
    func untagResource(input: UntagResourceInput, completion: @escaping (ClientRuntime.SdkResult<UntagResourceOutputResponse, UntagResourceOutputError>) -> Void)
    /// Updates information about a private device instance.
    func updateDeviceInstance(input: UpdateDeviceInstanceInput, completion: @escaping (ClientRuntime.SdkResult<UpdateDeviceInstanceOutputResponse, UpdateDeviceInstanceOutputError>) -> Void)
    /// Modifies the name, description, and rules in a device pool given the attributes and
    ///             the pool ARN. Rule updates are all-or-nothing, meaning they can only be updated as a
    ///             whole (or not at all).
    func updateDevicePool(input: UpdateDevicePoolInput, completion: @escaping (ClientRuntime.SdkResult<UpdateDevicePoolOutputResponse, UpdateDevicePoolOutputError>) -> Void)
    /// Updates information about an existing private device instance profile.
    func updateInstanceProfile(input: UpdateInstanceProfileInput, completion: @escaping (ClientRuntime.SdkResult<UpdateInstanceProfileOutputResponse, UpdateInstanceProfileOutputError>) -> Void)
    /// Updates the network profile.
    func updateNetworkProfile(input: UpdateNetworkProfileInput, completion: @escaping (ClientRuntime.SdkResult<UpdateNetworkProfileOutputResponse, UpdateNetworkProfileOutputError>) -> Void)
    /// Modifies the specified project name, given the project ARN and a new
    ///             name.
    func updateProject(input: UpdateProjectInput, completion: @escaping (ClientRuntime.SdkResult<UpdateProjectOutputResponse, UpdateProjectOutputError>) -> Void)
    /// Change details of a project.
    func updateTestGridProject(input: UpdateTestGridProjectInput, completion: @escaping (ClientRuntime.SdkResult<UpdateTestGridProjectOutputResponse, UpdateTestGridProjectOutputError>) -> Void)
    /// Updates an uploaded test spec.
    func updateUpload(input: UpdateUploadInput, completion: @escaping (ClientRuntime.SdkResult<UpdateUploadOutputResponse, UpdateUploadOutputError>) -> Void)
    /// Updates information about an Amazon Virtual Private Cloud (VPC) endpoint configuration.
    func updateVPCEConfiguration(input: UpdateVPCEConfigurationInput, completion: @escaping (ClientRuntime.SdkResult<UpdateVPCEConfigurationOutputResponse, UpdateVPCEConfigurationOutputError>) -> Void)
}

public enum DeviceFarmClientTypes {}
