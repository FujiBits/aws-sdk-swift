// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

#if swift(>=5.5) && canImport(_Concurrency)
@available(macOS 12.0, iOS 15.0, tvOS 15.0, watchOS 8.0, macCatalyst 15.0, *)
public extension CloudHsmV2Client {
    /// Copy an AWS CloudHSM cluster backup to a different region.
    func copyBackupToRegion(input: CopyBackupToRegionInput) async throws -> CopyBackupToRegionOutputResponse
    {
        typealias copyBackupToRegionContinuation = CheckedContinuation<CopyBackupToRegionOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: copyBackupToRegionContinuation) in
            copyBackupToRegion(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Creates a new AWS CloudHSM cluster.
    func createCluster(input: CreateClusterInput) async throws -> CreateClusterOutputResponse
    {
        typealias createClusterContinuation = CheckedContinuation<CreateClusterOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: createClusterContinuation) in
            createCluster(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Creates a new hardware security module (HSM) in the specified AWS CloudHSM cluster.
    func createHsm(input: CreateHsmInput) async throws -> CreateHsmOutputResponse
    {
        typealias createHsmContinuation = CheckedContinuation<CreateHsmOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: createHsmContinuation) in
            createHsm(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Deletes a specified AWS CloudHSM backup. A backup can be restored up to 7 days after the DeleteBackup request is made. For more information on restoring a backup, see [RestoreBackup].
    func deleteBackup(input: DeleteBackupInput) async throws -> DeleteBackupOutputResponse
    {
        typealias deleteBackupContinuation = CheckedContinuation<DeleteBackupOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: deleteBackupContinuation) in
            deleteBackup(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Deletes the specified AWS CloudHSM cluster. Before you can delete a cluster, you must delete all HSMs in the cluster. To see if the cluster contains any HSMs, use [DescribeClusters]. To delete an HSM, use [DeleteHsm].
    func deleteCluster(input: DeleteClusterInput) async throws -> DeleteClusterOutputResponse
    {
        typealias deleteClusterContinuation = CheckedContinuation<DeleteClusterOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: deleteClusterContinuation) in
            deleteCluster(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Deletes the specified HSM. To specify an HSM, you can use its identifier (ID), the IP address of the HSM's elastic network interface (ENI), or the ID of the HSM's ENI. You need to specify only one of these values. To find these values, use [DescribeClusters].
    func deleteHsm(input: DeleteHsmInput) async throws -> DeleteHsmOutputResponse
    {
        typealias deleteHsmContinuation = CheckedContinuation<DeleteHsmOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: deleteHsmContinuation) in
            deleteHsm(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Gets information about backups of AWS CloudHSM clusters. This is a paginated operation, which means that each response might contain only a subset of all the backups. When the response contains only a subset of backups, it includes a NextToken value. Use this value in a subsequent DescribeBackups request to get more backups. When you receive a response with no NextToken (or an empty or null value), that means there are no more backups to get.
    func describeBackups(input: DescribeBackupsInput) async throws -> DescribeBackupsOutputResponse
    {
        typealias describeBackupsContinuation = CheckedContinuation<DescribeBackupsOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: describeBackupsContinuation) in
            describeBackups(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Gets information about AWS CloudHSM clusters. This is a paginated operation, which means that each response might contain only a subset of all the clusters. When the response contains only a subset of clusters, it includes a NextToken value. Use this value in a subsequent DescribeClusters request to get more clusters. When you receive a response with no NextToken (or an empty or null value), that means there are no more clusters to get.
    func describeClusters(input: DescribeClustersInput) async throws -> DescribeClustersOutputResponse
    {
        typealias describeClustersContinuation = CheckedContinuation<DescribeClustersOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: describeClustersContinuation) in
            describeClusters(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Claims an AWS CloudHSM cluster by submitting the cluster certificate issued by your issuing certificate authority (CA) and the CA's root certificate. Before you can claim a cluster, you must sign the cluster's certificate signing request (CSR) with your issuing CA. To get the cluster's CSR, use [DescribeClusters].
    func initializeCluster(input: InitializeClusterInput) async throws -> InitializeClusterOutputResponse
    {
        typealias initializeClusterContinuation = CheckedContinuation<InitializeClusterOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: initializeClusterContinuation) in
            initializeCluster(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Gets a list of tags for the specified AWS CloudHSM cluster. This is a paginated operation, which means that each response might contain only a subset of all the tags. When the response contains only a subset of tags, it includes a NextToken value. Use this value in a subsequent ListTags request to get more tags. When you receive a response with no NextToken (or an empty or null value), that means there are no more tags to get.
    func listTags(input: ListTagsInput) async throws -> ListTagsOutputResponse
    {
        typealias listTagsContinuation = CheckedContinuation<ListTagsOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: listTagsContinuation) in
            listTags(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Modifies attributes for AWS CloudHSM backup.
    func modifyBackupAttributes(input: ModifyBackupAttributesInput) async throws -> ModifyBackupAttributesOutputResponse
    {
        typealias modifyBackupAttributesContinuation = CheckedContinuation<ModifyBackupAttributesOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: modifyBackupAttributesContinuation) in
            modifyBackupAttributes(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Modifies AWS CloudHSM cluster.
    func modifyCluster(input: ModifyClusterInput) async throws -> ModifyClusterOutputResponse
    {
        typealias modifyClusterContinuation = CheckedContinuation<ModifyClusterOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: modifyClusterContinuation) in
            modifyCluster(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Restores a specified AWS CloudHSM backup that is in the PENDING_DELETION state. For mor information on deleting a backup, see [DeleteBackup].
    func restoreBackup(input: RestoreBackupInput) async throws -> RestoreBackupOutputResponse
    {
        typealias restoreBackupContinuation = CheckedContinuation<RestoreBackupOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: restoreBackupContinuation) in
            restoreBackup(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Adds or overwrites one or more tags for the specified AWS CloudHSM cluster.
    func tagResource(input: TagResourceInput) async throws -> TagResourceOutputResponse
    {
        typealias tagResourceContinuation = CheckedContinuation<TagResourceOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: tagResourceContinuation) in
            tagResource(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Removes the specified tag or tags from the specified AWS CloudHSM cluster.
    func untagResource(input: UntagResourceInput) async throws -> UntagResourceOutputResponse
    {
        typealias untagResourceContinuation = CheckedContinuation<UntagResourceOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: untagResourceContinuation) in
            untagResource(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

}
#endif
