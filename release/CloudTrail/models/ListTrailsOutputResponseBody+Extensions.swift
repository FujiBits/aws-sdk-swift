// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTrailsOutputResponseBody: Equatable {
    public let trails: [TrailInfo]?
    public let nextToken: String?
}

extension ListTrailsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case trails = "Trails"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let trailsContainer = try containerValues.decodeIfPresent([TrailInfo?].self, forKey: .trails)
        var trailsDecoded0:[TrailInfo]? = nil
        if let trailsContainer = trailsContainer {
            trailsDecoded0 = [TrailInfo]()
            for structure0 in trailsContainer {
                if let structure0 = structure0 {
                    trailsDecoded0?.append(structure0)
                }
            }
        }
        trails = trailsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
