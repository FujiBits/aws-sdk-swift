// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Contains information about the comma-separated value (CSV) file to select from.</p>
public struct CSVInput: Equatable {
    /// <p>A single character used to indicate that a row should be ignored when the character is
    ///             present at the start of that row.</p>
    public let comments: String?
    /// <p>A value used to separate individual fields from each other within a record.</p>
    public let fieldDelimiter: String?
    /// <p>Describes the first line of input. Valid values are <code>None</code>,
    ///                 <code>Ignore</code>, and <code>Use</code>.</p>
    public let fileHeaderInfo: FileHeaderInfo?
    /// <p>A value used as an escape character where the field delimiter is part of the
    ///             value.</p>
    public let quoteCharacter: String?
    /// <p>A single character used for escaping the quotation-mark character inside an already
    ///             escaped value.</p>
    public let quoteEscapeCharacter: String?
    /// <p>A value used to separate individual records from each other.</p>
    public let recordDelimiter: String?

    public init (
        comments: String? = nil,
        fieldDelimiter: String? = nil,
        fileHeaderInfo: FileHeaderInfo? = nil,
        quoteCharacter: String? = nil,
        quoteEscapeCharacter: String? = nil,
        recordDelimiter: String? = nil
    )
    {
        self.comments = comments
        self.fieldDelimiter = fieldDelimiter
        self.fileHeaderInfo = fileHeaderInfo
        self.quoteCharacter = quoteCharacter
        self.quoteEscapeCharacter = quoteEscapeCharacter
        self.recordDelimiter = recordDelimiter
    }
}

extension CSVInput: CustomDebugStringConvertible {
    public var debugDescription: String {
        "CSVInput(comments: \(String(describing: comments)), fieldDelimiter: \(String(describing: fieldDelimiter)), fileHeaderInfo: \(String(describing: fileHeaderInfo)), quoteCharacter: \(String(describing: quoteCharacter)), quoteEscapeCharacter: \(String(describing: quoteEscapeCharacter)), recordDelimiter: \(String(describing: recordDelimiter)))"}
}
