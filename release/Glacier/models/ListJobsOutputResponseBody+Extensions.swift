// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListJobsOutputResponseBody: Equatable {
    public let jobList: [GlacierJobDescription]?
    public let marker: String?
}

extension ListJobsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case jobList = "JobList"
        case marker = "Marker"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let jobListContainer = try containerValues.decodeIfPresent([GlacierJobDescription?].self, forKey: .jobList)
        var jobListDecoded0:[GlacierJobDescription]? = nil
        if let jobListContainer = jobListContainer {
            jobListDecoded0 = [GlacierJobDescription]()
            for structure0 in jobListContainer {
                if let structure0 = structure0 {
                    jobListDecoded0?.append(structure0)
                }
            }
        }
        jobList = jobListDecoded0
        let markerDecoded = try containerValues.decodeIfPresent(String.self, forKey: .marker)
        marker = markerDecoded
    }
}
