// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Provides options for initiating a multipart upload to an Amazon S3 Glacier
///          vault.</p>
public struct InitiateMultipartUploadInput: Equatable {
    /// <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the
    ///          vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'
    ///          (hyphen), in which case Amazon S3 Glacier uses the AWS account ID associated with the
    ///          credentials used to sign the request. If you use an account ID, do not include any hyphens
    ///          ('-') in the ID. </p>
    public let accountId: String?
    /// <p>The archive description that you are uploading in parts.</p>
    ///          <p>The part size must be a megabyte (1024 KB) multiplied by a power of 2, for example
    ///          1048576 (1 MB), 2097152 (2 MB), 4194304 (4 MB), 8388608 (8 MB), and so on. The minimum
    ///          allowable part size is 1 MB, and the maximum is 4 GB (4096 MB).</p>
    public let archiveDescription: String?
    /// <p>The size of each part except the last, in bytes. The last part can be smaller than
    ///          this part size.</p>
    public let partSize: String?
    /// <p>The name of the vault.</p>
    public let vaultName: String?

    public init (
        accountId: String? = nil,
        archiveDescription: String? = nil,
        partSize: String? = nil,
        vaultName: String? = nil
    )
    {
        self.accountId = accountId
        self.archiveDescription = archiveDescription
        self.partSize = partSize
        self.vaultName = vaultName
    }
}

extension InitiateMultipartUploadInput: CustomDebugStringConvertible {
    public var debugDescription: String {
        "InitiateMultipartUploadInput(accountId: \(String(describing: accountId)), archiveDescription: \(String(describing: archiveDescription)), partSize: \(String(describing: partSize)), vaultName: \(String(describing: vaultName)))"}
}
