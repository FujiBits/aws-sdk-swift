// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Provides options for retrieving a job list for an Amazon S3 Glacier vault.</p>
public struct ListJobsInput: Equatable {
    /// <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the
    ///          vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'
    ///          (hyphen), in which case Amazon S3 Glacier uses the AWS account ID associated with the
    ///          credentials used to sign the request. If you use an account ID, do not include any hyphens
    ///          ('-') in the ID. </p>
    public let accountId: String?
    /// <p>The state of the jobs to return. You can specify <code>true</code> or
    ///             <code>false</code>.</p>
    public let completed: String?
    /// <p>The maximum number of jobs to be returned. The default limit is 50. The number of
    ///          jobs returned might be fewer than the specified limit, but the number of returned jobs
    ///          never exceeds the limit.</p>
    public let limit: Int?
    /// <p>An opaque string used for pagination. This value specifies the job at which the
    ///          listing of jobs should begin. Get the marker value from a previous List Jobs response. You
    ///          only need to include the marker if you are continuing the pagination of results started in
    ///          a previous List Jobs request.</p>
    public let marker: String?
    /// <p>The type of job status to return. You can specify the following values:
    ///             <code>InProgress</code>, <code>Succeeded</code>, or <code>Failed</code>.</p>
    public let statuscode: String?
    /// <p>The name of the vault.</p>
    public let vaultName: String?

    public init (
        accountId: String? = nil,
        completed: String? = nil,
        limit: Int? = nil,
        marker: String? = nil,
        statuscode: String? = nil,
        vaultName: String? = nil
    )
    {
        self.accountId = accountId
        self.completed = completed
        self.limit = limit
        self.marker = marker
        self.statuscode = statuscode
        self.vaultName = vaultName
    }
}

extension ListJobsInput: CustomDebugStringConvertible {
    public var debugDescription: String {
        "ListJobsInput(accountId: \(String(describing: accountId)), completed: \(String(describing: completed)), limit: \(String(describing: limit)), marker: \(String(describing: marker)), statuscode: \(String(describing: statuscode)), vaultName: \(String(describing: vaultName)))"}
}
