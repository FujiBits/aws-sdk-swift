// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListVaultsOutputResponseBody: Equatable {
    public let vaultList: [DescribeVaultOutput]?
    public let marker: String?
}

extension ListVaultsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case marker = "Marker"
        case vaultList = "VaultList"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let vaultListContainer = try containerValues.decodeIfPresent([DescribeVaultOutput?].self, forKey: .vaultList)
        var vaultListDecoded0:[DescribeVaultOutput]? = nil
        if let vaultListContainer = vaultListContainer {
            vaultListDecoded0 = [DescribeVaultOutput]()
            for structure0 in vaultListContainer {
                if let structure0 = structure0 {
                    vaultListDecoded0?.append(structure0)
                }
            }
        }
        vaultList = vaultListDecoded0
        let markerDecoded = try containerValues.decodeIfPresent(String.self, forKey: .marker)
        marker = markerDecoded
    }
}
