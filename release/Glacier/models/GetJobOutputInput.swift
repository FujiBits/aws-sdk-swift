// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Provides options for downloading output of an Amazon S3 Glacier job.</p>
public struct GetJobOutputInput: Equatable {
    /// <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the
    ///          vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'
    ///          (hyphen), in which case Amazon S3 Glacier uses the AWS account ID associated with the
    ///          credentials used to sign the request. If you use an account ID, do not include any hyphens
    ///          ('-') in the ID.</p>
    public let accountId: String?
    /// <p>The job ID whose data is downloaded.</p>
    public let jobId: String?
    /// <p>The range of bytes to retrieve from the output. For example, if you want to download
    ///          the first 1,048,576 bytes, specify the range as <code>bytes=0-1048575</code>. By default, this operation
    ///          downloads the entire output.</p>
    ///
    ///          <p>If the job output is large, then you can use a range to
    ///          retrieve a portion of the output. This allows you to download the entire output in smaller
    ///          chunks of bytes. For example, suppose you have 1 GB of job output you want to download and
    ///          you decide to download 128 MB chunks of data at a time, which is a total of eight Get Job
    ///          Output requests. You use the following process to download the job output:</p>
    ///
    ///          <ol>
    ///             <li>
    ///                <p>Download a 128 MB chunk of output by specifying the appropriate byte range.
    ///                   Verify that all 128 MB of data was received.</p>
    ///             </li>
    ///             <li>
    ///                <p>Along with the data, the response includes a SHA256 tree hash of the payload.
    ///                   You compute the checksum of the payload on the client and compare it with the
    ///                   checksum you received in the response to ensure you received all the expected
    ///                   data.</p>
    ///             </li>
    ///             <li>
    ///                <p>Repeat steps 1 and 2 for all the eight 128 MB chunks of output data, each time
    ///                   specifying the appropriate byte range.</p>
    ///             </li>
    ///             <li>
    ///                <p>After downloading all the parts of the job output, you have a list of eight
    ///                   checksum values. Compute the tree hash of these values to find the checksum of the
    ///                   entire output. Using the <a>DescribeJob</a> API, obtain job information of
    ///                   the job that provided you the output. The response includes the checksum of the
    ///                   entire archive stored in Amazon S3 Glacier. You compare this value with the checksum you
    ///                   computed to ensure you have downloaded the entire archive content with no
    ///                   errors.</p>
    ///                <p></p>
    ///             </li>
    ///          </ol>
    public let range: String?
    /// <p>The name of the vault.</p>
    public let vaultName: String?

    public init (
        accountId: String? = nil,
        jobId: String? = nil,
        range: String? = nil,
        vaultName: String? = nil
    )
    {
        self.accountId = accountId
        self.jobId = jobId
        self.range = range
        self.vaultName = vaultName
    }
}

extension GetJobOutputInput: CustomDebugStringConvertible {
    public var debugDescription: String {
        "GetJobOutputInput(accountId: \(String(describing: accountId)), jobId: \(String(describing: jobId)), range: \(String(describing: range)), vaultName: \(String(describing: vaultName)))"}
}
