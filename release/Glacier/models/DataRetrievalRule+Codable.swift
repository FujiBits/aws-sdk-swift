// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DataRetrievalRule: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case bytesPerHour = "BytesPerHour"
        case strategy = "Strategy"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let bytesPerHour = bytesPerHour {
            try encodeContainer.encode(bytesPerHour, forKey: .bytesPerHour)
        }
        if let strategy = strategy {
            try encodeContainer.encode(strategy, forKey: .strategy)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let strategyDecoded = try containerValues.decodeIfPresent(String.self, forKey: .strategy)
        strategy = strategyDecoded
        let bytesPerHourDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .bytesPerHour)
        bytesPerHour = bytesPerHourDecoded
    }
}
