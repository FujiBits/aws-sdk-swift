// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListProvisionedCapacityOutputResponseBody: Equatable {
    public let provisionedCapacityList: [ProvisionedCapacityDescription]?
}

extension ListProvisionedCapacityOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case provisionedCapacityList = "ProvisionedCapacityList"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let provisionedCapacityListContainer = try containerValues.decodeIfPresent([ProvisionedCapacityDescription?].self, forKey: .provisionedCapacityList)
        var provisionedCapacityListDecoded0:[ProvisionedCapacityDescription]? = nil
        if let provisionedCapacityListContainer = provisionedCapacityListContainer {
            provisionedCapacityListDecoded0 = [ProvisionedCapacityDescription]()
            for structure0 in provisionedCapacityListContainer {
                if let structure0 = structure0 {
                    provisionedCapacityListDecoded0?.append(structure0)
                }
            }
        }
        provisionedCapacityList = provisionedCapacityListDecoded0
    }
}
