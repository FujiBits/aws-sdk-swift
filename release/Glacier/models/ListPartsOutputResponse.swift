// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Contains the Amazon S3 Glacier response to your request.</p>
public struct ListPartsOutputResponse: Equatable {
    /// <p>The description of the archive that was specified in the Initiate Multipart Upload
    ///          request.</p>
    public let archiveDescription: String?
    /// <p>The UTC time at which the multipart upload was initiated.</p>
    public let creationDate: String?
    /// <p>An opaque string that represents where to continue pagination of the results. You use
    ///          the marker in a new List Parts request to obtain more jobs in the list. If there are no
    ///          more parts, this value is <code>null</code>.</p>
    public let marker: String?
    /// <p>The ID of the upload to which the parts are associated.</p>
    public let multipartUploadId: String?
    /// <p>The part size in bytes. This is the same value that you specified in the Initiate
    ///          Multipart Upload request.</p>
    public let partSizeInBytes: Int
    /// <p>A list of the part sizes of the multipart upload. Each object in the array contains a
    ///          <code>RangeBytes</code> and <code>sha256-tree-hash</code> name/value
    ///          pair.</p>
    public let parts: [PartListElement]?
    /// <p>The Amazon Resource Name (ARN) of the vault to which the multipart upload was
    ///          initiated.</p>
    public let vaultARN: String?

    public init (
        archiveDescription: String? = nil,
        creationDate: String? = nil,
        marker: String? = nil,
        multipartUploadId: String? = nil,
        partSizeInBytes: Int = 0,
        parts: [PartListElement]? = nil,
        vaultARN: String? = nil
    )
    {
        self.archiveDescription = archiveDescription
        self.creationDate = creationDate
        self.marker = marker
        self.multipartUploadId = multipartUploadId
        self.partSizeInBytes = partSizeInBytes
        self.parts = parts
        self.vaultARN = vaultARN
    }
}

extension ListPartsOutputResponse: CustomDebugStringConvertible {
    public var debugDescription: String {
        "ListPartsOutputResponse(archiveDescription: \(String(describing: archiveDescription)), creationDate: \(String(describing: creationDate)), marker: \(String(describing: marker)), multipartUploadId: \(String(describing: multipartUploadId)), partSizeInBytes: \(String(describing: partSizeInBytes)), parts: \(String(describing: parts)), vaultARN: \(String(describing: vaultARN)))"}
}
