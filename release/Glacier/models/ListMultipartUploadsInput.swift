// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Provides options for retrieving list of in-progress multipart uploads for an Amazon
///          Glacier vault.</p>
public struct ListMultipartUploadsInput: Equatable {
    /// <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the
    ///          vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'
    ///          (hyphen), in which case Amazon S3 Glacier uses the AWS account ID associated with the
    ///          credentials used to sign the request. If you use an account ID, do not include any hyphens
    ///          ('-') in the ID. </p>
    public let accountId: String?
    /// <p>Specifies the maximum number of uploads returned in the response body. If this value
    ///          is not specified, the List Uploads operation returns up to 50 uploads.</p>
    public let limit: Int?
    /// <p>An opaque string used for pagination. This value specifies the upload at which the
    ///          listing of uploads should begin. Get the marker value from a previous List Uploads
    ///          response. You need only include the marker if you are continuing the pagination of results
    ///          started in a previous List Uploads request.</p>
    public let marker: String?
    /// <p>The name of the vault.</p>
    public let vaultName: String?

    public init (
        accountId: String? = nil,
        limit: Int? = nil,
        marker: String? = nil,
        vaultName: String? = nil
    )
    {
        self.accountId = accountId
        self.limit = limit
        self.marker = marker
        self.vaultName = vaultName
    }
}

extension ListMultipartUploadsInput: CustomDebugStringConvertible {
    public var debugDescription: String {
        "ListMultipartUploadsInput(accountId: \(String(describing: accountId)), limit: \(String(describing: limit)), marker: \(String(describing: marker)), vaultName: \(String(describing: vaultName)))"}
}
