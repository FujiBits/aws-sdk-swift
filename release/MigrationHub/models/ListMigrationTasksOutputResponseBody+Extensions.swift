// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListMigrationTasksOutputResponseBody: Equatable {
    public let nextToken: String?
    public let migrationTaskSummaryList: [MigrationTaskSummary]?
}

extension ListMigrationTasksOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case migrationTaskSummaryList = "MigrationTaskSummaryList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let migrationTaskSummaryListContainer = try containerValues.decodeIfPresent([MigrationTaskSummary?].self, forKey: .migrationTaskSummaryList)
        var migrationTaskSummaryListDecoded0:[MigrationTaskSummary]? = nil
        if let migrationTaskSummaryListContainer = migrationTaskSummaryListContainer {
            migrationTaskSummaryListDecoded0 = [MigrationTaskSummary]()
            for structure0 in migrationTaskSummaryListContainer {
                if let structure0 = structure0 {
                    migrationTaskSummaryListDecoded0?.append(structure0)
                }
            }
        }
        migrationTaskSummaryList = migrationTaskSummaryListDecoded0
    }
}
