// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListControlsOutputResponseBody: Equatable {
    public let controlMetadataList: [ControlMetadata]?
    public let nextToken: String?
}

extension ListControlsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case controlMetadataList
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let controlMetadataListContainer = try containerValues.decodeIfPresent([ControlMetadata?].self, forKey: .controlMetadataList)
        var controlMetadataListDecoded0:[ControlMetadata]? = nil
        if let controlMetadataListContainer = controlMetadataListContainer {
            controlMetadataListDecoded0 = [ControlMetadata]()
            for structure0 in controlMetadataListContainer {
                if let structure0 = structure0 {
                    controlMetadataListDecoded0?.append(structure0)
                }
            }
        }
        controlMetadataList = controlMetadataListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
