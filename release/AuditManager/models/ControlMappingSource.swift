// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>
///    The data source that determines from where AWS Audit Manager collects evidence for the control.
/// </p>
public struct ControlMappingSource: Equatable {
    /// <p>
    /// The description of the specified source.
    /// </p>
    public let sourceDescription: String?
    /// <p>
    ///          The frequency of evidence collection for the specified control mapping source.
    ///       </p>
    public let sourceFrequency: SourceFrequency?
    /// <p>
    /// The unique identifier for the specified source.
    /// </p>
    public let sourceId: String?
    /// <p>
    /// The keyword to search for in AWS CloudTrail logs, AWS Config rules, AWS Security Hub checks, and AWS API names.
    /// </p>
    public let sourceKeyword: SourceKeyword?
    /// <p>
    /// The name of the specified source.
    /// </p>
    public let sourceName: String?
    /// <p>
    ///    The setup option for the data source, which reflects if the evidence collection is automated or manual.
    /// </p>
    public let sourceSetUpOption: SourceSetUpOption?
    /// <p>
    ///    Specifies one of the five types of data sources for evidence collection.
    /// </p>
    public let sourceType: SourceType?
    /// <p>
    ///          The instructions for troubleshooting the specified control.
    ///       </p>
    public let troubleshootingText: String?

    public init (
        sourceDescription: String? = nil,
        sourceFrequency: SourceFrequency? = nil,
        sourceId: String? = nil,
        sourceKeyword: SourceKeyword? = nil,
        sourceName: String? = nil,
        sourceSetUpOption: SourceSetUpOption? = nil,
        sourceType: SourceType? = nil,
        troubleshootingText: String? = nil
    )
    {
        self.sourceDescription = sourceDescription
        self.sourceFrequency = sourceFrequency
        self.sourceId = sourceId
        self.sourceKeyword = sourceKeyword
        self.sourceName = sourceName
        self.sourceSetUpOption = sourceSetUpOption
        self.sourceType = sourceType
        self.troubleshootingText = troubleshootingText
    }
}

extension ControlMappingSource: CustomDebugStringConvertible {
    public var debugDescription: String {
        "ControlMappingSource(sourceDescription: \(String(describing: sourceDescription)), sourceFrequency: \(String(describing: sourceFrequency)), sourceId: \(String(describing: sourceId)), sourceKeyword: \(String(describing: sourceKeyword)), sourceName: \(String(describing: sourceName)), sourceSetUpOption: \(String(describing: sourceSetUpOption)), sourceType: \(String(describing: sourceType)), troubleshootingText: \(String(describing: troubleshootingText)))"}
}
