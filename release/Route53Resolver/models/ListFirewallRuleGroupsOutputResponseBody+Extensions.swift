// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListFirewallRuleGroupsOutputResponseBody: Equatable {
    public let nextToken: String?
    public let firewallRuleGroups: [FirewallRuleGroupMetadata]?
}

extension ListFirewallRuleGroupsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case firewallRuleGroups = "FirewallRuleGroups"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let firewallRuleGroupsContainer = try containerValues.decodeIfPresent([FirewallRuleGroupMetadata?].self, forKey: .firewallRuleGroups)
        var firewallRuleGroupsDecoded0:[FirewallRuleGroupMetadata]? = nil
        if let firewallRuleGroupsContainer = firewallRuleGroupsContainer {
            firewallRuleGroupsDecoded0 = [FirewallRuleGroupMetadata]()
            for structure0 in firewallRuleGroupsContainer {
                if let structure0 = structure0 {
                    firewallRuleGroupsDecoded0?.append(structure0)
                }
            }
        }
        firewallRuleGroups = firewallRuleGroupsDecoded0
    }
}
