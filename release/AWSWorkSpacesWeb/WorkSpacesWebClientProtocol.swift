// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// WorkSpaces Web is a low cost, fully managed WorkSpace built specifically to facilitate secure, web-based workloads. WorkSpaces Web makes it easy for customers to safely provide their employees with access to internal websites and SaaS web applications without the administrative burden of appliances or specialized client software. WorkSpaces Web provides simple policy tools tailored for user interactions, while offloading common tasks like capacity management, scaling, and maintaining browser images.
public protocol WorkSpacesWebClientProtocol {
    /// Associates a browser settings resource with a web portal.
    func associateBrowserSettings(input: AssociateBrowserSettingsInput, completion: @escaping (ClientRuntime.SdkResult<AssociateBrowserSettingsOutputResponse, AssociateBrowserSettingsOutputError>) -> Void)
    /// Associates a network settings resource with a web portal.
    func associateNetworkSettings(input: AssociateNetworkSettingsInput, completion: @escaping (ClientRuntime.SdkResult<AssociateNetworkSettingsOutputResponse, AssociateNetworkSettingsOutputError>) -> Void)
    /// Associates a trust store with a web portal.
    func associateTrustStore(input: AssociateTrustStoreInput, completion: @escaping (ClientRuntime.SdkResult<AssociateTrustStoreOutputResponse, AssociateTrustStoreOutputError>) -> Void)
    /// Associates a user settings resource with a web portal.
    func associateUserSettings(input: AssociateUserSettingsInput, completion: @escaping (ClientRuntime.SdkResult<AssociateUserSettingsOutputResponse, AssociateUserSettingsOutputError>) -> Void)
    /// Creates a browser settings resource that can be associated with a web portal. Once associated with a web portal, browser settings control how the browser will behave once a user starts a streaming session for the web portal.
    func createBrowserSettings(input: CreateBrowserSettingsInput, completion: @escaping (ClientRuntime.SdkResult<CreateBrowserSettingsOutputResponse, CreateBrowserSettingsOutputError>) -> Void)
    /// Creates an identity provider resource that is then associated with a web portal.
    func createIdentityProvider(input: CreateIdentityProviderInput, completion: @escaping (ClientRuntime.SdkResult<CreateIdentityProviderOutputResponse, CreateIdentityProviderOutputError>) -> Void)
    /// Creates a network settings resource that can be associated with a web portal. Once associated with a web portal, network settings define how streaming instances will connect with your specified VPC.
    func createNetworkSettings(input: CreateNetworkSettingsInput, completion: @escaping (ClientRuntime.SdkResult<CreateNetworkSettingsOutputResponse, CreateNetworkSettingsOutputError>) -> Void)
    /// Creates a web portal.
    func createPortal(input: CreatePortalInput, completion: @escaping (ClientRuntime.SdkResult<CreatePortalOutputResponse, CreatePortalOutputError>) -> Void)
    /// Creates a trust store that can be associated with a web portal. A trust store contains certificate authority (CA) certificates. Once associated with a web portal, the browser in a streaming session will recognize certificates that have been issued using any of the CAs in the trust store. If your organization has internal websites that use certificates issued by private CAs, you should add the private CA certificate to the trust store.
    func createTrustStore(input: CreateTrustStoreInput, completion: @escaping (ClientRuntime.SdkResult<CreateTrustStoreOutputResponse, CreateTrustStoreOutputError>) -> Void)
    /// Creates a user settings resource that can be associated with a web portal. Once associated with a web portal, user settings control how users can transfer data between a streaming session and the their local devices.
    func createUserSettings(input: CreateUserSettingsInput, completion: @escaping (ClientRuntime.SdkResult<CreateUserSettingsOutputResponse, CreateUserSettingsOutputError>) -> Void)
    /// Deletes browser settings.
    func deleteBrowserSettings(input: DeleteBrowserSettingsInput, completion: @escaping (ClientRuntime.SdkResult<DeleteBrowserSettingsOutputResponse, DeleteBrowserSettingsOutputError>) -> Void)
    /// Deletes the identity provider.
    func deleteIdentityProvider(input: DeleteIdentityProviderInput, completion: @escaping (ClientRuntime.SdkResult<DeleteIdentityProviderOutputResponse, DeleteIdentityProviderOutputError>) -> Void)
    /// Deletes network settings.
    func deleteNetworkSettings(input: DeleteNetworkSettingsInput, completion: @escaping (ClientRuntime.SdkResult<DeleteNetworkSettingsOutputResponse, DeleteNetworkSettingsOutputError>) -> Void)
    /// Deletes a web portal.
    func deletePortal(input: DeletePortalInput, completion: @escaping (ClientRuntime.SdkResult<DeletePortalOutputResponse, DeletePortalOutputError>) -> Void)
    /// Deletes the trust store.
    func deleteTrustStore(input: DeleteTrustStoreInput, completion: @escaping (ClientRuntime.SdkResult<DeleteTrustStoreOutputResponse, DeleteTrustStoreOutputError>) -> Void)
    /// Deletes user settings.
    func deleteUserSettings(input: DeleteUserSettingsInput, completion: @escaping (ClientRuntime.SdkResult<DeleteUserSettingsOutputResponse, DeleteUserSettingsOutputError>) -> Void)
    /// Disassociates browser settings from a web portal.
    func disassociateBrowserSettings(input: DisassociateBrowserSettingsInput, completion: @escaping (ClientRuntime.SdkResult<DisassociateBrowserSettingsOutputResponse, DisassociateBrowserSettingsOutputError>) -> Void)
    /// Disassociates network settings from a web portal.
    func disassociateNetworkSettings(input: DisassociateNetworkSettingsInput, completion: @escaping (ClientRuntime.SdkResult<DisassociateNetworkSettingsOutputResponse, DisassociateNetworkSettingsOutputError>) -> Void)
    /// Disassociates a trust store from a web portal.
    func disassociateTrustStore(input: DisassociateTrustStoreInput, completion: @escaping (ClientRuntime.SdkResult<DisassociateTrustStoreOutputResponse, DisassociateTrustStoreOutputError>) -> Void)
    /// Disassociates user settings from a web portal.
    func disassociateUserSettings(input: DisassociateUserSettingsInput, completion: @escaping (ClientRuntime.SdkResult<DisassociateUserSettingsOutputResponse, DisassociateUserSettingsOutputError>) -> Void)
    /// Gets browser settings.
    func getBrowserSettings(input: GetBrowserSettingsInput, completion: @escaping (ClientRuntime.SdkResult<GetBrowserSettingsOutputResponse, GetBrowserSettingsOutputError>) -> Void)
    /// Gets the identity provider.
    func getIdentityProvider(input: GetIdentityProviderInput, completion: @escaping (ClientRuntime.SdkResult<GetIdentityProviderOutputResponse, GetIdentityProviderOutputError>) -> Void)
    /// Gets the network settings.
    func getNetworkSettings(input: GetNetworkSettingsInput, completion: @escaping (ClientRuntime.SdkResult<GetNetworkSettingsOutputResponse, GetNetworkSettingsOutputError>) -> Void)
    /// Gets the web portal.
    func getPortal(input: GetPortalInput, completion: @escaping (ClientRuntime.SdkResult<GetPortalOutputResponse, GetPortalOutputError>) -> Void)
    /// Gets the service provider metadata.
    func getPortalServiceProviderMetadata(input: GetPortalServiceProviderMetadataInput, completion: @escaping (ClientRuntime.SdkResult<GetPortalServiceProviderMetadataOutputResponse, GetPortalServiceProviderMetadataOutputError>) -> Void)
    /// Gets the trust store.
    func getTrustStore(input: GetTrustStoreInput, completion: @escaping (ClientRuntime.SdkResult<GetTrustStoreOutputResponse, GetTrustStoreOutputError>) -> Void)
    /// Gets the trust store certificate.
    func getTrustStoreCertificate(input: GetTrustStoreCertificateInput, completion: @escaping (ClientRuntime.SdkResult<GetTrustStoreCertificateOutputResponse, GetTrustStoreCertificateOutputError>) -> Void)
    /// Gets user settings.
    func getUserSettings(input: GetUserSettingsInput, completion: @escaping (ClientRuntime.SdkResult<GetUserSettingsOutputResponse, GetUserSettingsOutputError>) -> Void)
    /// Retrieves a list of browser settings.
    func listBrowserSettings(input: ListBrowserSettingsInput, completion: @escaping (ClientRuntime.SdkResult<ListBrowserSettingsOutputResponse, ListBrowserSettingsOutputError>) -> Void)
    /// Retrieves a list of identity providers for a specific web portal.
    func listIdentityProviders(input: ListIdentityProvidersInput, completion: @escaping (ClientRuntime.SdkResult<ListIdentityProvidersOutputResponse, ListIdentityProvidersOutputError>) -> Void)
    /// Retrieves a list of network settings.
    func listNetworkSettings(input: ListNetworkSettingsInput, completion: @escaping (ClientRuntime.SdkResult<ListNetworkSettingsOutputResponse, ListNetworkSettingsOutputError>) -> Void)
    /// Retrieves a list or web portals.
    func listPortals(input: ListPortalsInput, completion: @escaping (ClientRuntime.SdkResult<ListPortalsOutputResponse, ListPortalsOutputError>) -> Void)
    /// Retrieves a list of tags for a resource.
    func listTagsForResource(input: ListTagsForResourceInput, completion: @escaping (ClientRuntime.SdkResult<ListTagsForResourceOutputResponse, ListTagsForResourceOutputError>) -> Void)
    /// Retrieves a list of trust store certificates.
    func listTrustStoreCertificates(input: ListTrustStoreCertificatesInput, completion: @escaping (ClientRuntime.SdkResult<ListTrustStoreCertificatesOutputResponse, ListTrustStoreCertificatesOutputError>) -> Void)
    /// Retrieves a list of trust stores.
    func listTrustStores(input: ListTrustStoresInput, completion: @escaping (ClientRuntime.SdkResult<ListTrustStoresOutputResponse, ListTrustStoresOutputError>) -> Void)
    /// Retrieves a list of user settings.
    func listUserSettings(input: ListUserSettingsInput, completion: @escaping (ClientRuntime.SdkResult<ListUserSettingsOutputResponse, ListUserSettingsOutputError>) -> Void)
    /// Adds or overwrites one or more tags for the specified resource.
    func tagResource(input: TagResourceInput, completion: @escaping (ClientRuntime.SdkResult<TagResourceOutputResponse, TagResourceOutputError>) -> Void)
    /// Removes one or more tags from the specified resource.
    func untagResource(input: UntagResourceInput, completion: @escaping (ClientRuntime.SdkResult<UntagResourceOutputResponse, UntagResourceOutputError>) -> Void)
    /// Updates browser settings.
    func updateBrowserSettings(input: UpdateBrowserSettingsInput, completion: @escaping (ClientRuntime.SdkResult<UpdateBrowserSettingsOutputResponse, UpdateBrowserSettingsOutputError>) -> Void)
    /// Updates the identity provider.
    func updateIdentityProvider(input: UpdateIdentityProviderInput, completion: @escaping (ClientRuntime.SdkResult<UpdateIdentityProviderOutputResponse, UpdateIdentityProviderOutputError>) -> Void)
    /// Updates network settings.
    func updateNetworkSettings(input: UpdateNetworkSettingsInput, completion: @escaping (ClientRuntime.SdkResult<UpdateNetworkSettingsOutputResponse, UpdateNetworkSettingsOutputError>) -> Void)
    /// Updates a web portal.
    func updatePortal(input: UpdatePortalInput, completion: @escaping (ClientRuntime.SdkResult<UpdatePortalOutputResponse, UpdatePortalOutputError>) -> Void)
    /// Updates the trust store.
    func updateTrustStore(input: UpdateTrustStoreInput, completion: @escaping (ClientRuntime.SdkResult<UpdateTrustStoreOutputResponse, UpdateTrustStoreOutputError>) -> Void)
    /// Updates the user settings.
    func updateUserSettings(input: UpdateUserSettingsInput, completion: @escaping (ClientRuntime.SdkResult<UpdateUserSettingsOutputResponse, UpdateUserSettingsOutputError>) -> Void)
}

public enum WorkSpacesWebClientTypes {}
