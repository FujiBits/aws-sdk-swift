// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>A collection of attributes that are applied to all active Security Hub-aggregated findings and
///          that result in a subset of findings that are included in this insight.</p>
///          <p>You can filter by up to 10 finding attributes. For each attribute, you can provide up to
///          20 filter values.</p>
public struct AwsSecurityFindingFilters: Equatable {
    /// <p>The AWS account ID that a finding is generated in.</p>
    public let awsAccountId: [StringFilter]?
    /// <p>The name of the findings provider (company) that owns the solution (product) that
    ///          generates findings.</p>
    public let companyName: [StringFilter]?
    /// <p>Exclusive to findings that are generated as the result of a check run against a specific
    ///          rule in a supported standard, such as CIS AWS Foundations. Contains security
    ///          standard-related finding details.</p>
    public let complianceStatus: [StringFilter]?
    /// <p>A finding's confidence. Confidence is defined as the likelihood that a finding
    ///          accurately identifies the behavior or issue that it was intended to identify.</p>
    ///          <p>Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent
    ///          confidence and 100 means 100 percent confidence.</p>
    public let confidence: [NumberFilter]?
    /// <p>An ISO8601-formatted timestamp that indicates when the security-findings provider
    ///          captured the potential security issue that a finding captured.</p>
    public let createdAt: [DateFilter]?
    /// <p>The level of importance assigned to the resources associated with the finding.</p>
    ///          <p>A score of 0 means that the underlying resources have no criticality, and a score of 100
    ///          is reserved for the most critical resources.</p>
    public let criticality: [NumberFilter]?
    /// <p>A finding's description.</p>
    public let description: [StringFilter]?
    /// <p>The finding provider value for the finding confidence. Confidence is defined as the likelihood
    ///          that a finding accurately identifies the behavior or issue that it was intended to
    ///          identify.</p>
    ///          <p>Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent
    ///          confidence and 100 means 100 percent confidence.</p>
    public let findingProviderFieldsConfidence: [NumberFilter]?
    /// <p>The finding provider value for the level of importance assigned to the resources associated with
    ///          the findings.</p>
    ///          <p>A score of 0 means that the underlying resources have no criticality, and a score of 100
    ///          is reserved for the most critical resources. </p>
    public let findingProviderFieldsCriticality: [NumberFilter]?
    /// <p>The finding identifier of a related finding that is identified by the finding provider.</p>
    public let findingProviderFieldsRelatedFindingsId: [StringFilter]?
    /// <p>The ARN of the solution that generated a related finding that is identified by the finding provider.</p>
    public let findingProviderFieldsRelatedFindingsProductArn: [StringFilter]?
    /// <p>The finding provider value for the severity label.</p>
    public let findingProviderFieldsSeverityLabel: [StringFilter]?
    /// <p>The finding provider's original value for the severity.</p>
    public let findingProviderFieldsSeverityOriginal: [StringFilter]?
    /// <p>One or more finding types that the finding provider assigned to the finding. Uses the format of <code>namespace/category/classifier</code>
    ///          that classify a finding.</p>
    ///          <p>Valid namespace values are: Software and Configuration Checks | TTPs | Effects | Unusual
    ///          Behaviors | Sensitive Data Identifications</p>
    public let findingProviderFieldsTypes: [StringFilter]?
    /// <p>An ISO8601-formatted timestamp that indicates when the security-findings provider first
    ///          observed the potential security issue that a finding captured.</p>
    public let firstObservedAt: [DateFilter]?
    /// <p>The identifier for the solution-specific component (a discrete unit of logic) that
    ///          generated a finding. In various security-findings providers' solutions, this generator can
    ///          be called a rule, a check, a detector, a plugin, etc.</p>
    public let generatorId: [StringFilter]?
    /// <p>The security findings provider-specific identifier for a finding.</p>
    public let id: [StringFilter]?
    /// <p>A keyword for a finding.</p>
    public let keyword: [KeywordFilter]?
    /// <p>An ISO8601-formatted timestamp that indicates when the security-findings provider most
    ///          recently observed the potential security issue that a finding captured.</p>
    public let lastObservedAt: [DateFilter]?
    /// <p>The name of the malware that was observed.</p>
    public let malwareName: [StringFilter]?
    /// <p>The filesystem path of the malware that was observed.</p>
    public let malwarePath: [StringFilter]?
    /// <p>The state of the malware that was observed.</p>
    public let malwareState: [StringFilter]?
    /// <p>The type of the malware that was observed.</p>
    public let malwareType: [StringFilter]?
    /// <p>The destination domain of network-related information about a finding.</p>
    public let networkDestinationDomain: [StringFilter]?
    /// <p>The destination IPv4 address of network-related information about a finding.</p>
    public let networkDestinationIpV4: [IpFilter]?
    /// <p>The destination IPv6 address of network-related information about a finding.</p>
    public let networkDestinationIpV6: [IpFilter]?
    /// <p>The destination port of network-related information about a finding.</p>
    public let networkDestinationPort: [NumberFilter]?
    /// <p>Indicates the direction of network traffic associated with a finding.</p>
    public let networkDirection: [StringFilter]?
    /// <p>The protocol of network-related information about a finding.</p>
    public let networkProtocol: [StringFilter]?
    /// <p>The source domain of network-related information about a finding.</p>
    public let networkSourceDomain: [StringFilter]?
    /// <p>The source IPv4 address of network-related information about a finding.</p>
    public let networkSourceIpV4: [IpFilter]?
    /// <p>The source IPv6 address of network-related information about a finding.</p>
    public let networkSourceIpV6: [IpFilter]?
    /// <p>The source media access control (MAC) address of network-related information about a
    ///          finding.</p>
    public let networkSourceMac: [StringFilter]?
    /// <p>The source port of network-related information about a finding.</p>
    public let networkSourcePort: [NumberFilter]?
    /// <p>The text of a note.</p>
    public let noteText: [StringFilter]?
    /// <p>The timestamp of when the note was updated.</p>
    public let noteUpdatedAt: [DateFilter]?
    /// <p>The principal that created a note.</p>
    public let noteUpdatedBy: [StringFilter]?
    /// <p>The date/time that the process was launched.</p>
    public let processLaunchedAt: [DateFilter]?
    /// <p>The name of the process.</p>
    public let processName: [StringFilter]?
    /// <p>The parent process ID.</p>
    public let processParentPid: [NumberFilter]?
    /// <p>The path to the process executable.</p>
    public let processPath: [StringFilter]?
    /// <p>The process ID.</p>
    public let processPid: [NumberFilter]?
    /// <p>The date/time that the process was terminated.</p>
    public let processTerminatedAt: [DateFilter]?
    /// <p>The ARN generated by Security Hub that uniquely identifies a third-party company
    ///          (security findings provider) after this provider's product (solution that generates
    ///          findings) is registered with Security Hub.</p>
    public let productArn: [StringFilter]?
    /// <p>A data type where security-findings providers can include additional solution-specific
    ///          details that aren't part of the defined <code>AwsSecurityFinding</code> format.</p>
    public let productFields: [MapFilter]?
    /// <p>The name of the solution (product) that generates findings.</p>
    public let productName: [StringFilter]?
    /// <p>The recommendation of what to do about the issue described in a finding.</p>
    public let recommendationText: [StringFilter]?
    /// <p>The updated record state for the finding.</p>
    public let recordState: [StringFilter]?
    /// <p>The solution-generated identifier for a related finding.</p>
    public let relatedFindingsId: [StringFilter]?
    /// <p>The ARN of the solution that generated a related finding.</p>
    public let relatedFindingsProductArn: [StringFilter]?
    /// <p>The IAM profile ARN of the instance.</p>
    public let resourceAwsEc2InstanceIamInstanceProfileArn: [StringFilter]?
    /// <p>The Amazon Machine Image (AMI) ID of the instance.</p>
    public let resourceAwsEc2InstanceImageId: [StringFilter]?
    /// <p>The IPv4 addresses associated with the instance.</p>
    public let resourceAwsEc2InstanceIpV4Addresses: [IpFilter]?
    /// <p>The IPv6 addresses associated with the instance.</p>
    public let resourceAwsEc2InstanceIpV6Addresses: [IpFilter]?
    /// <p>The key name associated with the instance.</p>
    public let resourceAwsEc2InstanceKeyName: [StringFilter]?
    /// <p>The date and time the instance was launched.</p>
    public let resourceAwsEc2InstanceLaunchedAt: [DateFilter]?
    /// <p>The identifier of the subnet that the instance was launched in.</p>
    public let resourceAwsEc2InstanceSubnetId: [StringFilter]?
    /// <p>The instance type of the instance.</p>
    public let resourceAwsEc2InstanceType: [StringFilter]?
    /// <p>The identifier of the VPC that the instance was launched in.</p>
    public let resourceAwsEc2InstanceVpcId: [StringFilter]?
    /// <p>The creation date/time of the IAM access key related to a finding.</p>
    public let resourceAwsIamAccessKeyCreatedAt: [DateFilter]?
    /// <p>The status of the IAM access key related to a finding.</p>
    public let resourceAwsIamAccessKeyStatus: [StringFilter]?
    /// <p>The user associated with the IAM access key related to a finding.</p>
    public let resourceAwsIamAccessKeyUserName: [StringFilter]?
    /// <p>The canonical user ID of the owner of the S3 bucket.</p>
    public let resourceAwsS3BucketOwnerId: [StringFilter]?
    /// <p>The display name of the owner of the S3 bucket.</p>
    public let resourceAwsS3BucketOwnerName: [StringFilter]?
    /// <p>The identifier of the image related to a finding.</p>
    public let resourceContainerImageId: [StringFilter]?
    /// <p>The name of the image related to a finding.</p>
    public let resourceContainerImageName: [StringFilter]?
    /// <p>The date/time that the container was started.</p>
    public let resourceContainerLaunchedAt: [DateFilter]?
    /// <p>The name of the container related to a finding.</p>
    public let resourceContainerName: [StringFilter]?
    /// <p>The details of a resource that doesn't have a specific subfield for the resource type
    ///          defined.</p>
    public let resourceDetailsOther: [MapFilter]?
    /// <p>The canonical identifier for the given resource type.</p>
    public let resourceId: [StringFilter]?
    /// <p>The canonical AWS partition name that the Region is assigned to.</p>
    public let resourcePartition: [StringFilter]?
    /// <p>The canonical AWS external Region name where this resource is located.</p>
    public let resourceRegion: [StringFilter]?
    /// <p>A list of AWS tags associated with a resource at the time the finding was
    ///          processed.</p>
    public let resourceTags: [MapFilter]?
    /// <p>Specifies the type of the resource that details are provided for.</p>
    public let resourceType: [StringFilter]?
    /// <p>The label of a finding's severity.</p>
    public let severityLabel: [StringFilter]?
    /// <p>The normalized severity of a finding.</p>
    @available(*, deprecated, message: "This filter is deprecated, use SeverityLabel or FindingProviderFieldsSeverityLabel instead.")
    public let severityNormalized: [NumberFilter]?
    /// <p>The native severity as defined by the security-findings provider's solution that
    ///          generated the finding.</p>
    @available(*, deprecated, message: "This filter is deprecated, use FindingProviiltersSeverityOriginal instead.")
    public let severityProduct: [NumberFilter]?
    /// <p>A URL that links to a page about the current finding in the security-findings provider's
    ///          solution.</p>
    public let sourceUrl: [StringFilter]?
    /// <p>The category of a threat intelligence indicator.</p>
    public let threatIntelIndicatorCategory: [StringFilter]?
    /// <p>The date/time of the last observation of a threat intelligence indicator.</p>
    public let threatIntelIndicatorLastObservedAt: [DateFilter]?
    /// <p>The source of the threat intelligence.</p>
    public let threatIntelIndicatorSource: [StringFilter]?
    /// <p>The URL for more details from the source of the threat intelligence.</p>
    public let threatIntelIndicatorSourceUrl: [StringFilter]?
    /// <p>The type of a threat intelligence indicator.</p>
    public let threatIntelIndicatorType: [StringFilter]?
    /// <p>The value of a threat intelligence indicator.</p>
    public let threatIntelIndicatorValue: [StringFilter]?
    /// <p>A finding's title.</p>
    public let title: [StringFilter]?
    /// <p>A finding type in the format of <code>namespace/category/classifier</code> that
    ///          classifies a finding.</p>
    public let type: [StringFilter]?
    /// <p>An ISO8601-formatted timestamp that indicates when the security-findings provider last
    ///          updated the finding record. </p>
    public let updatedAt: [DateFilter]?
    /// <p>A list of name/value string pairs associated with the finding. These are custom,
    ///          user-defined fields added to a finding. </p>
    public let userDefinedFields: [MapFilter]?
    /// <p>The veracity of a finding.</p>
    public let verificationState: [StringFilter]?
    /// <p>The workflow state of a finding.</p>
    ///          <p>Note that this field is deprecated. To search for a finding based on its workflow
    ///          status, use <code>WorkflowStatus</code>.</p>
    public let workflowState: [StringFilter]?
    /// <p>The status of the investigation into a finding. Allowed values are the following.</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>NEW</code> - The initial state of a finding, before it is reviewed.</p>
    ///                <p>Security Hub also resets the workflow status from <code>NOTIFIED</code> or
    ///                   <code>RESOLVED</code> to <code>NEW</code> in the following cases:</p>
    ///                <ul>
    ///                   <li>
    ///                      <p>The record state changes from <code>ARCHIVED</code> to <code>ACTIVE</code>.</p>
    ///                   </li>
    ///                   <li>
    ///                      <p>The compliance status changes from <code>PASSED</code> to either <code>WARNING</code>,
    ///                         <code>FAILED</code>, or <code>NOT_AVAILABLE</code>.</p>
    ///                   </li>
    ///                </ul>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>NOTIFIED</code> - Indicates that the resource owner has been notified about
    ///                the security issue. Used when the initial reviewer is not the resource owner, and
    ///                needs intervention from the resource owner.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>SUPPRESSED</code> - The finding will not be reviewed again and will not be
    ///                acted upon.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>RESOLVED</code> - The finding was reviewed and remediated and is now
    ///                considered resolved. </p>
    ///             </li>
    ///          </ul>
    public let workflowStatus: [StringFilter]?

    public init (
        awsAccountId: [StringFilter]? = nil,
        companyName: [StringFilter]? = nil,
        complianceStatus: [StringFilter]? = nil,
        confidence: [NumberFilter]? = nil,
        createdAt: [DateFilter]? = nil,
        criticality: [NumberFilter]? = nil,
        description: [StringFilter]? = nil,
        findingProviderFieldsConfidence: [NumberFilter]? = nil,
        findingProviderFieldsCriticality: [NumberFilter]? = nil,
        findingProviderFieldsRelatedFindingsId: [StringFilter]? = nil,
        findingProviderFieldsRelatedFindingsProductArn: [StringFilter]? = nil,
        findingProviderFieldsSeverityLabel: [StringFilter]? = nil,
        findingProviderFieldsSeverityOriginal: [StringFilter]? = nil,
        findingProviderFieldsTypes: [StringFilter]? = nil,
        firstObservedAt: [DateFilter]? = nil,
        generatorId: [StringFilter]? = nil,
        id: [StringFilter]? = nil,
        keyword: [KeywordFilter]? = nil,
        lastObservedAt: [DateFilter]? = nil,
        malwareName: [StringFilter]? = nil,
        malwarePath: [StringFilter]? = nil,
        malwareState: [StringFilter]? = nil,
        malwareType: [StringFilter]? = nil,
        networkDestinationDomain: [StringFilter]? = nil,
        networkDestinationIpV4: [IpFilter]? = nil,
        networkDestinationIpV6: [IpFilter]? = nil,
        networkDestinationPort: [NumberFilter]? = nil,
        networkDirection: [StringFilter]? = nil,
        networkProtocol: [StringFilter]? = nil,
        networkSourceDomain: [StringFilter]? = nil,
        networkSourceIpV4: [IpFilter]? = nil,
        networkSourceIpV6: [IpFilter]? = nil,
        networkSourceMac: [StringFilter]? = nil,
        networkSourcePort: [NumberFilter]? = nil,
        noteText: [StringFilter]? = nil,
        noteUpdatedAt: [DateFilter]? = nil,
        noteUpdatedBy: [StringFilter]? = nil,
        processLaunchedAt: [DateFilter]? = nil,
        processName: [StringFilter]? = nil,
        processParentPid: [NumberFilter]? = nil,
        processPath: [StringFilter]? = nil,
        processPid: [NumberFilter]? = nil,
        processTerminatedAt: [DateFilter]? = nil,
        productArn: [StringFilter]? = nil,
        productFields: [MapFilter]? = nil,
        productName: [StringFilter]? = nil,
        recommendationText: [StringFilter]? = nil,
        recordState: [StringFilter]? = nil,
        relatedFindingsId: [StringFilter]? = nil,
        relatedFindingsProductArn: [StringFilter]? = nil,
        resourceAwsEc2InstanceIamInstanceProfileArn: [StringFilter]? = nil,
        resourceAwsEc2InstanceImageId: [StringFilter]? = nil,
        resourceAwsEc2InstanceIpV4Addresses: [IpFilter]? = nil,
        resourceAwsEc2InstanceIpV6Addresses: [IpFilter]? = nil,
        resourceAwsEc2InstanceKeyName: [StringFilter]? = nil,
        resourceAwsEc2InstanceLaunchedAt: [DateFilter]? = nil,
        resourceAwsEc2InstanceSubnetId: [StringFilter]? = nil,
        resourceAwsEc2InstanceType: [StringFilter]? = nil,
        resourceAwsEc2InstanceVpcId: [StringFilter]? = nil,
        resourceAwsIamAccessKeyCreatedAt: [DateFilter]? = nil,
        resourceAwsIamAccessKeyStatus: [StringFilter]? = nil,
        resourceAwsIamAccessKeyUserName: [StringFilter]? = nil,
        resourceAwsS3BucketOwnerId: [StringFilter]? = nil,
        resourceAwsS3BucketOwnerName: [StringFilter]? = nil,
        resourceContainerImageId: [StringFilter]? = nil,
        resourceContainerImageName: [StringFilter]? = nil,
        resourceContainerLaunchedAt: [DateFilter]? = nil,
        resourceContainerName: [StringFilter]? = nil,
        resourceDetailsOther: [MapFilter]? = nil,
        resourceId: [StringFilter]? = nil,
        resourcePartition: [StringFilter]? = nil,
        resourceRegion: [StringFilter]? = nil,
        resourceTags: [MapFilter]? = nil,
        resourceType: [StringFilter]? = nil,
        severityLabel: [StringFilter]? = nil,
        severityNormalized: [NumberFilter]? = nil,
        severityProduct: [NumberFilter]? = nil,
        sourceUrl: [StringFilter]? = nil,
        threatIntelIndicatorCategory: [StringFilter]? = nil,
        threatIntelIndicatorLastObservedAt: [DateFilter]? = nil,
        threatIntelIndicatorSource: [StringFilter]? = nil,
        threatIntelIndicatorSourceUrl: [StringFilter]? = nil,
        threatIntelIndicatorType: [StringFilter]? = nil,
        threatIntelIndicatorValue: [StringFilter]? = nil,
        title: [StringFilter]? = nil,
        type: [StringFilter]? = nil,
        updatedAt: [DateFilter]? = nil,
        userDefinedFields: [MapFilter]? = nil,
        verificationState: [StringFilter]? = nil,
        workflowState: [StringFilter]? = nil,
        workflowStatus: [StringFilter]? = nil
    )
    {
        self.awsAccountId = awsAccountId
        self.companyName = companyName
        self.complianceStatus = complianceStatus
        self.confidence = confidence
        self.createdAt = createdAt
        self.criticality = criticality
        self.description = description
        self.findingProviderFieldsConfidence = findingProviderFieldsConfidence
        self.findingProviderFieldsCriticality = findingProviderFieldsCriticality
        self.findingProviderFieldsRelatedFindingsId = findingProviderFieldsRelatedFindingsId
        self.findingProviderFieldsRelatedFindingsProductArn = findingProviderFieldsRelatedFindingsProductArn
        self.findingProviderFieldsSeverityLabel = findingProviderFieldsSeverityLabel
        self.findingProviderFieldsSeverityOriginal = findingProviderFieldsSeverityOriginal
        self.findingProviderFieldsTypes = findingProviderFieldsTypes
        self.firstObservedAt = firstObservedAt
        self.generatorId = generatorId
        self.id = id
        self.keyword = keyword
        self.lastObservedAt = lastObservedAt
        self.malwareName = malwareName
        self.malwarePath = malwarePath
        self.malwareState = malwareState
        self.malwareType = malwareType
        self.networkDestinationDomain = networkDestinationDomain
        self.networkDestinationIpV4 = networkDestinationIpV4
        self.networkDestinationIpV6 = networkDestinationIpV6
        self.networkDestinationPort = networkDestinationPort
        self.networkDirection = networkDirection
        self.networkProtocol = networkProtocol
        self.networkSourceDomain = networkSourceDomain
        self.networkSourceIpV4 = networkSourceIpV4
        self.networkSourceIpV6 = networkSourceIpV6
        self.networkSourceMac = networkSourceMac
        self.networkSourcePort = networkSourcePort
        self.noteText = noteText
        self.noteUpdatedAt = noteUpdatedAt
        self.noteUpdatedBy = noteUpdatedBy
        self.processLaunchedAt = processLaunchedAt
        self.processName = processName
        self.processParentPid = processParentPid
        self.processPath = processPath
        self.processPid = processPid
        self.processTerminatedAt = processTerminatedAt
        self.productArn = productArn
        self.productFields = productFields
        self.productName = productName
        self.recommendationText = recommendationText
        self.recordState = recordState
        self.relatedFindingsId = relatedFindingsId
        self.relatedFindingsProductArn = relatedFindingsProductArn
        self.resourceAwsEc2InstanceIamInstanceProfileArn = resourceAwsEc2InstanceIamInstanceProfileArn
        self.resourceAwsEc2InstanceImageId = resourceAwsEc2InstanceImageId
        self.resourceAwsEc2InstanceIpV4Addresses = resourceAwsEc2InstanceIpV4Addresses
        self.resourceAwsEc2InstanceIpV6Addresses = resourceAwsEc2InstanceIpV6Addresses
        self.resourceAwsEc2InstanceKeyName = resourceAwsEc2InstanceKeyName
        self.resourceAwsEc2InstanceLaunchedAt = resourceAwsEc2InstanceLaunchedAt
        self.resourceAwsEc2InstanceSubnetId = resourceAwsEc2InstanceSubnetId
        self.resourceAwsEc2InstanceType = resourceAwsEc2InstanceType
        self.resourceAwsEc2InstanceVpcId = resourceAwsEc2InstanceVpcId
        self.resourceAwsIamAccessKeyCreatedAt = resourceAwsIamAccessKeyCreatedAt
        self.resourceAwsIamAccessKeyStatus = resourceAwsIamAccessKeyStatus
        self.resourceAwsIamAccessKeyUserName = resourceAwsIamAccessKeyUserName
        self.resourceAwsS3BucketOwnerId = resourceAwsS3BucketOwnerId
        self.resourceAwsS3BucketOwnerName = resourceAwsS3BucketOwnerName
        self.resourceContainerImageId = resourceContainerImageId
        self.resourceContainerImageName = resourceContainerImageName
        self.resourceContainerLaunchedAt = resourceContainerLaunchedAt
        self.resourceContainerName = resourceContainerName
        self.resourceDetailsOther = resourceDetailsOther
        self.resourceId = resourceId
        self.resourcePartition = resourcePartition
        self.resourceRegion = resourceRegion
        self.resourceTags = resourceTags
        self.resourceType = resourceType
        self.severityLabel = severityLabel
        self.severityNormalized = severityNormalized
        self.severityProduct = severityProduct
        self.sourceUrl = sourceUrl
        self.threatIntelIndicatorCategory = threatIntelIndicatorCategory
        self.threatIntelIndicatorLastObservedAt = threatIntelIndicatorLastObservedAt
        self.threatIntelIndicatorSource = threatIntelIndicatorSource
        self.threatIntelIndicatorSourceUrl = threatIntelIndicatorSourceUrl
        self.threatIntelIndicatorType = threatIntelIndicatorType
        self.threatIntelIndicatorValue = threatIntelIndicatorValue
        self.title = title
        self.type = type
        self.updatedAt = updatedAt
        self.userDefinedFields = userDefinedFields
        self.verificationState = verificationState
        self.workflowState = workflowState
        self.workflowStatus = workflowStatus
    }
}

extension AwsSecurityFindingFilters: CustomDebugStringConvertible {
    public var debugDescription: String {
        "AwsSecurityFindingFilters(awsAccountId: \(String(describing: awsAccountId)), companyName: \(String(describing: companyName)), complianceStatus: \(String(describing: complianceStatus)), confidence: \(String(describing: confidence)), createdAt: \(String(describing: createdAt)), criticality: \(String(describing: criticality)), description: \(String(describing: description)), findingProviderFieldsConfidence: \(String(describing: findingProviderFieldsConfidence)), findingProviderFieldsCriticality: \(String(describing: findingProviderFieldsCriticality)), findingProviderFieldsRelatedFindingsId: \(String(describing: findingProviderFieldsRelatedFindingsId)), findingProviderFieldsRelatedFindingsProductArn: \(String(describing: findingProviderFieldsRelatedFindingsProductArn)), findingProviderFieldsSeverityLabel: \(String(describing: findingProviderFieldsSeverityLabel)), findingProviderFieldsSeverityOriginal: \(String(describing: findingProviderFieldsSeverityOriginal)), findingProviderFieldsTypes: \(String(describing: findingProviderFieldsTypes)), firstObservedAt: \(String(describing: firstObservedAt)), generatorId: \(String(describing: generatorId)), id: \(String(describing: id)), keyword: \(String(describing: keyword)), lastObservedAt: \(String(describing: lastObservedAt)), malwareName: \(String(describing: malwareName)), malwarePath: \(String(describing: malwarePath)), malwareState: \(String(describing: malwareState)), malwareType: \(String(describing: malwareType)), networkDestinationDomain: \(String(describing: networkDestinationDomain)), networkDestinationIpV4: \(String(describing: networkDestinationIpV4)), networkDestinationIpV6: \(String(describing: networkDestinationIpV6)), networkDestinationPort: \(String(describing: networkDestinationPort)), networkDirection: \(String(describing: networkDirection)), networkProtocol: \(String(describing: networkProtocol)), networkSourceDomain: \(String(describing: networkSourceDomain)), networkSourceIpV4: \(String(describing: networkSourceIpV4)), networkSourceIpV6: \(String(describing: networkSourceIpV6)), networkSourceMac: \(String(describing: networkSourceMac)), networkSourcePort: \(String(describing: networkSourcePort)), noteText: \(String(describing: noteText)), noteUpdatedAt: \(String(describing: noteUpdatedAt)), noteUpdatedBy: \(String(describing: noteUpdatedBy)), processLaunchedAt: \(String(describing: processLaunchedAt)), processName: \(String(describing: processName)), processParentPid: \(String(describing: processParentPid)), processPath: \(String(describing: processPath)), processPid: \(String(describing: processPid)), processTerminatedAt: \(String(describing: processTerminatedAt)), productArn: \(String(describing: productArn)), productFields: \(String(describing: productFields)), productName: \(String(describing: productName)), recommendationText: \(String(describing: recommendationText)), recordState: \(String(describing: recordState)), relatedFindingsId: \(String(describing: relatedFindingsId)), relatedFindingsProductArn: \(String(describing: relatedFindingsProductArn)), resourceAwsEc2InstanceIamInstanceProfileArn: \(String(describing: resourceAwsEc2InstanceIamInstanceProfileArn)), resourceAwsEc2InstanceImageId: \(String(describing: resourceAwsEc2InstanceImageId)), resourceAwsEc2InstanceIpV4Addresses: \(String(describing: resourceAwsEc2InstanceIpV4Addresses)), resourceAwsEc2InstanceIpV6Addresses: \(String(describing: resourceAwsEc2InstanceIpV6Addresses)), resourceAwsEc2InstanceKeyName: \(String(describing: resourceAwsEc2InstanceKeyName)), resourceAwsEc2InstanceLaunchedAt: \(String(describing: resourceAwsEc2InstanceLaunchedAt)), resourceAwsEc2InstanceSubnetId: \(String(describing: resourceAwsEc2InstanceSubnetId)), resourceAwsEc2InstanceType: \(String(describing: resourceAwsEc2InstanceType)), resourceAwsEc2InstanceVpcId: \(String(describing: resourceAwsEc2InstanceVpcId)), resourceAwsIamAccessKeyCreatedAt: \(String(describing: resourceAwsIamAccessKeyCreatedAt)), resourceAwsIamAccessKeyStatus: \(String(describing: resourceAwsIamAccessKeyStatus)), resourceAwsIamAccessKeyUserName: \(String(describing: resourceAwsIamAccessKeyUserName)), resourceAwsS3BucketOwnerId: \(String(describing: resourceAwsS3BucketOwnerId)), resourceAwsS3BucketOwnerName: \(String(describing: resourceAwsS3BucketOwnerName)), resourceContainerImageId: \(String(describing: resourceContainerImageId)), resourceContainerImageName: \(String(describing: resourceContainerImageName)), resourceContainerLaunchedAt: \(String(describing: resourceContainerLaunchedAt)), resourceContainerName: \(String(describing: resourceContainerName)), resourceDetailsOther: \(String(describing: resourceDetailsOther)), resourceId: \(String(describing: resourceId)), resourcePartition: \(String(describing: resourcePartition)), resourceRegion: \(String(describing: resourceRegion)), resourceTags: \(String(describing: resourceTags)), resourceType: \(String(describing: resourceType)), severityLabel: \(String(describing: severityLabel)), severityNormalized: \(String(describing: severityNormalized)), severityProduct: \(String(describing: severityProduct)), sourceUrl: \(String(describing: sourceUrl)), threatIntelIndicatorCategory: \(String(describing: threatIntelIndicatorCategory)), threatIntelIndicatorLastObservedAt: \(String(describing: threatIntelIndicatorLastObservedAt)), threatIntelIndicatorSource: \(String(describing: threatIntelIndicatorSource)), threatIntelIndicatorSourceUrl: \(String(describing: threatIntelIndicatorSourceUrl)), threatIntelIndicatorType: \(String(describing: threatIntelIndicatorType)), threatIntelIndicatorValue: \(String(describing: threatIntelIndicatorValue)), title: \(String(describing: title)), type: \(String(describing: type)), updatedAt: \(String(describing: updatedAt)), userDefinedFields: \(String(describing: userDefinedFields)), verificationState: \(String(describing: verificationState)), workflowState: \(String(describing: workflowState)), workflowStatus: \(String(describing: workflowStatus)))"}
}
