// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeStandardsOutputResponseBody: Equatable {
    public let standards: [Standard]?
    public let nextToken: String?
}

extension DescribeStandardsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case standards = "Standards"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let standardsContainer = try containerValues.decodeIfPresent([Standard?].self, forKey: .standards)
        var standardsDecoded0:[Standard]? = nil
        if let standardsContainer = standardsContainer {
            standardsDecoded0 = [Standard]()
            for structure0 in standardsContainer {
                if let structure0 = structure0 {
                    standardsDecoded0?.append(structure0)
                }
            }
        }
        standards = standardsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
