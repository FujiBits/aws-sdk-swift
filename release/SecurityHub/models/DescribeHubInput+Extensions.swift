// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DescribeHubInputHeadersMiddleware: Middleware {
    public let id: String = "DescribeHubInputHeadersMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<DescribeHubInput>,
                  next: H) -> Swift.Result<OperationOutput<DescribeHubOutputResponse>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<DescribeHubInput>
    public typealias MOutput = OperationOutput<DescribeHubOutputResponse>
    public typealias Context = ClientRuntime.HttpContext
    public typealias MError = SdkError<DescribeHubOutputError>
}

public struct DescribeHubInputQueryItemMiddleware: Middleware {
    public let id: String = "DescribeHubInputQueryItemMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<DescribeHubInput>,
                  next: H) -> Swift.Result<OperationOutput<DescribeHubOutputResponse>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        if let hubArn = input.operationInput.hubArn {
            let hubArnQueryItem = URLQueryItem(name: "HubArn".urlPercentEncoding(), value: String(hubArn).urlPercentEncoding())
            input.builder.withQueryItem(hubArnQueryItem)
        }
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<DescribeHubInput>
    public typealias MOutput = OperationOutput<DescribeHubOutputResponse>
    public typealias Context = ClientRuntime.HttpContext
    public typealias MError = SdkError<DescribeHubOutputError>
}

extension DescribeHubInput: Encodable, Reflection {

    public func encode(to encoder: Encoder) throws {
    }
}
