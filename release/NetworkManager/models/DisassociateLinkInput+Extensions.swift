// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DisassociateLinkInputHeadersMiddleware: Middleware {
    public let id: String = "DisassociateLinkInputHeadersMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<DisassociateLinkInput>,
                  next: H) -> Swift.Result<OperationOutput<DisassociateLinkOutputResponse>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<DisassociateLinkInput>
    public typealias MOutput = OperationOutput<DisassociateLinkOutputResponse>
    public typealias Context = ClientRuntime.HttpContext
    public typealias MError = SdkError<DisassociateLinkOutputError>
}

public struct DisassociateLinkInputQueryItemMiddleware: Middleware {
    public let id: String = "DisassociateLinkInputQueryItemMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<DisassociateLinkInput>,
                  next: H) -> Swift.Result<OperationOutput<DisassociateLinkOutputResponse>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        if let deviceId = input.operationInput.deviceId {
            let deviceIdQueryItem = URLQueryItem(name: "deviceId".urlPercentEncoding(), value: String(deviceId).urlPercentEncoding())
            input.builder.withQueryItem(deviceIdQueryItem)
        }
        if let linkId = input.operationInput.linkId {
            let linkIdQueryItem = URLQueryItem(name: "linkId".urlPercentEncoding(), value: String(linkId).urlPercentEncoding())
            input.builder.withQueryItem(linkIdQueryItem)
        }
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<DisassociateLinkInput>
    public typealias MOutput = OperationOutput<DisassociateLinkOutputResponse>
    public typealias Context = ClientRuntime.HttpContext
    public typealias MError = SdkError<DisassociateLinkOutputError>
}

extension DisassociateLinkInput: Encodable, Reflection {

    public func encode(to encoder: Encoder) throws {
    }
}
