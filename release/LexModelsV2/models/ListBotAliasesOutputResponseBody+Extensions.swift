// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListBotAliasesOutputResponseBody: Equatable {
    public let botAliasSummaries: [BotAliasSummary]?
    public let nextToken: String?
    public let botId: String?
}

extension ListBotAliasesOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case botAliasSummaries
        case botId
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let botAliasSummariesContainer = try containerValues.decodeIfPresent([BotAliasSummary?].self, forKey: .botAliasSummaries)
        var botAliasSummariesDecoded0:[BotAliasSummary]? = nil
        if let botAliasSummariesContainer = botAliasSummariesContainer {
            botAliasSummariesDecoded0 = [BotAliasSummary]()
            for structure0 in botAliasSummariesContainer {
                if let structure0 = structure0 {
                    botAliasSummariesDecoded0?.append(structure0)
                }
            }
        }
        botAliasSummaries = botAliasSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let botIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .botId)
        botId = botIdDecoded
    }
}
