// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListImportsOutputResponseBody: Equatable {
    public let botId: String?
    public let botVersion: String?
    public let importSummaries: [ImportSummary]?
    public let nextToken: String?
}

extension ListImportsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case botId
        case botVersion
        case importSummaries
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let botIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .botId)
        botId = botIdDecoded
        let botVersionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .botVersion)
        botVersion = botVersionDecoded
        let importSummariesContainer = try containerValues.decodeIfPresent([ImportSummary?].self, forKey: .importSummaries)
        var importSummariesDecoded0:[ImportSummary]? = nil
        if let importSummariesContainer = importSummariesContainer {
            importSummariesDecoded0 = [ImportSummary]()
            for structure0 in importSummariesContainer {
                if let structure0 = structure0 {
                    importSummariesDecoded0?.append(structure0)
                }
            }
        }
        importSummaries = importSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
