// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeKinesisStreamingDestinationOutputResponseBody: Equatable {
    public let tableName: String?
    public let kinesisDataStreamDestinations: [KinesisDataStreamDestination]?
}

extension DescribeKinesisStreamingDestinationOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case kinesisDataStreamDestinations = "KinesisDataStreamDestinations"
        case tableName = "TableName"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let tableNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .tableName)
        tableName = tableNameDecoded
        let kinesisDataStreamDestinationsContainer = try containerValues.decodeIfPresent([KinesisDataStreamDestination?].self, forKey: .kinesisDataStreamDestinations)
        var kinesisDataStreamDestinationsDecoded0:[KinesisDataStreamDestination]? = nil
        if let kinesisDataStreamDestinationsContainer = kinesisDataStreamDestinationsContainer {
            kinesisDataStreamDestinationsDecoded0 = [KinesisDataStreamDestination]()
            for structure0 in kinesisDataStreamDestinationsContainer {
                if let structure0 = structure0 {
                    kinesisDataStreamDestinationsDecoded0?.append(structure0)
                }
            }
        }
        kinesisDataStreamDestinations = kinesisDataStreamDestinationsDecoded0
    }
}
