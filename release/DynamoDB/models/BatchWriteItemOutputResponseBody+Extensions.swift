// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchWriteItemOutputResponseBody: Equatable {
    public let unprocessedItems: [String:[WriteRequest]]?
    public let itemCollectionMetrics: [String:[ItemCollectionMetrics]]?
    public let consumedCapacity: [ConsumedCapacity]?
}

extension BatchWriteItemOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case consumedCapacity = "ConsumedCapacity"
        case itemCollectionMetrics = "ItemCollectionMetrics"
        case unprocessedItems = "UnprocessedItems"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let unprocessedItemsContainer = try containerValues.decodeIfPresent([String: [WriteRequest?]?].self, forKey: .unprocessedItems)
        var unprocessedItemsDecoded0: [String:[WriteRequest]]? = nil
        if let unprocessedItemsContainer = unprocessedItemsContainer {
            unprocessedItemsDecoded0 = [String:[WriteRequest]]()
            for (key0, writerequests0) in unprocessedItemsContainer {
                var writerequests0Decoded0: [WriteRequest]? = nil
                if let writerequests0 = writerequests0 {
                    writerequests0Decoded0 = [WriteRequest]()
                    for structure1 in writerequests0 {
                        if let structure1 = structure1 {
                            writerequests0Decoded0?.append(structure1)
                        }
                    }
                }
                unprocessedItemsDecoded0?[key0] = writerequests0Decoded0
            }
        }
        unprocessedItems = unprocessedItemsDecoded0
        let itemCollectionMetricsContainer = try containerValues.decodeIfPresent([String: [ItemCollectionMetrics?]?].self, forKey: .itemCollectionMetrics)
        var itemCollectionMetricsDecoded0: [String:[ItemCollectionMetrics]]? = nil
        if let itemCollectionMetricsContainer = itemCollectionMetricsContainer {
            itemCollectionMetricsDecoded0 = [String:[ItemCollectionMetrics]]()
            for (key0, itemcollectionmetricsmultiple0) in itemCollectionMetricsContainer {
                var itemcollectionmetricsmultiple0Decoded0: [ItemCollectionMetrics]? = nil
                if let itemcollectionmetricsmultiple0 = itemcollectionmetricsmultiple0 {
                    itemcollectionmetricsmultiple0Decoded0 = [ItemCollectionMetrics]()
                    for structure1 in itemcollectionmetricsmultiple0 {
                        if let structure1 = structure1 {
                            itemcollectionmetricsmultiple0Decoded0?.append(structure1)
                        }
                    }
                }
                itemCollectionMetricsDecoded0?[key0] = itemcollectionmetricsmultiple0Decoded0
            }
        }
        itemCollectionMetrics = itemCollectionMetricsDecoded0
        let consumedCapacityContainer = try containerValues.decodeIfPresent([ConsumedCapacity?].self, forKey: .consumedCapacity)
        var consumedCapacityDecoded0:[ConsumedCapacity]? = nil
        if let consumedCapacityContainer = consumedCapacityContainer {
            consumedCapacityDecoded0 = [ConsumedCapacity]()
            for structure0 in consumedCapacityContainer {
                if let structure0 = structure0 {
                    consumedCapacityDecoded0?.append(structure0)
                }
            }
        }
        consumedCapacity = consumedCapacityDecoded0
    }
}
