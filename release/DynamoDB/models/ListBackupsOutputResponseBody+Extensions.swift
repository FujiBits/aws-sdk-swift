// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListBackupsOutputResponseBody: Equatable {
    public let backupSummaries: [BackupSummary]?
    public let lastEvaluatedBackupArn: String?
}

extension ListBackupsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case backupSummaries = "BackupSummaries"
        case lastEvaluatedBackupArn = "LastEvaluatedBackupArn"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let backupSummariesContainer = try containerValues.decodeIfPresent([BackupSummary?].self, forKey: .backupSummaries)
        var backupSummariesDecoded0:[BackupSummary]? = nil
        if let backupSummariesContainer = backupSummariesContainer {
            backupSummariesDecoded0 = [BackupSummary]()
            for structure0 in backupSummariesContainer {
                if let structure0 = structure0 {
                    backupSummariesDecoded0?.append(structure0)
                }
            }
        }
        backupSummaries = backupSummariesDecoded0
        let lastEvaluatedBackupArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .lastEvaluatedBackupArn)
        lastEvaluatedBackupArn = lastEvaluatedBackupArnDecoded
    }
}
