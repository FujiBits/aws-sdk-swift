// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListIpRoutesOutputResponseBody: Equatable {
    public let ipRoutesInfo: [IpRouteInfo]?
    public let nextToken: String?
}

extension ListIpRoutesOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case ipRoutesInfo = "IpRoutesInfo"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let ipRoutesInfoContainer = try containerValues.decodeIfPresent([IpRouteInfo?].self, forKey: .ipRoutesInfo)
        var ipRoutesInfoDecoded0:[IpRouteInfo]? = nil
        if let ipRoutesInfoContainer = ipRoutesInfoContainer {
            ipRoutesInfoDecoded0 = [IpRouteInfo]()
            for structure0 in ipRoutesInfoContainer {
                if let structure0 = structure0 {
                    ipRoutesInfoDecoded0?.append(structure0)
                }
            }
        }
        ipRoutesInfo = ipRoutesInfoDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
