// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <fullname>CodeBuild</fullname>
///         CodeBuild is a fully managed build service in the cloud. CodeBuild compiles your source code,
///             runs unit tests, and produces artifacts that are ready to deploy. CodeBuild eliminates the
///             need to provision, manage, and scale your own build servers. It provides prepackaged
///             build environments for the most popular programming languages and build tools, such as
///             Apache Maven, Gradle, and more. You can also fully customize build environments in CodeBuild
///             to use your own build tools. CodeBuild scales automatically to meet peak build requests. You
///             pay only for the build time you consume. For more information about CodeBuild, see the
///                 <a href="https://docs.aws.amazon.com/codebuild/latest/userguide/welcome.html">CodeBuild User
///                     Guide.
///
public protocol CodeBuildClientProtocol {
    /// Deletes one or more builds.
    func batchDeleteBuilds(input: BatchDeleteBuildsInput, completion: @escaping (ClientRuntime.SdkResult<BatchDeleteBuildsOutputResponse, BatchDeleteBuildsOutputError>) -> Void)
    /// Retrieves information about one or more batch builds.
    func batchGetBuildBatches(input: BatchGetBuildBatchesInput, completion: @escaping (ClientRuntime.SdkResult<BatchGetBuildBatchesOutputResponse, BatchGetBuildBatchesOutputError>) -> Void)
    /// Gets information about one or more builds.
    func batchGetBuilds(input: BatchGetBuildsInput, completion: @escaping (ClientRuntime.SdkResult<BatchGetBuildsOutputResponse, BatchGetBuildsOutputError>) -> Void)
    /// Gets information about one or more build projects.
    func batchGetProjects(input: BatchGetProjectsInput, completion: @escaping (ClientRuntime.SdkResult<BatchGetProjectsOutputResponse, BatchGetProjectsOutputError>) -> Void)
    ///
    ///       Returns an array of report groups.
    ///
    func batchGetReportGroups(input: BatchGetReportGroupsInput, completion: @escaping (ClientRuntime.SdkResult<BatchGetReportGroupsOutputResponse, BatchGetReportGroupsOutputError>) -> Void)
    ///
    ///       Returns an array of reports.
    ///
    func batchGetReports(input: BatchGetReportsInput, completion: @escaping (ClientRuntime.SdkResult<BatchGetReportsOutputResponse, BatchGetReportsOutputError>) -> Void)
    /// Creates a build project.
    func createProject(input: CreateProjectInput, completion: @escaping (ClientRuntime.SdkResult<CreateProjectOutputResponse, CreateProjectOutputError>) -> Void)
    ///
    ///       Creates a report group. A report group contains a collection of reports.
    ///
    func createReportGroup(input: CreateReportGroupInput, completion: @escaping (ClientRuntime.SdkResult<CreateReportGroupOutputResponse, CreateReportGroupOutputError>) -> Void)
    /// For an existing CodeBuild build project that has its source code stored in a GitHub or
    ///       Bitbucket repository, enables CodeBuild to start rebuilding the source code every time a
    ///       code change is pushed to the repository.
    ///
    ///             If you enable webhooks for an CodeBuild project, and the project is used as a build
    ///         step in CodePipeline, then two identical builds are created for each commit. One build is
    ///         triggered through webhooks, and one through CodePipeline. Because billing is on a per-build
    ///         basis, you are billed for both builds. Therefore, if you are using CodePipeline, we
    ///         recommend that you disable webhooks in CodeBuild. In the CodeBuild console, clear the
    ///         Webhook box. For more information, see step 5 in <a href="https://docs.aws.amazon.com/codebuild/latest/userguide/change-project.html#change-project-console">Change a Build Project's Settings.
    ///
    func createWebhook(input: CreateWebhookInput, completion: @escaping (ClientRuntime.SdkResult<CreateWebhookOutputResponse, CreateWebhookOutputError>) -> Void)
    /// Deletes a batch build.
    func deleteBuildBatch(input: DeleteBuildBatchInput, completion: @escaping (ClientRuntime.SdkResult<DeleteBuildBatchOutputResponse, DeleteBuildBatchOutputError>) -> Void)
    ///  Deletes a build project. When you delete a project, its builds are not deleted.
    ///
    func deleteProject(input: DeleteProjectInput, completion: @escaping (ClientRuntime.SdkResult<DeleteProjectOutputResponse, DeleteProjectOutputError>) -> Void)
    ///
    ///       Deletes a report.
    ///
    func deleteReport(input: DeleteReportInput, completion: @escaping (ClientRuntime.SdkResult<DeleteReportOutputResponse, DeleteReportOutputError>) -> Void)
    /// Deletes a report group. Before you delete a report group, you must delete its reports.
    func deleteReportGroup(input: DeleteReportGroupInput, completion: @escaping (ClientRuntime.SdkResult<DeleteReportGroupOutputResponse, DeleteReportGroupOutputError>) -> Void)
    ///  Deletes a resource policy that is identified by its resource ARN.
    func deleteResourcePolicy(input: DeleteResourcePolicyInput, completion: @escaping (ClientRuntime.SdkResult<DeleteResourcePolicyOutputResponse, DeleteResourcePolicyOutputError>) -> Void)
    ///  Deletes a set of GitHub, GitHub Enterprise, or Bitbucket source credentials.
    func deleteSourceCredentials(input: DeleteSourceCredentialsInput, completion: @escaping (ClientRuntime.SdkResult<DeleteSourceCredentialsOutputResponse, DeleteSourceCredentialsOutputError>) -> Void)
    /// For an existing CodeBuild build project that has its source code stored in a GitHub or
    ///             Bitbucket repository, stops CodeBuild from rebuilding the source code every time a code
    ///             change is pushed to the repository.
    func deleteWebhook(input: DeleteWebhookInput, completion: @escaping (ClientRuntime.SdkResult<DeleteWebhookOutputResponse, DeleteWebhookOutputError>) -> Void)
    /// Retrieves one or more code coverage reports.
    func describeCodeCoverages(input: DescribeCodeCoveragesInput, completion: @escaping (ClientRuntime.SdkResult<DescribeCodeCoveragesOutputResponse, DescribeCodeCoveragesOutputError>) -> Void)
    ///
    ///       Returns a list of details about test cases for a report.
    ///
    func describeTestCases(input: DescribeTestCasesInput, completion: @escaping (ClientRuntime.SdkResult<DescribeTestCasesOutputResponse, DescribeTestCasesOutputError>) -> Void)
    /// Analyzes and accumulates test report values for the specified test reports.
    func getReportGroupTrend(input: GetReportGroupTrendInput, completion: @escaping (ClientRuntime.SdkResult<GetReportGroupTrendOutputResponse, GetReportGroupTrendOutputError>) -> Void)
    ///  Gets a resource policy that is identified by its resource ARN.
    func getResourcePolicy(input: GetResourcePolicyInput, completion: @escaping (ClientRuntime.SdkResult<GetResourcePolicyOutputResponse, GetResourcePolicyOutputError>) -> Void)
    ///  Imports the source repository credentials for an CodeBuild project that has its
    ///             source code stored in a GitHub, GitHub Enterprise, or Bitbucket repository.
    func importSourceCredentials(input: ImportSourceCredentialsInput, completion: @escaping (ClientRuntime.SdkResult<ImportSourceCredentialsOutputResponse, ImportSourceCredentialsOutputError>) -> Void)
    /// Resets the cache for a project.
    func invalidateProjectCache(input: InvalidateProjectCacheInput, completion: @escaping (ClientRuntime.SdkResult<InvalidateProjectCacheOutputResponse, InvalidateProjectCacheOutputError>) -> Void)
    /// Retrieves the identifiers of your build batches in the current region.
    func listBuildBatches(input: ListBuildBatchesInput, completion: @escaping (ClientRuntime.SdkResult<ListBuildBatchesOutputResponse, ListBuildBatchesOutputError>) -> Void)
    /// Retrieves the identifiers of the build batches for a specific project.
    func listBuildBatchesForProject(input: ListBuildBatchesForProjectInput, completion: @escaping (ClientRuntime.SdkResult<ListBuildBatchesForProjectOutputResponse, ListBuildBatchesForProjectOutputError>) -> Void)
    /// Gets a list of build IDs, with each build ID representing a single build.
    func listBuilds(input: ListBuildsInput, completion: @escaping (ClientRuntime.SdkResult<ListBuildsOutputResponse, ListBuildsOutputError>) -> Void)
    /// Gets a list of build identifiers for the specified build project, with each build
    ///             identifier representing a single build.
    func listBuildsForProject(input: ListBuildsForProjectInput, completion: @escaping (ClientRuntime.SdkResult<ListBuildsForProjectOutputResponse, ListBuildsForProjectOutputError>) -> Void)
    /// Gets information about Docker images that are managed by CodeBuild.
    func listCuratedEnvironmentImages(input: ListCuratedEnvironmentImagesInput, completion: @escaping (ClientRuntime.SdkResult<ListCuratedEnvironmentImagesOutputResponse, ListCuratedEnvironmentImagesOutputError>) -> Void)
    /// Gets a list of build project names, with each build project name representing a single
    ///             build project.
    func listProjects(input: ListProjectsInput, completion: @escaping (ClientRuntime.SdkResult<ListProjectsOutputResponse, ListProjectsOutputError>) -> Void)
    ///
    ///       Gets a list ARNs for the report groups in the current Amazon Web Services account.
    ///
    func listReportGroups(input: ListReportGroupsInput, completion: @escaping (ClientRuntime.SdkResult<ListReportGroupsOutputResponse, ListReportGroupsOutputError>) -> Void)
    ///
    ///       Returns a list of ARNs for the reports in the current Amazon Web Services account.
    ///
    func listReports(input: ListReportsInput, completion: @escaping (ClientRuntime.SdkResult<ListReportsOutputResponse, ListReportsOutputError>) -> Void)
    ///
    ///       Returns a list of ARNs for the reports that belong to a ReportGroup.
    ///
    func listReportsForReportGroup(input: ListReportsForReportGroupInput, completion: @escaping (ClientRuntime.SdkResult<ListReportsForReportGroupOutputResponse, ListReportsForReportGroupOutputError>) -> Void)
    ///  Gets a list of projects that are shared with other Amazon Web Services accounts or users.
    func listSharedProjects(input: ListSharedProjectsInput, completion: @escaping (ClientRuntime.SdkResult<ListSharedProjectsOutputResponse, ListSharedProjectsOutputError>) -> Void)
    ///  Gets a list of report groups that are shared with other Amazon Web Services accounts or users.
    ///
    func listSharedReportGroups(input: ListSharedReportGroupsInput, completion: @escaping (ClientRuntime.SdkResult<ListSharedReportGroupsOutputResponse, ListSharedReportGroupsOutputError>) -> Void)
    ///  Returns a list of SourceCredentialsInfo objects.
    func listSourceCredentials(input: ListSourceCredentialsInput, completion: @escaping (ClientRuntime.SdkResult<ListSourceCredentialsOutputResponse, ListSourceCredentialsOutputError>) -> Void)
    ///  Stores a resource policy for the ARN of a Project or
    ///                 ReportGroup object.
    func putResourcePolicy(input: PutResourcePolicyInput, completion: @escaping (ClientRuntime.SdkResult<PutResourcePolicyOutputResponse, PutResourcePolicyOutputError>) -> Void)
    /// Restarts a build.
    func retryBuild(input: RetryBuildInput, completion: @escaping (ClientRuntime.SdkResult<RetryBuildOutputResponse, RetryBuildOutputError>) -> Void)
    /// Restarts a failed batch build. Only batch builds that have failed can be retried.
    func retryBuildBatch(input: RetryBuildBatchInput, completion: @escaping (ClientRuntime.SdkResult<RetryBuildBatchOutputResponse, RetryBuildBatchOutputError>) -> Void)
    /// Starts running a build.
    func startBuild(input: StartBuildInput, completion: @escaping (ClientRuntime.SdkResult<StartBuildOutputResponse, StartBuildOutputError>) -> Void)
    /// Starts a batch build for a project.
    func startBuildBatch(input: StartBuildBatchInput, completion: @escaping (ClientRuntime.SdkResult<StartBuildBatchOutputResponse, StartBuildBatchOutputError>) -> Void)
    /// Attempts to stop running a build.
    func stopBuild(input: StopBuildInput, completion: @escaping (ClientRuntime.SdkResult<StopBuildOutputResponse, StopBuildOutputError>) -> Void)
    /// Stops a running batch build.
    func stopBuildBatch(input: StopBuildBatchInput, completion: @escaping (ClientRuntime.SdkResult<StopBuildBatchOutputResponse, StopBuildBatchOutputError>) -> Void)
    /// Changes the settings of a build project.
    func updateProject(input: UpdateProjectInput, completion: @escaping (ClientRuntime.SdkResult<UpdateProjectOutputResponse, UpdateProjectOutputError>) -> Void)
    /// Changes the public visibility for a project. The project's build results, logs, and
    ///       artifacts are available to the general public.  For more information, see <a href="https://docs.aws.amazon.com/codebuild/latest/userguide/public-builds.html">Public build
    ///         projects in the CodeBuild User Guide.
    ///
    ///             The following should be kept in mind when making your projects public:
    ///
    ///
    ///                   All of a project's build results, logs, and artifacts, including builds that were run
    ///             when the project was private, are available to the general public.
    ///
    ///
    ///                   All build logs and artifacts are available to the public. Environment variables, source
    ///             code, and other sensitive information may have been output to the build logs and artifacts.
    ///             You must be careful about what information is output to the build logs. Some best practice
    ///             are:
    ///
    ///
    ///                         Do not store sensitive values, especially Amazon Web Services access key IDs and secret access
    ///                 keys, in environment variables. We recommend that you use an Amazon EC2 Systems Manager Parameter Store
    ///                 or Secrets Manager to store sensitive values.
    ///
    ///
    ///                         Follow <a href="https://docs.aws.amazon.com/codebuild/latest/userguide/webhooks.html#webhook-best-practices">Best
    ///                   practices for using webhooks in the CodeBuild User
    ///                   Guide to limit which entities can trigger a build, and do
    ///                   not store the buildspec in the project itself, to ensure that your webhooks are as
    ///                   secure as possible.
    ///
    ///
    ///
    ///
    ///                   A malicious user can use public builds to distribute malicious artifacts. We recommend
    ///             that you review all pull requests to verify that the pull request is a legitimate change. We
    ///             also recommend that you validate any artifacts with their checksums to make sure that the
    ///             correct artifacts are being downloaded.
    ///
    ///
    ///
    func updateProjectVisibility(input: UpdateProjectVisibilityInput, completion: @escaping (ClientRuntime.SdkResult<UpdateProjectVisibilityOutputResponse, UpdateProjectVisibilityOutputError>) -> Void)
    ///
    ///       Updates a report group.
    ///
    func updateReportGroup(input: UpdateReportGroupInput, completion: @escaping (ClientRuntime.SdkResult<UpdateReportGroupOutputResponse, UpdateReportGroupOutputError>) -> Void)
    ///  Updates the webhook associated with an CodeBuild build project.
    ///
    ///              If you use Bitbucket for your repository, rotateSecret is ignored.
    ///
    ///
    func updateWebhook(input: UpdateWebhookInput, completion: @escaping (ClientRuntime.SdkResult<UpdateWebhookOutputResponse, UpdateWebhookOutputError>) -> Void)
}

public enum CodeBuildClientTypes {}
