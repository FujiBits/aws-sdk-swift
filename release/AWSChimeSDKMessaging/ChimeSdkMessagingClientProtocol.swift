// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// The Amazon Chime SDK Messaging APIs in this section allow software developers to send
///          and receive messages in custom messaging applications. These APIs depend on the frameworks
///          provided by the Amazon Chime SDK Identity APIs. For more information about the messaging
///          APIs, see <a href="https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Messaging">Amazon Chime SDK messaging
///
public protocol ChimeSdkMessagingClientProtocol {
    /// Adds a specified number of users to a channel.
    func batchCreateChannelMembership(input: BatchCreateChannelMembershipInput, completion: @escaping (ClientRuntime.SdkResult<BatchCreateChannelMembershipOutputResponse, BatchCreateChannelMembershipOutputError>) -> Void)
    /// Creates a channel to which you can add users and send messages.
    ///
    ///
    ///             Restriction: You can't change a channel's
    ///          privacy.
    ///
    ///
    ///             The x-amz-chime-bearer request header is mandatory. Use the
    ///                AppInstanceUserArn of the user that makes the API call as the value in
    ///             the header.
    ///
    func createChannel(input: CreateChannelInput, completion: @escaping (ClientRuntime.SdkResult<CreateChannelOutputResponse, CreateChannelOutputError>) -> Void)
    /// Permanently bans a member from a channel. Moderators can't add banned members to a
    ///          channel. To undo a ban, you first have to DeleteChannelBan, and then
    ///             CreateChannelMembership. Bans are cleaned up when you delete users or
    ///          channels.
    ///          If you ban a user who is already part of a channel, that user is automatically kicked
    ///          from the channel.
    ///
    ///
    ///             The x-amz-chime-bearer request header is mandatory. Use the
    ///                AppInstanceUserArn of the user that makes the API call as the value in
    ///             the header.
    ///
    func createChannelBan(input: CreateChannelBanInput, completion: @escaping (ClientRuntime.SdkResult<CreateChannelBanOutputResponse, CreateChannelBanOutputError>) -> Void)
    /// Adds a user to a channel. The InvitedBy response field is derived from the
    ///          request header. A channel member can:
    ///
    ///
    ///
    ///                List messages
    ///
    ///
    ///                Send messages
    ///
    ///
    ///                Receive messages
    ///
    ///
    ///                Edit their own messages
    ///
    ///
    ///                Leave the channel
    ///
    ///
    ///
    ///          Privacy settings impact this action as follows:
    ///
    ///
    ///
    ///                Public Channels: You do not need to be a member to list messages, but you must be
    ///                a member to send messages.
    ///
    ///
    ///                Private Channels: You must be a member to list or send messages.
    ///
    ///
    ///
    ///
    ///             The x-amz-chime-bearer request header is mandatory. Use the
    ///                AppInstanceUserArn of the user that makes the API call as the value in
    ///             the header.
    ///
    func createChannelMembership(input: CreateChannelMembershipInput, completion: @escaping (ClientRuntime.SdkResult<CreateChannelMembershipOutputResponse, CreateChannelMembershipOutputError>) -> Void)
    /// Creates a new ChannelModerator. A channel moderator can:
    ///
    ///
    ///
    ///                Add and remove other members of the channel.
    ///
    ///
    ///                Add and remove other moderators of the channel.
    ///
    ///
    ///                Add and remove user bans for the channel.
    ///
    ///
    ///                Redact messages in the channel.
    ///
    ///
    ///                List messages in the channel.
    ///
    ///
    ///
    ///
    ///             The x-amz-chime-bearer request header is mandatory. Use the
    ///                AppInstanceUserArn of the user that makes the API call as the value in
    ///             the header.
    ///
    func createChannelModerator(input: CreateChannelModeratorInput, completion: @escaping (ClientRuntime.SdkResult<CreateChannelModeratorOutputResponse, CreateChannelModeratorOutputError>) -> Void)
    /// Immediately makes a channel and its memberships inaccessible and marks them for
    ///          deletion. This is an irreversible process.
    ///
    ///
    ///             The x-amz-chime-bearer request header is mandatory. Use the
    ///                AppInstanceUserArn of the user that makes the API call as the value in
    ///             the header.
    ///
    func deleteChannel(input: DeleteChannelInput, completion: @escaping (ClientRuntime.SdkResult<DeleteChannelOutputResponse, DeleteChannelOutputError>) -> Void)
    /// Removes a user from a channel's ban list.
    ///
    ///
    ///             The x-amz-chime-bearer request header is mandatory. Use the
    ///                AppInstanceUserArn of the user that makes the API call as the value in
    ///             the header.
    ///
    func deleteChannelBan(input: DeleteChannelBanInput, completion: @escaping (ClientRuntime.SdkResult<DeleteChannelBanOutputResponse, DeleteChannelBanOutputError>) -> Void)
    /// Removes a member from a channel.
    ///
    ///
    ///             The x-amz-chime-bearer request header is mandatory. Use the
    ///                AppInstanceUserArn of the user that makes the API call as the value in
    ///             the header.
    ///
    func deleteChannelMembership(input: DeleteChannelMembershipInput, completion: @escaping (ClientRuntime.SdkResult<DeleteChannelMembershipOutputResponse, DeleteChannelMembershipOutputError>) -> Void)
    /// Deletes a channel message. Only admins can perform this action. Deletion makes messages
    ///          inaccessible immediately. A background process deletes any revisions created by
    ///             UpdateChannelMessage.
    ///
    ///
    ///             The x-amz-chime-bearer request header is mandatory. Use the
    ///                AppInstanceUserArn of the user that makes the API call as the value in
    ///             the header.
    ///
    func deleteChannelMessage(input: DeleteChannelMessageInput, completion: @escaping (ClientRuntime.SdkResult<DeleteChannelMessageOutputResponse, DeleteChannelMessageOutputError>) -> Void)
    /// Deletes a channel moderator.
    ///
    ///
    ///             The x-amz-chime-bearer request header is mandatory. Use the
    ///                AppInstanceUserArn of the user that makes the API call as the value in
    ///             the header.
    ///
    func deleteChannelModerator(input: DeleteChannelModeratorInput, completion: @escaping (ClientRuntime.SdkResult<DeleteChannelModeratorOutputResponse, DeleteChannelModeratorOutputError>) -> Void)
    /// Returns the full details of a channel in an Amazon Chime
    ///          AppInstance.
    ///
    ///
    ///
    ///             The x-amz-chime-bearer request header is mandatory. Use the
    ///                AppInstanceUserArn of the user that makes the API call as the value in
    ///             the header.
    ///
    func describeChannel(input: DescribeChannelInput, completion: @escaping (ClientRuntime.SdkResult<DescribeChannelOutputResponse, DescribeChannelOutputError>) -> Void)
    /// Returns the full details of a channel ban.
    ///
    ///
    ///
    ///             The x-amz-chime-bearer request header is mandatory. Use the
    ///                AppInstanceUserArn of the user that makes the API call as the value in
    ///             the header.
    ///
    func describeChannelBan(input: DescribeChannelBanInput, completion: @escaping (ClientRuntime.SdkResult<DescribeChannelBanOutputResponse, DescribeChannelBanOutputError>) -> Void)
    /// Returns the full details of a user's channel membership.
    ///
    ///             The x-amz-chime-bearer request header is mandatory. Use the
    ///                AppInstanceUserArn of the user that makes the API call as the value in
    ///             the header.
    ///
    func describeChannelMembership(input: DescribeChannelMembershipInput, completion: @escaping (ClientRuntime.SdkResult<DescribeChannelMembershipOutputResponse, DescribeChannelMembershipOutputError>) -> Void)
    ///  Returns the details of a channel based on the membership of the specified
    ///             AppInstanceUser.
    ///
    ///
    ///             The x-amz-chime-bearer request header is mandatory. Use the
    ///                AppInstanceUserArn of the user that makes the API call as the value in
    ///             the header.
    ///
    func describeChannelMembershipForAppInstanceUser(input: DescribeChannelMembershipForAppInstanceUserInput, completion: @escaping (ClientRuntime.SdkResult<DescribeChannelMembershipForAppInstanceUserOutputResponse, DescribeChannelMembershipForAppInstanceUserOutputError>) -> Void)
    /// Returns the full details of a channel moderated by the specified
    ///             AppInstanceUser.
    ///
    ///
    ///             The x-amz-chime-bearer request header is mandatory. Use the
    ///                AppInstanceUserArn of the user that makes the API call as the value in
    ///             the header.
    ///
    func describeChannelModeratedByAppInstanceUser(input: DescribeChannelModeratedByAppInstanceUserInput, completion: @escaping (ClientRuntime.SdkResult<DescribeChannelModeratedByAppInstanceUserOutputResponse, DescribeChannelModeratedByAppInstanceUserOutputError>) -> Void)
    /// Returns the full details of a single ChannelModerator.
    ///
    ///             The x-amz-chime-bearer request header is mandatory. Use the
    ///                AppInstanceUserArn of the user that makes the API call as the value in
    ///             the header.
    ///
    func describeChannelModerator(input: DescribeChannelModeratorInput, completion: @escaping (ClientRuntime.SdkResult<DescribeChannelModeratorOutputResponse, DescribeChannelModeratorOutputError>) -> Void)
    /// Gets the full details of a channel message.
    ///
    ///
    ///             The x-amz-chime-bearer request header is mandatory. Use the
    ///                AppInstanceUserArn of the user that makes the API call as the value in
    ///             the header.
    ///
    func getChannelMessage(input: GetChannelMessageInput, completion: @escaping (ClientRuntime.SdkResult<GetChannelMessageOutputResponse, GetChannelMessageOutputError>) -> Void)
    /// The details of the endpoint for the messaging session.
    func getMessagingSessionEndpoint(input: GetMessagingSessionEndpointInput, completion: @escaping (ClientRuntime.SdkResult<GetMessagingSessionEndpointOutputResponse, GetMessagingSessionEndpointOutputError>) -> Void)
    /// Lists all the users banned from a particular channel.
    ///
    ///
    ///             The x-amz-chime-bearer request header is mandatory. Use the
    ///                AppInstanceUserArn of the user that makes the API call as the value in
    ///             the header.
    ///
    func listChannelBans(input: ListChannelBansInput, completion: @escaping (ClientRuntime.SdkResult<ListChannelBansOutputResponse, ListChannelBansOutputError>) -> Void)
    /// Lists all channel memberships in a channel.
    ///
    ///
    ///
    ///             The x-amz-chime-bearer request header is mandatory. Use the
    ///                AppInstanceUserArn of the user that makes the API call as the value in
    ///             the header.
    ///
    func listChannelMemberships(input: ListChannelMembershipsInput, completion: @escaping (ClientRuntime.SdkResult<ListChannelMembershipsOutputResponse, ListChannelMembershipsOutputError>) -> Void)
    ///  Lists all channels that a particular AppInstanceUser is a part of. Only an
    ///             AppInstanceAdmin can call the API with a user ARN that is not their own.
    ///
    ///
    ///             The x-amz-chime-bearer request header is mandatory. Use the
    ///                AppInstanceUserArn of the user that makes the API call as the value in
    ///             the header.
    ///
    func listChannelMembershipsForAppInstanceUser(input: ListChannelMembershipsForAppInstanceUserInput, completion: @escaping (ClientRuntime.SdkResult<ListChannelMembershipsForAppInstanceUserOutputResponse, ListChannelMembershipsForAppInstanceUserOutputError>) -> Void)
    /// List all the messages in a channel. Returns a paginated list of
    ///             ChannelMessages. By default, sorted by creation timestamp in descending
    ///          order.
    ///
    ///             Redacted messages appear in the results as empty, since they are only redacted, not
    ///             deleted. Deleted messages do not appear in the results. This action always returns the
    ///             latest version of an edited message.
    ///             Also, the x-amz-chime-bearer request header is mandatory. Use the
    ///                AppInstanceUserArn of the user that makes the API call as the value in
    ///             the header.
    ///
    func listChannelMessages(input: ListChannelMessagesInput, completion: @escaping (ClientRuntime.SdkResult<ListChannelMessagesOutputResponse, ListChannelMessagesOutputError>) -> Void)
    /// Lists all the moderators for a channel.
    ///
    ///             The x-amz-chime-bearer request header is mandatory. Use the
    ///                AppInstanceUserArn of the user that makes the API call as the value in
    ///             the header.
    ///
    func listChannelModerators(input: ListChannelModeratorsInput, completion: @escaping (ClientRuntime.SdkResult<ListChannelModeratorsOutputResponse, ListChannelModeratorsOutputError>) -> Void)
    /// Lists all Channels created under a single Chime App as a paginated list. You can specify
    ///          filters to narrow results.
    ///
    ///          <p class="title">
    ///             Functionality & restrictions
    ///
    ///
    ///
    ///                Use privacy = PUBLIC to retrieve all public channels in the
    ///                account.
    ///
    ///
    ///                Only an AppInstanceAdmin can set privacy = PRIVATE to
    ///                list the private channels in an account.
    ///
    ///
    ///
    ///
    ///             The x-amz-chime-bearer request header is mandatory. Use the
    ///                AppInstanceUserArn of the user that makes the API call as the value in
    ///             the header.
    ///
    func listChannels(input: ListChannelsInput, completion: @escaping (ClientRuntime.SdkResult<ListChannelsOutputResponse, ListChannelsOutputError>) -> Void)
    /// A list of the channels moderated by an AppInstanceUser.
    ///
    ///
    ///             The x-amz-chime-bearer request header is mandatory. Use the
    ///                AppInstanceUserArn of the user that makes the API call as the value in
    ///             the header.
    ///
    func listChannelsModeratedByAppInstanceUser(input: ListChannelsModeratedByAppInstanceUserInput, completion: @escaping (ClientRuntime.SdkResult<ListChannelsModeratedByAppInstanceUserOutputResponse, ListChannelsModeratedByAppInstanceUserOutputError>) -> Void)
    /// Redacts message content, but not metadata. The message exists in the back end, but the
    ///          action returns null content, and the state shows as redacted.
    ///
    ///
    ///             The x-amz-chime-bearer request header is mandatory. Use the
    ///                AppInstanceUserArn of the user that makes the API call as the value in
    ///             the header.
    ///
    func redactChannelMessage(input: RedactChannelMessageInput, completion: @escaping (ClientRuntime.SdkResult<RedactChannelMessageOutputResponse, RedactChannelMessageOutputError>) -> Void)
    /// Sends a message to a particular channel that the member is a part of.
    ///
    ///
    ///             The x-amz-chime-bearer request header is mandatory. Use the
    ///                AppInstanceUserArn of the user that makes the API call as the value in
    ///             the header.
    ///
    ///             Also, STANDARD messages can contain 4KB of data and the 1KB of metadata.
    ///                CONTROL messages can contain 30 bytes of data and no metadata.
    ///
    func sendChannelMessage(input: SendChannelMessageInput, completion: @escaping (ClientRuntime.SdkResult<SendChannelMessageOutputResponse, SendChannelMessageOutputError>) -> Void)
    /// Update a channel's attributes.
    ///
    ///             Restriction: You can't change a channel's privacy.
    ///
    ///             The x-amz-chime-bearer request header is mandatory. Use the
    ///                AppInstanceUserArn of the user that makes the API call as the value in
    ///             the header.
    ///
    func updateChannel(input: UpdateChannelInput, completion: @escaping (ClientRuntime.SdkResult<UpdateChannelOutputResponse, UpdateChannelOutputError>) -> Void)
    /// Updates the content of a message.
    ///
    ///
    ///             The x-amz-chime-bearer request header is mandatory. Use the
    ///                AppInstanceUserArn of the user that makes the API call as the value in
    ///             the header.
    ///
    func updateChannelMessage(input: UpdateChannelMessageInput, completion: @escaping (ClientRuntime.SdkResult<UpdateChannelMessageOutputResponse, UpdateChannelMessageOutputError>) -> Void)
    /// The details of the time when a user last read messages in a channel.
    ///
    ///
    ///             The x-amz-chime-bearer request header is mandatory. Use the
    ///                AppInstanceUserArn of the user that makes the API call as the value in
    ///             the header.
    ///
    func updateChannelReadMarker(input: UpdateChannelReadMarkerInput, completion: @escaping (ClientRuntime.SdkResult<UpdateChannelReadMarkerOutputResponse, UpdateChannelReadMarkerOutputError>) -> Void)
}

public enum ChimeSdkMessagingClientTypes {}
