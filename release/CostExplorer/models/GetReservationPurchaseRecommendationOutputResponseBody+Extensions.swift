// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetReservationPurchaseRecommendationOutputResponseBody: Equatable {
    public let metadata: ReservationPurchaseRecommendationMetadata?
    public let recommendations: [ReservationPurchaseRecommendation]?
    public let nextPageToken: String?
}

extension GetReservationPurchaseRecommendationOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case metadata = "Metadata"
        case nextPageToken = "NextPageToken"
        case recommendations = "Recommendations"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let metadataDecoded = try containerValues.decodeIfPresent(ReservationPurchaseRecommendationMetadata.self, forKey: .metadata)
        metadata = metadataDecoded
        let recommendationsContainer = try containerValues.decodeIfPresent([ReservationPurchaseRecommendation?].self, forKey: .recommendations)
        var recommendationsDecoded0:[ReservationPurchaseRecommendation]? = nil
        if let recommendationsContainer = recommendationsContainer {
            recommendationsDecoded0 = [ReservationPurchaseRecommendation]()
            for structure0 in recommendationsContainer {
                if let structure0 = structure0 {
                    recommendationsDecoded0?.append(structure0)
                }
            }
        }
        recommendations = recommendationsDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
