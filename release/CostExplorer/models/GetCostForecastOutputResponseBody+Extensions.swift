// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetCostForecastOutputResponseBody: Equatable {
    public let total: MetricValue?
    public let forecastResultsByTime: [ForecastResult]?
}

extension GetCostForecastOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case forecastResultsByTime = "ForecastResultsByTime"
        case total = "Total"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let totalDecoded = try containerValues.decodeIfPresent(MetricValue.self, forKey: .total)
        total = totalDecoded
        let forecastResultsByTimeContainer = try containerValues.decodeIfPresent([ForecastResult?].self, forKey: .forecastResultsByTime)
        var forecastResultsByTimeDecoded0:[ForecastResult]? = nil
        if let forecastResultsByTimeContainer = forecastResultsByTimeContainer {
            forecastResultsByTimeDecoded0 = [ForecastResult]()
            for structure0 in forecastResultsByTimeContainer {
                if let structure0 = structure0 {
                    forecastResultsByTimeDecoded0?.append(structure0)
                }
            }
        }
        forecastResultsByTime = forecastResultsByTimeDecoded0
    }
}
