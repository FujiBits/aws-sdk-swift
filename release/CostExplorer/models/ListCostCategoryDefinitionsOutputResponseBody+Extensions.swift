// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListCostCategoryDefinitionsOutputResponseBody: Equatable {
    public let costCategoryReferences: [CostCategoryReference]?
    public let nextToken: String?
}

extension ListCostCategoryDefinitionsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case costCategoryReferences = "CostCategoryReferences"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let costCategoryReferencesContainer = try containerValues.decodeIfPresent([CostCategoryReference?].self, forKey: .costCategoryReferences)
        var costCategoryReferencesDecoded0:[CostCategoryReference]? = nil
        if let costCategoryReferencesContainer = costCategoryReferencesContainer {
            costCategoryReferencesDecoded0 = [CostCategoryReference]()
            for structure0 in costCategoryReferencesContainer {
                if let structure0 = structure0 {
                    costCategoryReferencesDecoded0?.append(structure0)
                }
            }
        }
        costCategoryReferences = costCategoryReferencesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
