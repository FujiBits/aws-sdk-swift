// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

#if swift(>=5.5)
@available(macOS 12.0, iOS 15.0, tvOS 15.0, watchOS 8.0, macCatalyst 15.0, *)
public extension WorkMailMessageFlowClient {
    /// <p>Retrieves the raw content of an in-transit email message, in MIME format.</p>
    func getRawMessageContent(input: GetRawMessageContentInput) async throws -> GetRawMessageContentOutputResponse
    {
        typealias getRawMessageContentContinuation = CheckedContinuation<GetRawMessageContentOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: getRawMessageContentContinuation) in
            getRawMessageContent(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// <p>Updates the raw content of an in-transit email message, in MIME format.</p>
    ///          <p>This example describes how to update in-transit email message. For more information and examples for using this API, see
    ///       <a href="https://docs.aws.amazon.com/workmail/latest/adminguide/update-with-lambda.html">
    ///         Updating message content with AWS Lambda</a>.</p>
    ///
    ///
    ///          <note>
    ///             <p>Updates to an in-transit message only appear when you call <code>PutRawMessageContent</code> from an AWS Lambda function
    ///       configured with a  synchronous <a href="https://docs.aws.amazon.com/workmail/latest/adminguide/lambda.html#synchronous-rules">
    ///         Run Lambda</a> rule. If you call <code>PutRawMessageContent</code> on a delivered or sent message, the message remains unchanged,
    ///       even though <a href="https://docs.aws.amazon.com/workmail/latest/APIReference/API_messageflow_GetRawMessageContent.html">GetRawMessageContent</a> returns an updated
    ///         message.
    ///     </p>
    ///          </note>
    func putRawMessageContent(input: PutRawMessageContentInput) async throws -> PutRawMessageContentOutputResponse
    {
        typealias putRawMessageContentContinuation = CheckedContinuation<PutRawMessageContentOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: putRawMessageContentContinuation) in
            putRawMessageContent(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

}
#endif
