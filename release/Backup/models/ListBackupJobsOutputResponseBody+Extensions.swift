// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListBackupJobsOutputResponseBody: Equatable {
    public let backupJobs: [BackupJob]?
    public let nextToken: String?
}

extension ListBackupJobsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case backupJobs = "BackupJobs"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let backupJobsContainer = try containerValues.decodeIfPresent([BackupJob?].self, forKey: .backupJobs)
        var backupJobsDecoded0:[BackupJob]? = nil
        if let backupJobsContainer = backupJobsContainer {
            backupJobsDecoded0 = [BackupJob]()
            for structure0 in backupJobsContainer {
                if let structure0 = structure0 {
                    backupJobsDecoded0?.append(structure0)
                }
            }
        }
        backupJobs = backupJobsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
