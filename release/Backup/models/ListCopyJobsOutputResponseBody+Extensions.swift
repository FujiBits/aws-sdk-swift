// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListCopyJobsOutputResponseBody: Equatable {
    public let copyJobs: [CopyJob]?
    public let nextToken: String?
}

extension ListCopyJobsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case copyJobs = "CopyJobs"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let copyJobsContainer = try containerValues.decodeIfPresent([CopyJob?].self, forKey: .copyJobs)
        var copyJobsDecoded0:[CopyJob]? = nil
        if let copyJobsContainer = copyJobsContainer {
            copyJobsDecoded0 = [CopyJob]()
            for structure0 in copyJobsContainer {
                if let structure0 = structure0 {
                    copyJobsDecoded0?.append(structure0)
                }
            }
        }
        copyJobs = copyJobsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
