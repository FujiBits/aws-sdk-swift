// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDatasetContentsOutputResponseBody: Equatable {
    public let datasetContentSummaries: [DatasetContentSummary]?
    public let nextToken: String?
}

extension ListDatasetContentsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case datasetContentSummaries
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let datasetContentSummariesContainer = try containerValues.decodeIfPresent([DatasetContentSummary?].self, forKey: .datasetContentSummaries)
        var datasetContentSummariesDecoded0:[DatasetContentSummary]? = nil
        if let datasetContentSummariesContainer = datasetContentSummariesContainer {
            datasetContentSummariesDecoded0 = [DatasetContentSummary]()
            for structure0 in datasetContentSummariesContainer {
                if let structure0 = structure0 {
                    datasetContentSummariesDecoded0?.append(structure0)
                }
            }
        }
        datasetContentSummaries = datasetContentSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
