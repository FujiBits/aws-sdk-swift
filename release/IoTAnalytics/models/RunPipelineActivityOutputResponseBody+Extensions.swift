// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct RunPipelineActivityOutputResponseBody: Equatable {
    public let payloads: [Data]?
    public let logResult: String?
}

extension RunPipelineActivityOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case logResult
        case payloads
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let payloadsContainer = try containerValues.decodeIfPresent([ClientRuntime.Data?].self, forKey: .payloads)
        var payloadsDecoded0:[Data]? = nil
        if let payloadsContainer = payloadsContainer {
            payloadsDecoded0 = [Data]()
            for blob0 in payloadsContainer {
                if let blob0 = blob0 {
                    payloadsDecoded0?.append(blob0)
                }
            }
        }
        payloads = payloadsDecoded0
        let logResultDecoded = try containerValues.decodeIfPresent(String.self, forKey: .logResult)
        logResult = logResultDecoded
    }
}
