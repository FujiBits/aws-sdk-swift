// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAttachedIndicesOutputResponseBody: Equatable {
    public let indexAttachments: [IndexAttachment]?
    public let nextToken: String?
}

extension ListAttachedIndicesOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case indexAttachments = "IndexAttachments"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let indexAttachmentsContainer = try containerValues.decodeIfPresent([IndexAttachment?].self, forKey: .indexAttachments)
        var indexAttachmentsDecoded0:[IndexAttachment]? = nil
        if let indexAttachmentsContainer = indexAttachmentsContainer {
            indexAttachmentsDecoded0 = [IndexAttachment]()
            for structure0 in indexAttachmentsContainer {
                if let structure0 = structure0 {
                    indexAttachmentsDecoded0?.append(structure0)
                }
            }
        }
        indexAttachments = indexAttachmentsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
