// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct TestRepositoryTriggersOutputResponseBody: Equatable {
    public let successfulExecutions: [String]?
    public let failedExecutions: [RepositoryTriggerExecutionFailure]?
}

extension TestRepositoryTriggersOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case failedExecutions
        case successfulExecutions
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let successfulExecutionsContainer = try containerValues.decodeIfPresent([String?].self, forKey: .successfulExecutions)
        var successfulExecutionsDecoded0:[String]? = nil
        if let successfulExecutionsContainer = successfulExecutionsContainer {
            successfulExecutionsDecoded0 = [String]()
            for string0 in successfulExecutionsContainer {
                if let string0 = string0 {
                    successfulExecutionsDecoded0?.append(string0)
                }
            }
        }
        successfulExecutions = successfulExecutionsDecoded0
        let failedExecutionsContainer = try containerValues.decodeIfPresent([RepositoryTriggerExecutionFailure?].self, forKey: .failedExecutions)
        var failedExecutionsDecoded0:[RepositoryTriggerExecutionFailure]? = nil
        if let failedExecutionsContainer = failedExecutionsContainer {
            failedExecutionsDecoded0 = [RepositoryTriggerExecutionFailure]()
            for structure0 in failedExecutionsContainer {
                if let structure0 = structure0 {
                    failedExecutionsDecoded0?.append(structure0)
                }
            }
        }
        failedExecutions = failedExecutionsDecoded0
    }
}
