// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetExecutionHistoryOutputResponseBody: Equatable {
    public let events: [HistoryEvent]?
    public let nextToken: String?
}

extension GetExecutionHistoryOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case events
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let eventsContainer = try containerValues.decodeIfPresent([HistoryEvent?].self, forKey: .events)
        var eventsDecoded0:[HistoryEvent]? = nil
        if let eventsContainer = eventsContainer {
            eventsDecoded0 = [HistoryEvent]()
            for structure0 in eventsContainer {
                if let structure0 = structure0 {
                    eventsDecoded0?.append(structure0)
                }
            }
        }
        events = eventsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
