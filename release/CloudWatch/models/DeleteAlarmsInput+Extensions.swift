// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DeleteAlarmsInputHeadersMiddleware: Middleware {
    public let id: String = "DeleteAlarmsInputHeadersMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<DeleteAlarmsInput>,
                  next: H) -> Swift.Result<OperationOutput<DeleteAlarmsOutputResponse>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<DeleteAlarmsInput>
    public typealias MOutput = OperationOutput<DeleteAlarmsOutputResponse>
    public typealias Context = ClientRuntime.HttpContext
    public typealias MError = SdkError<DeleteAlarmsOutputError>
}

public struct DeleteAlarmsInputQueryItemMiddleware: Middleware {
    public let id: String = "DeleteAlarmsInputQueryItemMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<DeleteAlarmsInput>,
                  next: H) -> Swift.Result<OperationOutput<DeleteAlarmsOutputResponse>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<DeleteAlarmsInput>
    public typealias MOutput = OperationOutput<DeleteAlarmsOutputResponse>
    public typealias Context = ClientRuntime.HttpContext
    public typealias MError = SdkError<DeleteAlarmsOutputError>
}

public struct DeleteAlarmsInputBodyMiddleware: Middleware {
    public let id: String = "DeleteAlarmsInputBodyMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<DeleteAlarmsInput>,
                  next: H) -> Swift.Result<OperationOutput<DeleteAlarmsOutputResponse>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        do {
            let encoder = context.getEncoder()
            let data = try encoder.encode(input.operationInput)
            let body = HttpBody.data(data)
            input.builder.withBody(body)
        } catch let err {
            return .failure(.client(ClientError.serializationFailed(err.localizedDescription)))
        }
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<DeleteAlarmsInput>
    public typealias MOutput = OperationOutput<DeleteAlarmsOutputResponse>
    public typealias Context = ClientRuntime.HttpContext
    public typealias MError = SdkError<DeleteAlarmsOutputError>
}

extension DeleteAlarmsInput: Encodable, Reflection {
    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let alarmNames = alarmNames {
            var alarmNamesContainer = container.nestedContainer(keyedBy: Key.self, forKey: Key("AlarmNames"))
            for (index0, alarmname0) in alarmNames.enumerated() {
                try alarmNamesContainer.encode(alarmname0, forKey: Key("member.\(index0.advanced(by: 1))"))
            }
        }
        try container.encode("DeleteAlarms", forKey:Key("Action"))
        try container.encode("2010-08-01", forKey:Key("Version"))
    }
}
