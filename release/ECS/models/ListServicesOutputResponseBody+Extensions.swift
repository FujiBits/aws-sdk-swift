// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListServicesOutputResponseBody: Equatable {
    public let serviceArns: [String]?
    public let nextToken: String?
}

extension ListServicesOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case serviceArns
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let serviceArnsContainer = try containerValues.decodeIfPresent([String?].self, forKey: .serviceArns)
        var serviceArnsDecoded0:[String]? = nil
        if let serviceArnsContainer = serviceArnsContainer {
            serviceArnsDecoded0 = [String]()
            for string0 in serviceArnsContainer {
                if let string0 = string0 {
                    serviceArnsDecoded0?.append(string0)
                }
            }
        }
        serviceArns = serviceArnsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
