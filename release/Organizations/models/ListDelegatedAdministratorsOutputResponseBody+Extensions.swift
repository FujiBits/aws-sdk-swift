// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDelegatedAdministratorsOutputResponseBody: Equatable {
    public let delegatedAdministrators: [DelegatedAdministrator]?
    public let nextToken: String?
}

extension ListDelegatedAdministratorsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case delegatedAdministrators = "DelegatedAdministrators"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let delegatedAdministratorsContainer = try containerValues.decodeIfPresent([DelegatedAdministrator?].self, forKey: .delegatedAdministrators)
        var delegatedAdministratorsDecoded0:[DelegatedAdministrator]? = nil
        if let delegatedAdministratorsContainer = delegatedAdministratorsContainer {
            delegatedAdministratorsDecoded0 = [DelegatedAdministrator]()
            for structure0 in delegatedAdministratorsContainer {
                if let structure0 = structure0 {
                    delegatedAdministratorsDecoded0?.append(structure0)
                }
            }
        }
        delegatedAdministrators = delegatedAdministratorsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
