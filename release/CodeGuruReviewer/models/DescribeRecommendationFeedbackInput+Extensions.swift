// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DescribeRecommendationFeedbackInputHeadersMiddleware: Middleware {
    public let id: String = "DescribeRecommendationFeedbackInputHeadersMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<DescribeRecommendationFeedbackInput>,
                  next: H) -> Swift.Result<OperationOutput<DescribeRecommendationFeedbackOutputResponse>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<DescribeRecommendationFeedbackInput>
    public typealias MOutput = OperationOutput<DescribeRecommendationFeedbackOutputResponse>
    public typealias Context = ClientRuntime.HttpContext
    public typealias MError = SdkError<DescribeRecommendationFeedbackOutputError>
}

public struct DescribeRecommendationFeedbackInputQueryItemMiddleware: Middleware {
    public let id: String = "DescribeRecommendationFeedbackInputQueryItemMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<DescribeRecommendationFeedbackInput>,
                  next: H) -> Swift.Result<OperationOutput<DescribeRecommendationFeedbackOutputResponse>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        if let userId = input.operationInput.userId {
            let userIdQueryItem = URLQueryItem(name: "UserId".urlPercentEncoding(), value: String(userId).urlPercentEncoding())
            input.builder.withQueryItem(userIdQueryItem)
        }
        if let recommendationId = input.operationInput.recommendationId {
            let recommendationIdQueryItem = URLQueryItem(name: "RecommendationId".urlPercentEncoding(), value: String(recommendationId).urlPercentEncoding())
            input.builder.withQueryItem(recommendationIdQueryItem)
        }
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<DescribeRecommendationFeedbackInput>
    public typealias MOutput = OperationOutput<DescribeRecommendationFeedbackOutputResponse>
    public typealias Context = ClientRuntime.HttpContext
    public typealias MError = SdkError<DescribeRecommendationFeedbackOutputError>
}

extension DescribeRecommendationFeedbackInput: Encodable, Reflection {

    public func encode(to encoder: Encoder) throws {
    }
}
