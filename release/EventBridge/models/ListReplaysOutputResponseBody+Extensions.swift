// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListReplaysOutputResponseBody: Equatable {
    public let replays: [Replay]?
    public let nextToken: String?
}

extension ListReplaysOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case replays = "Replays"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let replaysContainer = try containerValues.decodeIfPresent([Replay?].self, forKey: .replays)
        var replaysDecoded0:[Replay]? = nil
        if let replaysContainer = replaysContainer {
            replaysDecoded0 = [Replay]()
            for structure0 in replaysContainer {
                if let structure0 = structure0 {
                    replaysDecoded0?.append(structure0)
                }
            }
        }
        replays = replaysDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
