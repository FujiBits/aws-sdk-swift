// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTablesOutputResponseBody: Equatable {
    public let tables: [TableMember]?
    public let nextToken: String?
}

extension ListTablesOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case tables = "Tables"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let tablesContainer = try containerValues.decodeIfPresent([TableMember?].self, forKey: .tables)
        var tablesDecoded0:[TableMember]? = nil
        if let tablesContainer = tablesContainer {
            tablesDecoded0 = [TableMember]()
            for structure0 in tablesContainer {
                if let structure0 = structure0 {
                    tablesDecoded0?.append(structure0)
                }
            }
        }
        tables = tablesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
