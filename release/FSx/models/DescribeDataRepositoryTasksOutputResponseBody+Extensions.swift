// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeDataRepositoryTasksOutputResponseBody: Equatable {
    public let dataRepositoryTasks: [DataRepositoryTask]?
    public let nextToken: String?
}

extension DescribeDataRepositoryTasksOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case dataRepositoryTasks = "DataRepositoryTasks"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dataRepositoryTasksContainer = try containerValues.decodeIfPresent([DataRepositoryTask?].self, forKey: .dataRepositoryTasks)
        var dataRepositoryTasksDecoded0:[DataRepositoryTask]? = nil
        if let dataRepositoryTasksContainer = dataRepositoryTasksContainer {
            dataRepositoryTasksDecoded0 = [DataRepositoryTask]()
            for structure0 in dataRepositoryTasksContainer {
                if let structure0 = structure0 {
                    dataRepositoryTasksDecoded0?.append(structure0)
                }
            }
        }
        dataRepositoryTasks = dataRepositoryTasksDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
