// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSentimentDetectionJobsOutputResponseBody: Equatable {
    public let sentimentDetectionJobPropertiesList: [SentimentDetectionJobProperties]?
    public let nextToken: String?
}

extension ListSentimentDetectionJobsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case sentimentDetectionJobPropertiesList = "SentimentDetectionJobPropertiesList"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sentimentDetectionJobPropertiesListContainer = try containerValues.decodeIfPresent([SentimentDetectionJobProperties?].self, forKey: .sentimentDetectionJobPropertiesList)
        var sentimentDetectionJobPropertiesListDecoded0:[SentimentDetectionJobProperties]? = nil
        if let sentimentDetectionJobPropertiesListContainer = sentimentDetectionJobPropertiesListContainer {
            sentimentDetectionJobPropertiesListDecoded0 = [SentimentDetectionJobProperties]()
            for structure0 in sentimentDetectionJobPropertiesListContainer {
                if let structure0 = structure0 {
                    sentimentDetectionJobPropertiesListDecoded0?.append(structure0)
                }
            }
        }
        sentimentDetectionJobPropertiesList = sentimentDetectionJobPropertiesListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
