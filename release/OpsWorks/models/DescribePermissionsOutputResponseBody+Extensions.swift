// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribePermissionsOutputResponseBody: Equatable {
    public let permissions: [Permission]?
}

extension DescribePermissionsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case permissions = "Permissions"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let permissionsContainer = try containerValues.decodeIfPresent([Permission?].self, forKey: .permissions)
        var permissionsDecoded0:[Permission]? = nil
        if let permissionsContainer = permissionsContainer {
            permissionsDecoded0 = [Permission]()
            for structure0 in permissionsContainer {
                if let structure0 = structure0 {
                    permissionsDecoded0?.append(structure0)
                }
            }
        }
        permissions = permissionsDecoded0
    }
}
