// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct RegisterInstanceInput: Equatable {
    /// <p>The instance's hostname.</p>
    public let hostname: String?
    /// <p>An InstanceIdentity object that contains the instance's identity.</p>
    public let instanceIdentity: InstanceIdentity?
    /// <p>The instance's private IP address.</p>
    public let privateIp: String?
    /// <p>The instance's public IP address.</p>
    public let publicIp: String?
    /// <p>The instances public RSA key. This key is used to encrypt communication between the instance and the service.</p>
    public let rsaPublicKey: String?
    /// <p>The instances public RSA key fingerprint.</p>
    public let rsaPublicKeyFingerprint: String?
    /// <p>The ID of the stack that the instance is to be registered with.</p>
    public let stackId: String?

    public init (
        hostname: String? = nil,
        instanceIdentity: InstanceIdentity? = nil,
        privateIp: String? = nil,
        publicIp: String? = nil,
        rsaPublicKey: String? = nil,
        rsaPublicKeyFingerprint: String? = nil,
        stackId: String? = nil
    )
    {
        self.hostname = hostname
        self.instanceIdentity = instanceIdentity
        self.privateIp = privateIp
        self.publicIp = publicIp
        self.rsaPublicKey = rsaPublicKey
        self.rsaPublicKeyFingerprint = rsaPublicKeyFingerprint
        self.stackId = stackId
    }
}

extension RegisterInstanceInput: CustomDebugStringConvertible {
    public var debugDescription: String {
        "RegisterInstanceInput(hostname: \(String(describing: hostname)), instanceIdentity: \(String(describing: instanceIdentity)), privateIp: \(String(describing: privateIp)), publicIp: \(String(describing: publicIp)), rsaPublicKey: \(String(describing: rsaPublicKey)), rsaPublicKeyFingerprint: \(String(describing: rsaPublicKeyFingerprint)), stackId: \(String(describing: stackId)))"}
}
