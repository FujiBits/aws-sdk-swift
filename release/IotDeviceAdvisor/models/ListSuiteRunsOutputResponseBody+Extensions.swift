// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSuiteRunsOutputResponseBody: Equatable {
    public let suiteRunsList: [SuiteRunInformation]?
    public let nextToken: String?
}

extension ListSuiteRunsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case suiteRunsList
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let suiteRunsListContainer = try containerValues.decodeIfPresent([SuiteRunInformation?].self, forKey: .suiteRunsList)
        var suiteRunsListDecoded0:[SuiteRunInformation]? = nil
        if let suiteRunsListContainer = suiteRunsListContainer {
            suiteRunsListDecoded0 = [SuiteRunInformation]()
            for structure0 in suiteRunsListContainer {
                if let structure0 = structure0 {
                    suiteRunsListDecoded0?.append(structure0)
                }
            }
        }
        suiteRunsList = suiteRunsListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
