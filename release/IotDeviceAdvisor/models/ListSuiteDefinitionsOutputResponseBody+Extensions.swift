// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSuiteDefinitionsOutputResponseBody: Equatable {
    public let suiteDefinitionInformationList: [SuiteDefinitionInformation]?
    public let nextToken: String?
}

extension ListSuiteDefinitionsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case suiteDefinitionInformationList
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let suiteDefinitionInformationListContainer = try containerValues.decodeIfPresent([SuiteDefinitionInformation?].self, forKey: .suiteDefinitionInformationList)
        var suiteDefinitionInformationListDecoded0:[SuiteDefinitionInformation]? = nil
        if let suiteDefinitionInformationListContainer = suiteDefinitionInformationListContainer {
            suiteDefinitionInformationListDecoded0 = [SuiteDefinitionInformation]()
            for structure0 in suiteDefinitionInformationListContainer {
                if let structure0 = structure0 {
                    suiteDefinitionInformationListDecoded0?.append(structure0)
                }
            }
        }
        suiteDefinitionInformationList = suiteDefinitionInformationListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
