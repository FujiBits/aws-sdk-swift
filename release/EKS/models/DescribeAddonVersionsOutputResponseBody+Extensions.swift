// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeAddonVersionsOutputResponseBody: Equatable {
    public let addons: [AddonInfo]?
    public let nextToken: String?
}

extension DescribeAddonVersionsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case addons
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let addonsContainer = try containerValues.decodeIfPresent([AddonInfo?].self, forKey: .addons)
        var addonsDecoded0:[AddonInfo]? = nil
        if let addonsContainer = addonsContainer {
            addonsDecoded0 = [AddonInfo]()
            for structure0 in addonsContainer {
                if let structure0 = structure0 {
                    addonsDecoded0?.append(structure0)
                }
            }
        }
        addons = addonsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
