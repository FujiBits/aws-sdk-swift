// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

#if swift(>=5.5) && canImport(_Concurrency)
@available(macOS 12.0, iOS 15.0, tvOS 15.0, watchOS 8.0, macCatalyst 15.0, *)
public extension ResourceGroupsClient {
    /// Creates a resource group with the specified name and description. You can optionally include a resource query, or a service configuration. For more information about constructing a resource query, see [Create a tag-based group in Resource Groups](https://docs.aws.amazon.com/ARG/latest/userguide/gettingstarted-query.html#gettingstarted-query-cli-tag). For more information about service configurations, see [Service configurations for resource groups](https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html). Minimum permissions To run this command, you must have the following permissions:
    ///
    /// * resource-groups:CreateGroup
    func createGroup(input: CreateGroupInput) async throws -> CreateGroupOutputResponse
    {
        typealias createGroupContinuation = CheckedContinuation<CreateGroupOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: createGroupContinuation) in
            createGroup(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Deletes the specified resource group. Deleting a resource group does not delete any resources that are members of the group; it only deletes the group structure. Minimum permissions To run this command, you must have the following permissions:
    ///
    /// * resource-groups:DeleteGroup
    func deleteGroup(input: DeleteGroupInput) async throws -> DeleteGroupOutputResponse
    {
        typealias deleteGroupContinuation = CheckedContinuation<DeleteGroupOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: deleteGroupContinuation) in
            deleteGroup(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Returns information about a specified resource group. Minimum permissions To run this command, you must have the following permissions:
    ///
    /// * resource-groups:GetGroup
    func getGroup(input: GetGroupInput) async throws -> GetGroupOutputResponse
    {
        typealias getGroupContinuation = CheckedContinuation<GetGroupOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: getGroupContinuation) in
            getGroup(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Returns the service configuration associated with the specified resource group. For details about the service configuration syntax, see [Service configurations for resource groups](https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html). Minimum permissions To run this command, you must have the following permissions:
    ///
    /// * resource-groups:GetGroupConfiguration
    func getGroupConfiguration(input: GetGroupConfigurationInput) async throws -> GetGroupConfigurationOutputResponse
    {
        typealias getGroupConfigurationContinuation = CheckedContinuation<GetGroupConfigurationOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: getGroupConfigurationContinuation) in
            getGroupConfiguration(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Retrieves the resource query associated with the specified resource group. For more information about resource queries, see [Create a tag-based group in Resource Groups](https://docs.aws.amazon.com/ARG/latest/userguide/gettingstarted-query.html#gettingstarted-query-cli-tag). Minimum permissions To run this command, you must have the following permissions:
    ///
    /// * resource-groups:GetGroupQuery
    func getGroupQuery(input: GetGroupQueryInput) async throws -> GetGroupQueryOutputResponse
    {
        typealias getGroupQueryContinuation = CheckedContinuation<GetGroupQueryOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: getGroupQueryContinuation) in
            getGroupQuery(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Returns a list of tags that are associated with a resource group, specified by an ARN. Minimum permissions To run this command, you must have the following permissions:
    ///
    /// * resource-groups:GetTags
    func getTags(input: GetTagsInput) async throws -> GetTagsOutputResponse
    {
        typealias getTagsContinuation = CheckedContinuation<GetTagsOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: getTagsContinuation) in
            getTags(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Adds the specified resources to the specified group. Minimum permissions To run this command, you must have the following permissions:
    ///
    /// * resource-groups:GroupResources
    func groupResources(input: GroupResourcesInput) async throws -> GroupResourcesOutputResponse
    {
        typealias groupResourcesContinuation = CheckedContinuation<GroupResourcesOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: groupResourcesContinuation) in
            groupResources(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Returns a list of ARNs of the resources that are members of a specified resource group. Minimum permissions To run this command, you must have the following permissions:
    ///
    /// * resource-groups:ListGroupResources
    ///
    /// * cloudformation:DescribeStacks
    ///
    /// * cloudformation:ListStackResources
    ///
    /// * tag:GetResources
    func listGroupResources(input: ListGroupResourcesInput) async throws -> ListGroupResourcesOutputResponse
    {
        typealias listGroupResourcesContinuation = CheckedContinuation<ListGroupResourcesOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: listGroupResourcesContinuation) in
            listGroupResources(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Returns a list of existing resource groups in your account. Minimum permissions To run this command, you must have the following permissions:
    ///
    /// * resource-groups:ListGroups
    func listGroups(input: ListGroupsInput) async throws -> ListGroupsOutputResponse
    {
        typealias listGroupsContinuation = CheckedContinuation<ListGroupsOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: listGroupsContinuation) in
            listGroups(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Attaches a service configuration to the specified group. This occurs asynchronously, and can take time to complete. You can use [GetGroupConfiguration] to check the status of the update. Minimum permissions To run this command, you must have the following permissions:
    ///
    /// * resource-groups:PutGroupConfiguration
    func putGroupConfiguration(input: PutGroupConfigurationInput) async throws -> PutGroupConfigurationOutputResponse
    {
        typealias putGroupConfigurationContinuation = CheckedContinuation<PutGroupConfigurationOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: putGroupConfigurationContinuation) in
            putGroupConfiguration(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Returns a list of AWS resource identifiers that matches the specified query. The query uses the same format as a resource query in a CreateGroup or UpdateGroupQuery operation. Minimum permissions To run this command, you must have the following permissions:
    ///
    /// * resource-groups:SearchResources
    ///
    /// * cloudformation:DescribeStacks
    ///
    /// * cloudformation:ListStackResources
    ///
    /// * tag:GetResources
    func searchResources(input: SearchResourcesInput) async throws -> SearchResourcesOutputResponse
    {
        typealias searchResourcesContinuation = CheckedContinuation<SearchResourcesOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: searchResourcesContinuation) in
            searchResources(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Adds tags to a resource group with the specified ARN. Existing tags on a resource group are not changed if they are not specified in the request parameters. Do not store personally identifiable information (PII) or other confidential or sensitive information in tags. We use tags to provide you with billing and administration services. Tags are not intended to be used for private or sensitive data. Minimum permissions To run this command, you must have the following permissions:
    ///
    /// * resource-groups:Tag
    func tag(input: TagInput) async throws -> TagOutputResponse
    {
        typealias tagContinuation = CheckedContinuation<TagOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: tagContinuation) in
            tag(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Removes the specified resources from the specified group. Minimum permissions To run this command, you must have the following permissions:
    ///
    /// * resource-groups:UngroupResources
    func ungroupResources(input: UngroupResourcesInput) async throws -> UngroupResourcesOutputResponse
    {
        typealias ungroupResourcesContinuation = CheckedContinuation<UngroupResourcesOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: ungroupResourcesContinuation) in
            ungroupResources(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Deletes tags from a specified resource group. Minimum permissions To run this command, you must have the following permissions:
    ///
    /// * resource-groups:Untag
    func untag(input: UntagInput) async throws -> UntagOutputResponse
    {
        typealias untagContinuation = CheckedContinuation<UntagOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: untagContinuation) in
            untag(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Updates the description for an existing group. You cannot update the name of a resource group. Minimum permissions To run this command, you must have the following permissions:
    ///
    /// * resource-groups:UpdateGroup
    func updateGroup(input: UpdateGroupInput) async throws -> UpdateGroupOutputResponse
    {
        typealias updateGroupContinuation = CheckedContinuation<UpdateGroupOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: updateGroupContinuation) in
            updateGroup(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Updates the resource query of a group. For more information about resource queries, see [Create a tag-based group in Resource Groups](https://docs.aws.amazon.com/ARG/latest/userguide/gettingstarted-query.html#gettingstarted-query-cli-tag). Minimum permissions To run this command, you must have the following permissions:
    ///
    /// * resource-groups:UpdateGroupQuery
    func updateGroupQuery(input: UpdateGroupQueryInput) async throws -> UpdateGroupQueryOutputResponse
    {
        typealias updateGroupQueryContinuation = CheckedContinuation<UpdateGroupQueryOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: updateGroupQueryContinuation) in
            updateGroupQuery(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

}
#endif
