// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDetectorsOutputResponseBody: Equatable {
    public let detectorIds: [String]?
    public let nextToken: String?
}

extension ListDetectorsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case detectorIds = "detectorIds"
        case nextToken = "nextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let detectorIdsContainer = try containerValues.decodeIfPresent([String?].self, forKey: .detectorIds)
        var detectorIdsDecoded0:[String]? = nil
        if let detectorIdsContainer = detectorIdsContainer {
            detectorIdsDecoded0 = [String]()
            for string0 in detectorIdsContainer {
                if let string0 = string0 {
                    detectorIdsDecoded0?.append(string0)
                }
            }
        }
        detectorIds = detectorIdsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
