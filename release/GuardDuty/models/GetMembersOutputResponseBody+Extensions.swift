// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetMembersOutputResponseBody: Equatable {
    public let members: [Member]?
    public let unprocessedAccounts: [UnprocessedAccount]?
}

extension GetMembersOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case members = "members"
        case unprocessedAccounts = "unprocessedAccounts"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let membersContainer = try containerValues.decodeIfPresent([Member?].self, forKey: .members)
        var membersDecoded0:[Member]? = nil
        if let membersContainer = membersContainer {
            membersDecoded0 = [Member]()
            for structure0 in membersContainer {
                if let structure0 = structure0 {
                    membersDecoded0?.append(structure0)
                }
            }
        }
        members = membersDecoded0
        let unprocessedAccountsContainer = try containerValues.decodeIfPresent([UnprocessedAccount?].self, forKey: .unprocessedAccounts)
        var unprocessedAccountsDecoded0:[UnprocessedAccount]? = nil
        if let unprocessedAccountsContainer = unprocessedAccountsContainer {
            unprocessedAccountsDecoded0 = [UnprocessedAccount]()
            for structure0 in unprocessedAccountsContainer {
                if let structure0 = structure0 {
                    unprocessedAccountsDecoded0?.append(structure0)
                }
            }
        }
        unprocessedAccounts = unprocessedAccountsDecoded0
    }
}
