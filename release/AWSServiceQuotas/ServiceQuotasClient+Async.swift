// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

#if swift(>=5.5) && canImport(_Concurrency)
@available(macOS 12.0, iOS 15.0, tvOS 15.0, watchOS 8.0, macCatalyst 15.0, *)
public extension ServiceQuotasClient {
    /// Associates your quota request template with your organization. When a new account is
    ///       created in your organization, the quota increase requests in the template are automatically
    ///       applied to the account. You can add a quota increase request for any adjustable quota to your
    ///       template.
    func associateServiceQuotaTemplate(input: AssociateServiceQuotaTemplateInput) async throws -> AssociateServiceQuotaTemplateOutputResponse
    {
        typealias associateServiceQuotaTemplateContinuation = CheckedContinuation<AssociateServiceQuotaTemplateOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: associateServiceQuotaTemplateContinuation) in
            associateServiceQuotaTemplate(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Deletes the quota increase request for the specified quota from your quota request
    ///       template.
    func deleteServiceQuotaIncreaseRequestFromTemplate(input: DeleteServiceQuotaIncreaseRequestFromTemplateInput) async throws -> DeleteServiceQuotaIncreaseRequestFromTemplateOutputResponse
    {
        typealias deleteServiceQuotaIncreaseRequestFromTemplateContinuation = CheckedContinuation<DeleteServiceQuotaIncreaseRequestFromTemplateOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: deleteServiceQuotaIncreaseRequestFromTemplateContinuation) in
            deleteServiceQuotaIncreaseRequestFromTemplate(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Disables your quota request template. After a template is disabled, the quota increase
    ///       requests in the template are not applied to new accounts in your organization. Disabling a
    ///       quota request template does not apply its quota increase requests.
    func disassociateServiceQuotaTemplate(input: DisassociateServiceQuotaTemplateInput) async throws -> DisassociateServiceQuotaTemplateOutputResponse
    {
        typealias disassociateServiceQuotaTemplateContinuation = CheckedContinuation<DisassociateServiceQuotaTemplateOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: disassociateServiceQuotaTemplateContinuation) in
            disassociateServiceQuotaTemplate(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Retrieves the default value for the specified quota. The default value does not reflect
    ///       any quota increases.
    func getAWSDefaultServiceQuota(input: GetAWSDefaultServiceQuotaInput) async throws -> GetAWSDefaultServiceQuotaOutputResponse
    {
        typealias getAWSDefaultServiceQuotaContinuation = CheckedContinuation<GetAWSDefaultServiceQuotaOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: getAWSDefaultServiceQuotaContinuation) in
            getAWSDefaultServiceQuota(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Retrieves the status of the association for the quota request template.
    func getAssociationForServiceQuotaTemplate(input: GetAssociationForServiceQuotaTemplateInput) async throws -> GetAssociationForServiceQuotaTemplateOutputResponse
    {
        typealias getAssociationForServiceQuotaTemplateContinuation = CheckedContinuation<GetAssociationForServiceQuotaTemplateOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: getAssociationForServiceQuotaTemplateContinuation) in
            getAssociationForServiceQuotaTemplate(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Retrieves information about the specified quota increase request.
    func getRequestedServiceQuotaChange(input: GetRequestedServiceQuotaChangeInput) async throws -> GetRequestedServiceQuotaChangeOutputResponse
    {
        typealias getRequestedServiceQuotaChangeContinuation = CheckedContinuation<GetRequestedServiceQuotaChangeOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: getRequestedServiceQuotaChangeContinuation) in
            getRequestedServiceQuotaChange(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Retrieves the applied quota value for the specified quota. For some quotas, only the
    ///       default values are available. If the applied quota value is not available for a quota, the
    ///       quota is not retrieved.
    func getServiceQuota(input: GetServiceQuotaInput) async throws -> GetServiceQuotaOutputResponse
    {
        typealias getServiceQuotaContinuation = CheckedContinuation<GetServiceQuotaOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: getServiceQuotaContinuation) in
            getServiceQuota(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Retrieves information about the specified quota increase request in your quota request
    ///       template.
    func getServiceQuotaIncreaseRequestFromTemplate(input: GetServiceQuotaIncreaseRequestFromTemplateInput) async throws -> GetServiceQuotaIncreaseRequestFromTemplateOutputResponse
    {
        typealias getServiceQuotaIncreaseRequestFromTemplateContinuation = CheckedContinuation<GetServiceQuotaIncreaseRequestFromTemplateOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: getServiceQuotaIncreaseRequestFromTemplateContinuation) in
            getServiceQuotaIncreaseRequestFromTemplate(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Lists the default values for the quotas for the specified AWS service. A default value
    ///       does not reflect any quota increases.
    func listAWSDefaultServiceQuotas(input: ListAWSDefaultServiceQuotasInput) async throws -> ListAWSDefaultServiceQuotasOutputResponse
    {
        typealias listAWSDefaultServiceQuotasContinuation = CheckedContinuation<ListAWSDefaultServiceQuotasOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: listAWSDefaultServiceQuotasContinuation) in
            listAWSDefaultServiceQuotas(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Retrieves the quota increase requests for the specified service.
    func listRequestedServiceQuotaChangeHistory(input: ListRequestedServiceQuotaChangeHistoryInput) async throws -> ListRequestedServiceQuotaChangeHistoryOutputResponse
    {
        typealias listRequestedServiceQuotaChangeHistoryContinuation = CheckedContinuation<ListRequestedServiceQuotaChangeHistoryOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: listRequestedServiceQuotaChangeHistoryContinuation) in
            listRequestedServiceQuotaChangeHistory(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Retrieves the quota increase requests for the specified quota.
    func listRequestedServiceQuotaChangeHistoryByQuota(input: ListRequestedServiceQuotaChangeHistoryByQuotaInput) async throws -> ListRequestedServiceQuotaChangeHistoryByQuotaOutputResponse
    {
        typealias listRequestedServiceQuotaChangeHistoryByQuotaContinuation = CheckedContinuation<ListRequestedServiceQuotaChangeHistoryByQuotaOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: listRequestedServiceQuotaChangeHistoryByQuotaContinuation) in
            listRequestedServiceQuotaChangeHistoryByQuota(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Lists the quota increase requests in the specified quota request template.
    func listServiceQuotaIncreaseRequestsInTemplate(input: ListServiceQuotaIncreaseRequestsInTemplateInput) async throws -> ListServiceQuotaIncreaseRequestsInTemplateOutputResponse
    {
        typealias listServiceQuotaIncreaseRequestsInTemplateContinuation = CheckedContinuation<ListServiceQuotaIncreaseRequestsInTemplateOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: listServiceQuotaIncreaseRequestsInTemplateContinuation) in
            listServiceQuotaIncreaseRequestsInTemplate(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Lists the applied quota values for the specified AWS service. For some quotas, only the
    ///       default values are available. If the applied quota value is not available for a quota, the
    ///       quota is not retrieved.
    func listServiceQuotas(input: ListServiceQuotasInput) async throws -> ListServiceQuotasOutputResponse
    {
        typealias listServiceQuotasContinuation = CheckedContinuation<ListServiceQuotasOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: listServiceQuotasContinuation) in
            listServiceQuotas(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Lists the names and codes for the services integrated with Service Quotas.
    func listServices(input: ListServicesInput) async throws -> ListServicesOutputResponse
    {
        typealias listServicesContinuation = CheckedContinuation<ListServicesOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: listServicesContinuation) in
            listServices(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Returns a list of the tags assigned to the specified applied quota.
    func listTagsForResource(input: ListTagsForResourceInput) async throws -> ListTagsForResourceOutputResponse
    {
        typealias listTagsForResourceContinuation = CheckedContinuation<ListTagsForResourceOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: listTagsForResourceContinuation) in
            listTagsForResource(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Adds a quota increase request to your quota request template.
    func putServiceQuotaIncreaseRequestIntoTemplate(input: PutServiceQuotaIncreaseRequestIntoTemplateInput) async throws -> PutServiceQuotaIncreaseRequestIntoTemplateOutputResponse
    {
        typealias putServiceQuotaIncreaseRequestIntoTemplateContinuation = CheckedContinuation<PutServiceQuotaIncreaseRequestIntoTemplateOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: putServiceQuotaIncreaseRequestIntoTemplateContinuation) in
            putServiceQuotaIncreaseRequestIntoTemplate(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Submits a quota increase request for the specified quota.
    func requestServiceQuotaIncrease(input: RequestServiceQuotaIncreaseInput) async throws -> RequestServiceQuotaIncreaseOutputResponse
    {
        typealias requestServiceQuotaIncreaseContinuation = CheckedContinuation<RequestServiceQuotaIncreaseOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: requestServiceQuotaIncreaseContinuation) in
            requestServiceQuotaIncrease(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Adds tags to the specified applied quota. You can include one or more tags to add to the
    ///       quota.
    func tagResource(input: TagResourceInput) async throws -> TagResourceOutputResponse
    {
        typealias tagResourceContinuation = CheckedContinuation<TagResourceOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: tagResourceContinuation) in
            tagResource(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Removes tags from the specified applied quota. You can specify one or more tags to
    ///       remove.
    func untagResource(input: UntagResourceInput) async throws -> UntagResourceOutputResponse
    {
        typealias untagResourceContinuation = CheckedContinuation<UntagResourceOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: untagResourceContinuation) in
            untagResource(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

}
#endif
