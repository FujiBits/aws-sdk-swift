// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateBudgetActionInput: Equatable {
    /// <p>The account ID of the user. It should be a 12-digit number.</p>
    public let accountId: String?
    /// <p>
    ///          A system-generated universally unique identifier (UUID) for the action.
    ///       </p>
    public let actionId: String?
    /// <p>
    /// 			The trigger threshold of the action.
    /// 		</p>
    public let actionThreshold: ActionThreshold?
    /// <p>
    ///          This specifies if the action needs manual or automatic approval.
    ///       </p>
    public let approvalModel: ApprovalModel?
    /// <p> A string that represents the budget name. The ":" and "\" characters aren't allowed.</p>
    public let budgetName: String?
    /// <p>
    /// 			Specifies all of the type-specific parameters.
    /// 		</p>
    public let definition: Definition?
    /// <p>
    ///          The role passed for action execution and reversion. Roles and actions must be in the same account.
    ///       </p>
    public let executionRoleArn: String?
    /// <p> The type of a notification. It must be ACTUAL or FORECASTED.</p>
    public let notificationType: NotificationType?
    /// <p> A list of subscribers.</p>
    public let subscribers: [Subscriber]?

    public init (
        accountId: String? = nil,
        actionId: String? = nil,
        actionThreshold: ActionThreshold? = nil,
        approvalModel: ApprovalModel? = nil,
        budgetName: String? = nil,
        definition: Definition? = nil,
        executionRoleArn: String? = nil,
        notificationType: NotificationType? = nil,
        subscribers: [Subscriber]? = nil
    )
    {
        self.accountId = accountId
        self.actionId = actionId
        self.actionThreshold = actionThreshold
        self.approvalModel = approvalModel
        self.budgetName = budgetName
        self.definition = definition
        self.executionRoleArn = executionRoleArn
        self.notificationType = notificationType
        self.subscribers = subscribers
    }
}

extension UpdateBudgetActionInput: CustomDebugStringConvertible {
    public var debugDescription: String {
        "UpdateBudgetActionInput(accountId: \(String(describing: accountId)), actionId: \(String(describing: actionId)), actionThreshold: \(String(describing: actionThreshold)), approvalModel: \(String(describing: approvalModel)), budgetName: \(String(describing: budgetName)), definition: \(String(describing: definition)), executionRoleArn: \(String(describing: executionRoleArn)), notificationType: \(String(describing: notificationType)), subscribers: \(String(describing: subscribers)))"}
}
