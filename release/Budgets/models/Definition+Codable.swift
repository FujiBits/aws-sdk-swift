// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Definition: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case iamActionDefinition = "IamActionDefinition"
        case scpActionDefinition = "ScpActionDefinition"
        case ssmActionDefinition = "SsmActionDefinition"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let iamActionDefinition = iamActionDefinition {
            try encodeContainer.encode(iamActionDefinition, forKey: .iamActionDefinition)
        }
        if let scpActionDefinition = scpActionDefinition {
            try encodeContainer.encode(scpActionDefinition, forKey: .scpActionDefinition)
        }
        if let ssmActionDefinition = ssmActionDefinition {
            try encodeContainer.encode(ssmActionDefinition, forKey: .ssmActionDefinition)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let iamActionDefinitionDecoded = try containerValues.decodeIfPresent(IamActionDefinition.self, forKey: .iamActionDefinition)
        iamActionDefinition = iamActionDefinitionDecoded
        let scpActionDefinitionDecoded = try containerValues.decodeIfPresent(ScpActionDefinition.self, forKey: .scpActionDefinition)
        scpActionDefinition = scpActionDefinitionDecoded
        let ssmActionDefinitionDecoded = try containerValues.decodeIfPresent(SsmActionDefinition.self, forKey: .ssmActionDefinition)
        ssmActionDefinition = ssmActionDefinitionDecoded
    }
}
