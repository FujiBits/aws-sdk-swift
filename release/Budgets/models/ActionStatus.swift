// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum ActionStatus {
    case executionFailure
    case executionInProgress
    case executionSuccess
    case pending
    case resetFailure
    case resetInProgress
    case reverseFailure
    case reverseInProgress
    case reverseSuccess
    case standby
    case sdkUnknown(String)
}

extension ActionStatus : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [ActionStatus] {
        return [
            .executionFailure,
            .executionInProgress,
            .executionSuccess,
            .pending,
            .resetFailure,
            .resetInProgress,
            .reverseFailure,
            .reverseInProgress,
            .reverseSuccess,
            .standby,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .executionFailure: return "EXECUTION_FAILURE"
        case .executionInProgress: return "EXECUTION_IN_PROGRESS"
        case .executionSuccess: return "EXECUTION_SUCCESS"
        case .pending: return "PENDING"
        case .resetFailure: return "RESET_FAILURE"
        case .resetInProgress: return "RESET_IN_PROGRESS"
        case .reverseFailure: return "REVERSE_FAILURE"
        case .reverseInProgress: return "REVERSE_IN_PROGRESS"
        case .reverseSuccess: return "REVERSE_SUCCESS"
        case .standby: return "STANDBY"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = ActionStatus(rawValue: rawValue) ?? ActionStatus.sdkUnknown(rawValue)
    }
}
