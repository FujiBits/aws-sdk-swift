// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateSubscriberInputBody: Equatable {
    public let accountId: String?
    public let budgetName: String?
    public let notification: Notification?
    public let subscriber: Subscriber?
}

extension CreateSubscriberInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case accountId = "AccountId"
        case budgetName = "BudgetName"
        case notification = "Notification"
        case subscriber = "Subscriber"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let accountIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .accountId)
        accountId = accountIdDecoded
        let budgetNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .budgetName)
        budgetName = budgetNameDecoded
        let notificationDecoded = try containerValues.decodeIfPresent(Notification.self, forKey: .notification)
        notification = notificationDecoded
        let subscriberDecoded = try containerValues.decodeIfPresent(Subscriber.self, forKey: .subscriber)
        subscriber = subscriberDecoded
    }
}
