// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeBudgetActionHistoriesOutputResponseBody: Equatable {
    public let actionHistories: [ActionHistory]?
    public let nextToken: String?
}

extension DescribeBudgetActionHistoriesOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case actionHistories = "ActionHistories"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let actionHistoriesContainer = try containerValues.decodeIfPresent([ActionHistory?].self, forKey: .actionHistories)
        var actionHistoriesDecoded0:[ActionHistory]? = nil
        if let actionHistoriesContainer = actionHistoriesContainer {
            actionHistoriesDecoded0 = [ActionHistory]()
            for structure0 in actionHistoriesContainer {
                if let structure0 = structure0 {
                    actionHistoriesDecoded0?.append(structure0)
                }
            }
        }
        actionHistories = actionHistoriesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
