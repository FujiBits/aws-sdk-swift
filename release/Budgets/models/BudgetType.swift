// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p> The type of a budget. It must be one of the following types: </p>
/// 		       <p>
///             <code>COST</code>, <code>USAGE</code>, <code>RI_UTILIZATION</code>, <code>RI_COVERAGE</code>, <code>SAVINGS_PLANS_UTILIZATION</code>, or <code>SAVINGS_PLANS_COVERAGE</code>.</p>
public enum BudgetType {
    case cost
    case ricoverage
    case riutilization
    case spcoverage
    case sputilization
    case usage
    case sdkUnknown(String)
}

extension BudgetType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [BudgetType] {
        return [
            .cost,
            .ricoverage,
            .riutilization,
            .spcoverage,
            .sputilization,
            .usage,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .cost: return "COST"
        case .ricoverage: return "RI_COVERAGE"
        case .riutilization: return "RI_UTILIZATION"
        case .spcoverage: return "SAVINGS_PLANS_COVERAGE"
        case .sputilization: return "SAVINGS_PLANS_UTILIZATION"
        case .usage: return "USAGE"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = BudgetType(rawValue: rawValue) ?? BudgetType.sdkUnknown(rawValue)
    }
}
