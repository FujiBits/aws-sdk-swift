// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeMountTargetsOutputResponseBody: Equatable {
    public let marker: String?
    public let mountTargets: [MountTargetDescription]?
    public let nextMarker: String?
}

extension DescribeMountTargetsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case marker = "Marker"
        case mountTargets = "MountTargets"
        case nextMarker = "NextMarker"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let markerDecoded = try containerValues.decodeIfPresent(String.self, forKey: .marker)
        marker = markerDecoded
        let mountTargetsContainer = try containerValues.decodeIfPresent([MountTargetDescription?].self, forKey: .mountTargets)
        var mountTargetsDecoded0:[MountTargetDescription]? = nil
        if let mountTargetsContainer = mountTargetsContainer {
            mountTargetsDecoded0 = [MountTargetDescription]()
            for structure0 in mountTargetsContainer {
                if let structure0 = structure0 {
                    mountTargetsDecoded0?.append(structure0)
                }
            }
        }
        mountTargets = mountTargetsDecoded0
        let nextMarkerDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextMarker)
        nextMarker = nextMarkerDecoded
    }
}
