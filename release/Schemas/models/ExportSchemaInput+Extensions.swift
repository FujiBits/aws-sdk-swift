// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct ExportSchemaInputHeadersMiddleware: Middleware {
    public let id: String = "ExportSchemaInputHeadersMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<ExportSchemaInput>,
                  next: H) -> Swift.Result<OperationOutput<ExportSchemaOutputResponse>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<ExportSchemaInput>
    public typealias MOutput = OperationOutput<ExportSchemaOutputResponse>
    public typealias Context = ClientRuntime.HttpContext
    public typealias MError = SdkError<ExportSchemaOutputError>
}

public struct ExportSchemaInputQueryItemMiddleware: Middleware {
    public let id: String = "ExportSchemaInputQueryItemMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<ExportSchemaInput>,
                  next: H) -> Swift.Result<OperationOutput<ExportSchemaOutputResponse>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        if let type = input.operationInput.type {
            let typeQueryItem = URLQueryItem(name: "type".urlPercentEncoding(), value: String(type).urlPercentEncoding())
            input.builder.withQueryItem(typeQueryItem)
        }
        if let schemaVersion = input.operationInput.schemaVersion {
            let schemaVersionQueryItem = URLQueryItem(name: "schemaVersion".urlPercentEncoding(), value: String(schemaVersion).urlPercentEncoding())
            input.builder.withQueryItem(schemaVersionQueryItem)
        }
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<ExportSchemaInput>
    public typealias MOutput = OperationOutput<ExportSchemaOutputResponse>
    public typealias Context = ClientRuntime.HttpContext
    public typealias MError = SdkError<ExportSchemaOutputError>
}

extension ExportSchemaInput: Encodable, Reflection {

    public func encode(to encoder: Encoder) throws {
    }
}
