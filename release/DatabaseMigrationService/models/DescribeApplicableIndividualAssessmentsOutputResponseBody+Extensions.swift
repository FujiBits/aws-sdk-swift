// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeApplicableIndividualAssessmentsOutputResponseBody: Equatable {
    public let individualAssessmentNames: [String]?
    public let marker: String?
}

extension DescribeApplicableIndividualAssessmentsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case individualAssessmentNames = "IndividualAssessmentNames"
        case marker = "Marker"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let individualAssessmentNamesContainer = try containerValues.decodeIfPresent([String?].self, forKey: .individualAssessmentNames)
        var individualAssessmentNamesDecoded0:[String]? = nil
        if let individualAssessmentNamesContainer = individualAssessmentNamesContainer {
            individualAssessmentNamesDecoded0 = [String]()
            for string0 in individualAssessmentNamesContainer {
                if let string0 = string0 {
                    individualAssessmentNamesDecoded0?.append(string0)
                }
            }
        }
        individualAssessmentNames = individualAssessmentNamesDecoded0
        let markerDecoded = try containerValues.decodeIfPresent(String.self, forKey: .marker)
        marker = markerDecoded
    }
}
