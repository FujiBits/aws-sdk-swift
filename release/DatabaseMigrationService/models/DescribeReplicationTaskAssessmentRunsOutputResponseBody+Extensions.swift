// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeReplicationTaskAssessmentRunsOutputResponseBody: Equatable {
    public let marker: String?
    public let replicationTaskAssessmentRuns: [ReplicationTaskAssessmentRun]?
}

extension DescribeReplicationTaskAssessmentRunsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case marker = "Marker"
        case replicationTaskAssessmentRuns = "ReplicationTaskAssessmentRuns"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let markerDecoded = try containerValues.decodeIfPresent(String.self, forKey: .marker)
        marker = markerDecoded
        let replicationTaskAssessmentRunsContainer = try containerValues.decodeIfPresent([ReplicationTaskAssessmentRun?].self, forKey: .replicationTaskAssessmentRuns)
        var replicationTaskAssessmentRunsDecoded0:[ReplicationTaskAssessmentRun]? = nil
        if let replicationTaskAssessmentRunsContainer = replicationTaskAssessmentRunsContainer {
            replicationTaskAssessmentRunsDecoded0 = [ReplicationTaskAssessmentRun]()
            for structure0 in replicationTaskAssessmentRunsContainer {
                if let structure0 = structure0 {
                    replicationTaskAssessmentRunsDecoded0?.append(structure0)
                }
            }
        }
        replicationTaskAssessmentRuns = replicationTaskAssessmentRunsDecoded0
    }
}
