// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SearchProfilesOutputResponseBody: Equatable {
    public let profiles: [ProfileData]?
    public let nextToken: String?
    public let totalCount: Int?
}

extension SearchProfilesOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case profiles = "Profiles"
        case totalCount = "TotalCount"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let profilesContainer = try containerValues.decodeIfPresent([ProfileData?].self, forKey: .profiles)
        var profilesDecoded0:[ProfileData]? = nil
        if let profilesContainer = profilesContainer {
            profilesDecoded0 = [ProfileData]()
            for structure0 in profilesContainer {
                if let structure0 = structure0 {
                    profilesDecoded0?.append(structure0)
                }
            }
        }
        profiles = profilesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let totalCountDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .totalCount)
        totalCount = totalCountDecoded
    }
}
