// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ResolveRoomOutputResponseBody: Equatable {
    public let roomArn: String?
    public let roomName: String?
    public let roomSkillParameters: [RoomSkillParameter]?
}

extension ResolveRoomOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case roomArn = "RoomArn"
        case roomName = "RoomName"
        case roomSkillParameters = "RoomSkillParameters"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let roomArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .roomArn)
        roomArn = roomArnDecoded
        let roomNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .roomName)
        roomName = roomNameDecoded
        let roomSkillParametersContainer = try containerValues.decodeIfPresent([RoomSkillParameter?].self, forKey: .roomSkillParameters)
        var roomSkillParametersDecoded0:[RoomSkillParameter]? = nil
        if let roomSkillParametersContainer = roomSkillParametersContainer {
            roomSkillParametersDecoded0 = [RoomSkillParameter]()
            for structure0 in roomSkillParametersContainer {
                if let structure0 = structure0 {
                    roomSkillParametersDecoded0?.append(structure0)
                }
            }
        }
        roomSkillParameters = roomSkillParametersDecoded0
    }
}
