// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListGatewayGroupsOutputResponseBody: Equatable {
    public let gatewayGroups: [GatewayGroupSummary]?
    public let nextToken: String?
}

extension ListGatewayGroupsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case gatewayGroups = "GatewayGroups"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let gatewayGroupsContainer = try containerValues.decodeIfPresent([GatewayGroupSummary?].self, forKey: .gatewayGroups)
        var gatewayGroupsDecoded0:[GatewayGroupSummary]? = nil
        if let gatewayGroupsContainer = gatewayGroupsContainer {
            gatewayGroupsDecoded0 = [GatewayGroupSummary]()
            for structure0 in gatewayGroupsContainer {
                if let structure0 = structure0 {
                    gatewayGroupsDecoded0?.append(structure0)
                }
            }
        }
        gatewayGroups = gatewayGroupsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
