// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSkillsStoreSkillsByCategoryOutputResponseBody: Equatable {
    public let skillsStoreSkills: [SkillsStoreSkill]?
    public let nextToken: String?
}

extension ListSkillsStoreSkillsByCategoryOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case skillsStoreSkills = "SkillsStoreSkills"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let skillsStoreSkillsContainer = try containerValues.decodeIfPresent([SkillsStoreSkill?].self, forKey: .skillsStoreSkills)
        var skillsStoreSkillsDecoded0:[SkillsStoreSkill]? = nil
        if let skillsStoreSkillsContainer = skillsStoreSkillsContainer {
            skillsStoreSkillsDecoded0 = [SkillsStoreSkill]()
            for structure0 in skillsStoreSkillsContainer {
                if let structure0 = structure0 {
                    skillsStoreSkillsDecoded0?.append(structure0)
                }
            }
        }
        skillsStoreSkills = skillsStoreSkillsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
