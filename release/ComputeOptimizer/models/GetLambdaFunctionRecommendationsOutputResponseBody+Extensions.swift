// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetLambdaFunctionRecommendationsOutputResponseBody: Equatable {
    public let nextToken: String?
    public let lambdaFunctionRecommendations: [LambdaFunctionRecommendation]?
}

extension GetLambdaFunctionRecommendationsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case lambdaFunctionRecommendations
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let lambdaFunctionRecommendationsContainer = try containerValues.decodeIfPresent([LambdaFunctionRecommendation?].self, forKey: .lambdaFunctionRecommendations)
        var lambdaFunctionRecommendationsDecoded0:[LambdaFunctionRecommendation]? = nil
        if let lambdaFunctionRecommendationsContainer = lambdaFunctionRecommendationsContainer {
            lambdaFunctionRecommendationsDecoded0 = [LambdaFunctionRecommendation]()
            for structure0 in lambdaFunctionRecommendationsContainer {
                if let structure0 = structure0 {
                    lambdaFunctionRecommendationsDecoded0?.append(structure0)
                }
            }
        }
        lambdaFunctionRecommendations = lambdaFunctionRecommendationsDecoded0
    }
}
