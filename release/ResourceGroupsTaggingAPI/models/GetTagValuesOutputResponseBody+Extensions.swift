// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetTagValuesOutputResponseBody: Equatable {
    public let paginationToken: String?
    public let tagValues: [String]?
}

extension GetTagValuesOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case paginationToken = "PaginationToken"
        case tagValues = "TagValues"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let paginationTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .paginationToken)
        paginationToken = paginationTokenDecoded
        let tagValuesContainer = try containerValues.decodeIfPresent([String?].self, forKey: .tagValues)
        var tagValuesDecoded0:[String]? = nil
        if let tagValuesContainer = tagValuesContainer {
            tagValuesDecoded0 = [String]()
            for string0 in tagValuesContainer {
                if let string0 = string0 {
                    tagValuesDecoded0?.append(string0)
                }
            }
        }
        tagValues = tagValuesDecoded0
    }
}
