// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetResourcesOutputResponseBody: Equatable {
    public let paginationToken: String?
    public let resourceTagMappingList: [ResourceTagMapping]?
}

extension GetResourcesOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case paginationToken = "PaginationToken"
        case resourceTagMappingList = "ResourceTagMappingList"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let paginationTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .paginationToken)
        paginationToken = paginationTokenDecoded
        let resourceTagMappingListContainer = try containerValues.decodeIfPresent([ResourceTagMapping?].self, forKey: .resourceTagMappingList)
        var resourceTagMappingListDecoded0:[ResourceTagMapping]? = nil
        if let resourceTagMappingListContainer = resourceTagMappingListContainer {
            resourceTagMappingListDecoded0 = [ResourceTagMapping]()
            for structure0 in resourceTagMappingListContainer {
                if let structure0 = structure0 {
                    resourceTagMappingListDecoded0?.append(structure0)
                }
            }
        }
        resourceTagMappingList = resourceTagMappingListDecoded0
    }
}
