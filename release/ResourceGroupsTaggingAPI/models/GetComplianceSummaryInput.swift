// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct GetComplianceSummaryInput: Equatable {
    /// <p>Specifies a list of attributes to group the counts of noncompliant resources by. If
    ///             supplied, the counts are sorted by those attributes.</p>
    public let groupBy: [GroupByAttribute]?
    /// <p>Specifies the maximum number of results to be returned in each page. A
    ///     query can return fewer than this maximum, even if there are more results still to return. You
    ///     should always check the <code>PaginationToken</code> response value to see if there are more
    ///     results. You can specify a minimum of 1 and a maximum value of 100.</p>
    public let maxResults: Int?
    /// <p>Specifies a <code>PaginationToken</code> response value from a
    ///     previous request to indicate that you want the next page of results. Leave this parameter empty
    ///     in your initial request.</p>
    public let paginationToken: String?
    /// <p>Specifies a list of AWS Regions to limit the output by. If you use this parameter,
    ///             the count of returned noncompliant resources includes only resources in the specified
    ///             Regions.</p>
    public let regionFilters: [String]?
    /// <p>Specifies that you want the response to include information for only resources of the
    ///             specified types. The format of each resource type is
    ///             <code>service[:resourceType]</code>. For example, specifying a resource type of
    ///                 <code>ec2</code> returns all Amazon EC2 resources (which includes EC2 instances).
    ///             Specifying a resource type of <code>ec2:instance</code> returns only EC2 instances. </p>
    ///         <p>The string for each service name and resource type is the same as that embedded in a
    ///             resource's Amazon Resource Name (ARN). Consult the <i>AWS General
    ///                 Reference</i> for the following:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>For a list of service name strings, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#genref-aws-service-namespaces">AWS Service Namespaces</a>.</p>
    ///             </li>
    ///             <li>
    ///                 <p>For resource type strings, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arns-syntax">Example
    ///                         ARNs</a>.</p>
    ///             </li>
    ///             <li>
    ///                 <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names
    ///                         (ARNs) and AWS Service Namespaces</a>.</p>
    ///             </li>
    ///          </ul>
    ///         <p>You can specify multiple resource types by using a comma separated array. The array
    ///             can include up to 100 items. Note that the length constraint requirement applies to each
    ///             resource type filter. </p>
    public let resourceTypeFilters: [String]?
    /// <p>Specifies that you want the response to include information for only resources that
    ///             have tags with the specified tag keys. If you use this parameter, the count of returned
    ///             noncompliant resources includes only resources that have the specified tag keys.</p>
    public let tagKeyFilters: [String]?
    /// <p>Specifies target identifiers (usually, specific account IDs) to limit the output by.
    ///             If you use this parameter, the count of returned noncompliant resources includes only
    ///             resources with the specified target IDs.</p>
    public let targetIdFilters: [String]?

    public init (
        groupBy: [GroupByAttribute]? = nil,
        maxResults: Int? = nil,
        paginationToken: String? = nil,
        regionFilters: [String]? = nil,
        resourceTypeFilters: [String]? = nil,
        tagKeyFilters: [String]? = nil,
        targetIdFilters: [String]? = nil
    )
    {
        self.groupBy = groupBy
        self.maxResults = maxResults
        self.paginationToken = paginationToken
        self.regionFilters = regionFilters
        self.resourceTypeFilters = resourceTypeFilters
        self.tagKeyFilters = tagKeyFilters
        self.targetIdFilters = targetIdFilters
    }
}

extension GetComplianceSummaryInput: CustomDebugStringConvertible {
    public var debugDescription: String {
        "GetComplianceSummaryInput(groupBy: \(String(describing: groupBy)), maxResults: \(String(describing: maxResults)), paginationToken: \(String(describing: paginationToken)), regionFilters: \(String(describing: regionFilters)), resourceTypeFilters: \(String(describing: resourceTypeFilters)), tagKeyFilters: \(String(describing: tagKeyFilters)), targetIdFilters: \(String(describing: targetIdFilters)))"}
}
