// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetComplianceSummaryOutputResponseBody: Equatable {
    public let summaryList: [Summary]?
    public let paginationToken: String?
}

extension GetComplianceSummaryOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case paginationToken = "PaginationToken"
        case summaryList = "SummaryList"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let summaryListContainer = try containerValues.decodeIfPresent([Summary?].self, forKey: .summaryList)
        var summaryListDecoded0:[Summary]? = nil
        if let summaryListContainer = summaryListContainer {
            summaryListDecoded0 = [Summary]()
            for structure0 in summaryListContainer {
                if let structure0 = structure0 {
                    summaryListDecoded0?.append(structure0)
                }
            }
        }
        summaryList = summaryListDecoded0
        let paginationTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .paginationToken)
        paginationToken = paginationTokenDecoded
    }
}
