// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>The request was denied because performing this operation violates a constraint. </p>
///         <p>Some of the reasons in the following list might not apply to this specific
///             operation.</p>
///         <ul>
///             <li>
///                 <p>You must meet the prerequisites for using tag policies. For information, see
///                         <a href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_tag-policies-prereqs.html">Prerequisites and Permissions for Using Tag Policies</a> in the
///                         <i>AWS Organizations User Guide.</i>
///                </p>
///             </li>
///             <li>
///                 <p>You must enable the tag policies service principal
///                         (<code>tagpolicies.tag.amazonaws.com</code>) to integrate with AWS Organizations For
///                     information, see <a href="http://docs.aws.amazon.com/organizations/latest/APIReference/API_EnableAWSServiceAccess.html">EnableAWSServiceAccess</a>.</p>
///             </li>
///             <li>
///                 <p>You must have a tag policy attached to the organization root, an OU, or an
///                     account.</p>
///             </li>
///          </ul>
public struct ConstraintViolationException: ClientRuntime.ServiceError, Equatable {
    public var _headers: ClientRuntime.Headers?
    public var _statusCode: HttpStatusCode?
    public var _message: String?
    public var _requestID: String?
    public var _retryable: Bool = false
    public var _isThrottling: Bool = false
    public var _type: ErrorType = .client
    public var message: String?

    public init (
        message: String? = nil
    )
    {
        self.message = message
    }
}

extension ConstraintViolationException: CustomDebugStringConvertible {
    public var debugDescription: String {
        "ConstraintViolationException(message: \(String(describing: message)))"}
}
