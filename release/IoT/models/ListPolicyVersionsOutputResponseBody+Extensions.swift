// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPolicyVersionsOutputResponseBody: Equatable {
    public let policyVersions: [PolicyVersion]?
}

extension ListPolicyVersionsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case policyVersions
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let policyVersionsContainer = try containerValues.decodeIfPresent([PolicyVersion?].self, forKey: .policyVersions)
        var policyVersionsDecoded0:[PolicyVersion]? = nil
        if let policyVersionsContainer = policyVersionsContainer {
            policyVersionsDecoded0 = [PolicyVersion]()
            for structure0 in policyVersionsContainer {
                if let structure0 = structure0 {
                    policyVersionsDecoded0?.append(structure0)
                }
            }
        }
        policyVersions = policyVersionsDecoded0
    }
}
