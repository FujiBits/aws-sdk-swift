// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListOTAUpdatesOutputResponseBody: Equatable {
    public let otaUpdates: [OTAUpdateSummary]?
    public let nextToken: String?
}

extension ListOTAUpdatesOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case otaUpdates
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let otaUpdatesContainer = try containerValues.decodeIfPresent([OTAUpdateSummary?].self, forKey: .otaUpdates)
        var otaUpdatesDecoded0:[OTAUpdateSummary]? = nil
        if let otaUpdatesContainer = otaUpdatesContainer {
            otaUpdatesDecoded0 = [OTAUpdateSummary]()
            for structure0 in otaUpdatesContainer {
                if let structure0 = structure0 {
                    otaUpdatesDecoded0?.append(structure0)
                }
            }
        }
        otaUpdates = otaUpdatesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
