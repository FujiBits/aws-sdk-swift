// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct TestAuthorizationInput: Equatable {
    /// <p>A list of authorization info objects. Simulating authorization will create a response
    ///          for each <code>authInfo</code> object in the list.</p>
    public let authInfos: [AuthInfo]?
    /// <p>The MQTT client ID.</p>
    public let clientId: String?
    /// <p>The Cognito identity pool ID.</p>
    public let cognitoIdentityPoolId: String?
    /// <p>When testing custom authorization, the policies specified here are treated as if they
    ///          are attached to the principal being authorized.</p>
    public let policyNamesToAdd: [String]?
    /// <p>When testing custom authorization, the policies specified here are treated as if they
    ///          are not attached to the principal being authorized.</p>
    public let policyNamesToSkip: [String]?
    /// <p>The principal. Valid principals are CertificateArn (arn:aws:iot:<i>region</i>:<i>accountId</i>:cert/<i>certificateId</i>), thingGroupArn (arn:aws:iot:<i>region</i>:<i>accountId</i>:thinggroup/<i>groupName</i>) and CognitoId (<i>region</i>:<i>id</i>).</p>
    public let principal: String?

    public init (
        authInfos: [AuthInfo]? = nil,
        clientId: String? = nil,
        cognitoIdentityPoolId: String? = nil,
        policyNamesToAdd: [String]? = nil,
        policyNamesToSkip: [String]? = nil,
        principal: String? = nil
    )
    {
        self.authInfos = authInfos
        self.clientId = clientId
        self.cognitoIdentityPoolId = cognitoIdentityPoolId
        self.policyNamesToAdd = policyNamesToAdd
        self.policyNamesToSkip = policyNamesToSkip
        self.principal = principal
    }
}

extension TestAuthorizationInput: CustomDebugStringConvertible {
    public var debugDescription: String {
        "TestAuthorizationInput(authInfos: \(String(describing: authInfos)), clientId: \(String(describing: clientId)), cognitoIdentityPoolId: \(String(describing: cognitoIdentityPoolId)), policyNamesToAdd: \(String(describing: policyNamesToAdd)), policyNamesToSkip: \(String(describing: policyNamesToSkip)), principal: \(String(describing: principal)))"}
}
