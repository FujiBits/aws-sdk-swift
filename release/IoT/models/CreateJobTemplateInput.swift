// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateJobTemplateInput: Equatable {
    /// <p>The criteria that determine when and how a job abort takes place.</p>
    public let abortConfig: AbortConfig?
    /// <p>A description of the job document.</p>
    public let description: String?
    /// <p>The job document. Required if you don't specify a value for <code>documentSource</code>.</p>
    public let document: String?
    /// <p>An S3 link to the job document to use in the template. Required if you don't specify a value for <code>document</code>.</p>
    ///         <note>
    ///             <p>If the job document resides in an S3 bucket, you must use a placeholder link when specifying the document.</p>
    ///             <p>The placeholder link is of the following form:</p>
    ///             <p>
    ///                <code>${aws:iot:s3-presigned-url:https://s3.amazonaws.com/<i>bucket</i>/<i>key</i>}</code>
    ///             </p>
    ///             <p>where <i>bucket</i> is your bucket name and <i>key</i> is the object in the bucket to which you are linking.</p>
    ///         </note>
    public let documentSource: String?
    /// <p>The ARN of the job to use as the basis for the job template.</p>
    public let jobArn: String?
    /// <p>Allows you to create a staged rollout of a job.</p>
    public let jobExecutionsRolloutConfig: JobExecutionsRolloutConfig?
    /// <p>A unique identifier for the job template. We recommend using a UUID. Alpha-numeric
    ///         characters, "-", and "_" are valid for use here.</p>
    public let jobTemplateId: String?
    /// <p>Configuration for pre-signed S3 URLs.</p>
    public let presignedUrlConfig: PresignedUrlConfig?
    /// <p>Metadata that can be used to manage the job template.</p>
    public let tags: [Tag]?
    /// <p>Specifies the amount of time each device has to finish its execution of the job.  A timer
    ///            is started when the job execution status is set to <code>IN_PROGRESS</code>. If the job
    ///            execution status is not set to another terminal state before the timer expires, it will
    ///            be automatically set to <code>TIMED_OUT</code>.</p>
    public let timeoutConfig: TimeoutConfig?

    public init (
        abortConfig: AbortConfig? = nil,
        description: String? = nil,
        document: String? = nil,
        documentSource: String? = nil,
        jobArn: String? = nil,
        jobExecutionsRolloutConfig: JobExecutionsRolloutConfig? = nil,
        jobTemplateId: String? = nil,
        presignedUrlConfig: PresignedUrlConfig? = nil,
        tags: [Tag]? = nil,
        timeoutConfig: TimeoutConfig? = nil
    )
    {
        self.abortConfig = abortConfig
        self.description = description
        self.document = document
        self.documentSource = documentSource
        self.jobArn = jobArn
        self.jobExecutionsRolloutConfig = jobExecutionsRolloutConfig
        self.jobTemplateId = jobTemplateId
        self.presignedUrlConfig = presignedUrlConfig
        self.tags = tags
        self.timeoutConfig = timeoutConfig
    }
}

extension CreateJobTemplateInput: CustomDebugStringConvertible {
    public var debugDescription: String {
        "CreateJobTemplateInput(abortConfig: \(String(describing: abortConfig)), description: \(String(describing: description)), document: \(String(describing: document)), documentSource: \(String(describing: documentSource)), jobArn: \(String(describing: jobArn)), jobExecutionsRolloutConfig: \(String(describing: jobExecutionsRolloutConfig)), jobTemplateId: \(String(describing: jobTemplateId)), presignedUrlConfig: \(String(describing: presignedUrlConfig)), tags: \(String(describing: tags)), timeoutConfig: \(String(describing: timeoutConfig)))"}
}
