// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeThingGroupOutputResponseBody: Equatable {
    public let thingGroupName: String?
    public let thingGroupId: String?
    public let thingGroupArn: String?
    public let version: Int
    public let thingGroupProperties: ThingGroupProperties?
    public let thingGroupMetadata: ThingGroupMetadata?
    public let indexName: String?
    public let queryString: String?
    public let queryVersion: String?
    public let status: DynamicGroupStatus?
}

extension DescribeThingGroupOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case indexName
        case queryString
        case queryVersion
        case status
        case thingGroupArn
        case thingGroupId
        case thingGroupMetadata
        case thingGroupName
        case thingGroupProperties
        case version
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let thingGroupNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .thingGroupName)
        thingGroupName = thingGroupNameDecoded
        let thingGroupIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .thingGroupId)
        thingGroupId = thingGroupIdDecoded
        let thingGroupArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .thingGroupArn)
        thingGroupArn = thingGroupArnDecoded
        let versionDecoded = try containerValues.decode(Int.self, forKey: .version)
        version = versionDecoded
        let thingGroupPropertiesDecoded = try containerValues.decodeIfPresent(ThingGroupProperties.self, forKey: .thingGroupProperties)
        thingGroupProperties = thingGroupPropertiesDecoded
        let thingGroupMetadataDecoded = try containerValues.decodeIfPresent(ThingGroupMetadata.self, forKey: .thingGroupMetadata)
        thingGroupMetadata = thingGroupMetadataDecoded
        let indexNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .indexName)
        indexName = indexNameDecoded
        let queryStringDecoded = try containerValues.decodeIfPresent(String.self, forKey: .queryString)
        queryString = queryStringDecoded
        let queryVersionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .queryVersion)
        queryVersion = queryVersionDecoded
        let statusDecoded = try containerValues.decodeIfPresent(DynamicGroupStatus.self, forKey: .status)
        status = statusDecoded
    }
}
