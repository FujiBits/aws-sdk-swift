// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeProvisioningTemplateVersionOutputResponseBody: Equatable {
    public let versionId: Int?
    public let creationDate: Date?
    public let templateBody: String?
    public let isDefaultVersion: Bool
}

extension DescribeProvisioningTemplateVersionOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case creationDate
        case isDefaultVersion
        case templateBody
        case versionId
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let versionIdDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .versionId)
        versionId = versionIdDecoded
        let creationDateDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .creationDate)
        creationDate = creationDateDecoded
        let templateBodyDecoded = try containerValues.decodeIfPresent(String.self, forKey: .templateBody)
        templateBody = templateBodyDecoded
        let isDefaultVersionDecoded = try containerValues.decode(Bool.self, forKey: .isDefaultVersion)
        isDefaultVersion = isDefaultVersionDecoded
    }
}
