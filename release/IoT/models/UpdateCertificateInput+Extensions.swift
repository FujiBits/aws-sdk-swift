// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct UpdateCertificateInputHeadersMiddleware: Middleware {
    public let id: String = "UpdateCertificateInputHeadersMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<UpdateCertificateInput>,
                  next: H) -> Swift.Result<OperationOutput<UpdateCertificateOutputResponse>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<UpdateCertificateInput>
    public typealias MOutput = OperationOutput<UpdateCertificateOutputResponse>
    public typealias Context = ClientRuntime.HttpContext
    public typealias MError = SdkError<UpdateCertificateOutputError>
}

public struct UpdateCertificateInputQueryItemMiddleware: Middleware {
    public let id: String = "UpdateCertificateInputQueryItemMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<UpdateCertificateInput>,
                  next: H) -> Swift.Result<OperationOutput<UpdateCertificateOutputResponse>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        if let newStatus = input.operationInput.newStatus {
            let newStatusQueryItem = URLQueryItem(name: "newStatus".urlPercentEncoding(), value: String(newStatus.rawValue).urlPercentEncoding())
            input.builder.withQueryItem(newStatusQueryItem)
        }
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<UpdateCertificateInput>
    public typealias MOutput = OperationOutput<UpdateCertificateOutputResponse>
    public typealias Context = ClientRuntime.HttpContext
    public typealias MError = SdkError<UpdateCertificateOutputError>
}

extension UpdateCertificateInput: Encodable, Reflection {

    public func encode(to encoder: Encoder) throws {
    }
}
