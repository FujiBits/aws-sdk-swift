// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Describes a certificate.</p>
public struct CertificateDescription: Equatable {
    /// <p>The certificate ID of the CA certificate used to sign this certificate.</p>
    public let caCertificateId: String?
    /// <p>The ARN of the certificate.</p>
    public let certificateArn: String?
    /// <p>The ID of the certificate.</p>
    public let certificateId: String?
    /// <p>The mode of the certificate.</p>
    public let certificateMode: CertificateMode?
    /// <p>The certificate data, in PEM format.</p>
    public let certificatePem: String?
    /// <p>The date and time the certificate was created.</p>
    public let creationDate: Date?
    /// <p>The customer version of the certificate.</p>
    public let customerVersion: Int?
    /// <p>The generation ID of the certificate.</p>
    public let generationId: String?
    /// <p>The date and time the certificate was last modified.</p>
    public let lastModifiedDate: Date?
    /// <p>The ID of the AWS account that owns the certificate.</p>
    public let ownedBy: String?
    /// <p>The ID of the AWS account of the previous owner of the certificate.</p>
    public let previousOwnedBy: String?
    /// <p>The status of the certificate.</p>
    public let status: CertificateStatus?
    /// <p>The transfer data.</p>
    public let transferData: TransferData?
    /// <p>When the certificate is valid.</p>
    public let validity: CertificateValidity?

    public init (
        caCertificateId: String? = nil,
        certificateArn: String? = nil,
        certificateId: String? = nil,
        certificateMode: CertificateMode? = nil,
        certificatePem: String? = nil,
        creationDate: Date? = nil,
        customerVersion: Int? = nil,
        generationId: String? = nil,
        lastModifiedDate: Date? = nil,
        ownedBy: String? = nil,
        previousOwnedBy: String? = nil,
        status: CertificateStatus? = nil,
        transferData: TransferData? = nil,
        validity: CertificateValidity? = nil
    )
    {
        self.caCertificateId = caCertificateId
        self.certificateArn = certificateArn
        self.certificateId = certificateId
        self.certificateMode = certificateMode
        self.certificatePem = certificatePem
        self.creationDate = creationDate
        self.customerVersion = customerVersion
        self.generationId = generationId
        self.lastModifiedDate = lastModifiedDate
        self.ownedBy = ownedBy
        self.previousOwnedBy = previousOwnedBy
        self.status = status
        self.transferData = transferData
        self.validity = validity
    }
}

extension CertificateDescription: CustomDebugStringConvertible {
    public var debugDescription: String {
        "CertificateDescription(caCertificateId: \(String(describing: caCertificateId)), certificateArn: \(String(describing: certificateArn)), certificateId: \(String(describing: certificateId)), certificateMode: \(String(describing: certificateMode)), certificatePem: \(String(describing: certificatePem)), creationDate: \(String(describing: creationDate)), customerVersion: \(String(describing: customerVersion)), generationId: \(String(describing: generationId)), lastModifiedDate: \(String(describing: lastModifiedDate)), ownedBy: \(String(describing: ownedBy)), previousOwnedBy: \(String(describing: previousOwnedBy)), status: \(String(describing: status)), transferData: \(String(describing: transferData)), validity: \(String(describing: validity)))"}
}
