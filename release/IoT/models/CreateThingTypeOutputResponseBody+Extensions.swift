// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateThingTypeOutputResponseBody: Equatable {
    public let thingTypeName: String?
    public let thingTypeArn: String?
    public let thingTypeId: String?
}

extension CreateThingTypeOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case thingTypeArn
        case thingTypeId
        case thingTypeName
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let thingTypeNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .thingTypeName)
        thingTypeName = thingTypeNameDecoded
        let thingTypeArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .thingTypeArn)
        thingTypeArn = thingTypeArnDecoded
        let thingTypeIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .thingTypeId)
        thingTypeId = thingTypeIdDecoded
    }
}
