// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IotSiteWiseAction: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case putAssetPropertyValueEntries
        case roleArn
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let putAssetPropertyValueEntries = putAssetPropertyValueEntries {
            var putAssetPropertyValueEntriesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .putAssetPropertyValueEntries)
            for putassetpropertyvalueentrylist0 in putAssetPropertyValueEntries {
                try putAssetPropertyValueEntriesContainer.encode(putassetpropertyvalueentrylist0)
            }
        }
        if let roleArn = roleArn {
            try encodeContainer.encode(roleArn, forKey: .roleArn)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let putAssetPropertyValueEntriesContainer = try containerValues.decodeIfPresent([PutAssetPropertyValueEntry?].self, forKey: .putAssetPropertyValueEntries)
        var putAssetPropertyValueEntriesDecoded0:[PutAssetPropertyValueEntry]? = nil
        if let putAssetPropertyValueEntriesContainer = putAssetPropertyValueEntriesContainer {
            putAssetPropertyValueEntriesDecoded0 = [PutAssetPropertyValueEntry]()
            for structure0 in putAssetPropertyValueEntriesContainer {
                if let structure0 = structure0 {
                    putAssetPropertyValueEntriesDecoded0?.append(structure0)
                }
            }
        }
        putAssetPropertyValueEntries = putAssetPropertyValueEntriesDecoded0
        let roleArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
    }
}
