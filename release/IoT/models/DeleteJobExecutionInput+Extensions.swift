// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DeleteJobExecutionInputHeadersMiddleware: Middleware {
    public let id: String = "DeleteJobExecutionInputHeadersMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<DeleteJobExecutionInput>,
                  next: H) -> Swift.Result<OperationOutput<DeleteJobExecutionOutputResponse>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<DeleteJobExecutionInput>
    public typealias MOutput = OperationOutput<DeleteJobExecutionOutputResponse>
    public typealias Context = ClientRuntime.HttpContext
    public typealias MError = SdkError<DeleteJobExecutionOutputError>
}

public struct DeleteJobExecutionInputQueryItemMiddleware: Middleware {
    public let id: String = "DeleteJobExecutionInputQueryItemMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<DeleteJobExecutionInput>,
                  next: H) -> Swift.Result<OperationOutput<DeleteJobExecutionOutputResponse>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        if let namespaceId = input.operationInput.namespaceId {
            let namespaceIdQueryItem = URLQueryItem(name: "namespaceId".urlPercentEncoding(), value: String(namespaceId).urlPercentEncoding())
            input.builder.withQueryItem(namespaceIdQueryItem)
        }
        let forceQueryItem = URLQueryItem(name: "force".urlPercentEncoding(), value: String(input.operationInput.force).urlPercentEncoding())
        input.builder.withQueryItem(forceQueryItem)
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<DeleteJobExecutionInput>
    public typealias MOutput = OperationOutput<DeleteJobExecutionOutputResponse>
    public typealias Context = ClientRuntime.HttpContext
    public typealias MError = SdkError<DeleteJobExecutionOutputError>
}

extension DeleteJobExecutionInput: Encodable, Reflection {

    public func encode(to encoder: Encoder) throws {
    }
}
