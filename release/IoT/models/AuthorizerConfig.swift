// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>An object that specifies the authorization service for a domain.</p>
public struct AuthorizerConfig: Equatable {
    /// <p>A Boolean that specifies whether the domain configuration's authorization service can be overridden.</p>
    public let allowAuthorizerOverride: Bool
    /// <p>The name of the authorization service for a domain configuration.</p>
    public let defaultAuthorizerName: String?

    public init (
        allowAuthorizerOverride: Bool = false,
        defaultAuthorizerName: String? = nil
    )
    {
        self.allowAuthorizerOverride = allowAuthorizerOverride
        self.defaultAuthorizerName = defaultAuthorizerName
    }
}

extension AuthorizerConfig: CustomDebugStringConvertible {
    public var debugDescription: String {
        "AuthorizerConfig(allowAuthorizerOverride: \(String(describing: allowAuthorizerOverride)), defaultAuthorizerName: \(String(describing: defaultAuthorizerName)))"}
}
