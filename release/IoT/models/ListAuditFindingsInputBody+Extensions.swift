// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAuditFindingsInputBody: Equatable {
    public let taskId: String?
    public let checkName: String?
    public let resourceIdentifier: ResourceIdentifier?
    public let maxResults: Int?
    public let nextToken: String?
    public let startTime: Date?
    public let endTime: Date?
    public let listSuppressedFindings: Bool
}

extension ListAuditFindingsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case checkName
        case endTime
        case listSuppressedFindings
        case maxResults
        case nextToken
        case resourceIdentifier
        case startTime
        case taskId
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let taskIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .taskId)
        taskId = taskIdDecoded
        let checkNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .checkName)
        checkName = checkNameDecoded
        let resourceIdentifierDecoded = try containerValues.decodeIfPresent(ResourceIdentifier.self, forKey: .resourceIdentifier)
        resourceIdentifier = resourceIdentifierDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let startTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .startTime)
        startTime = startTimeDecoded
        let endTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .endTime)
        endTime = endTimeDecoded
        let listSuppressedFindingsDecoded = try containerValues.decode(Bool.self, forKey: .listSuppressedFindings)
        listSuppressedFindings = listSuppressedFindingsDecoded
    }
}
