// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateDimensionInput: Equatable {
    /// <p>A unique identifier for the dimension. Choose something that describes the type and value to make it easy to remember what it does.</p>
    public let name: String?
    /// <p>Specifies the value or list of values for the dimension. For <code>TOPIC_FILTER</code> dimensions, this is a pattern used to match the MQTT topic (for example, "admin/#").</p>
    public let stringValues: [String]?

    public init (
        name: String? = nil,
        stringValues: [String]? = nil
    )
    {
        self.name = name
        self.stringValues = stringValues
    }
}

extension UpdateDimensionInput: CustomDebugStringConvertible {
    public var debugDescription: String {
        "UpdateDimensionInput(name: \(String(describing: name)), stringValues: \(String(describing: stringValues)))"}
}
