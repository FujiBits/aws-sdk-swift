// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The input for the CreateThing operation.</p>
public struct CreateThingInput: Equatable {
    /// <p>The attribute payload, which consists of up to three name/value pairs in a JSON
    /// 			document. For example:</p>
    /// 		       <p>
    /// 			         <code>{\"attributes\":{\"string1\":\"string2\"}}</code>
    /// 		       </p>
    public let attributePayload: AttributePayload?
    /// <p>The name of the billing group the thing will be added to.</p>
    public let billingGroupName: String?
    /// <p>The name of the thing to create.</p>
    /// 		       <p>You can't change a thing's name after you create it. To change a thing's name, you must create a
    /// 			new thing, give it the new name, and then delete the old thing.</p>
    public let thingName: String?
    /// <p>The name of the thing type associated with the new thing.</p>
    public let thingTypeName: String?

    public init (
        attributePayload: AttributePayload? = nil,
        billingGroupName: String? = nil,
        thingName: String? = nil,
        thingTypeName: String? = nil
    )
    {
        self.attributePayload = attributePayload
        self.billingGroupName = billingGroupName
        self.thingName = thingName
        self.thingTypeName = thingTypeName
    }
}

extension CreateThingInput: CustomDebugStringConvertible {
    public var debugDescription: String {
        "CreateThingInput(attributePayload: \(String(describing: attributePayload)), billingGroupName: \(String(describing: billingGroupName)), thingName: \(String(describing: thingName)), thingTypeName: \(String(describing: thingTypeName)))"}
}
