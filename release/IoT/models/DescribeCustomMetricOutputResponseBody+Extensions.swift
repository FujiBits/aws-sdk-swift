// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeCustomMetricOutputResponseBody: Equatable {
    public let metricName: String?
    public let metricArn: String?
    public let metricType: CustomMetricType?
    public let displayName: String?
    public let creationDate: Date?
    public let lastModifiedDate: Date?
}

extension DescribeCustomMetricOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case creationDate
        case displayName
        case lastModifiedDate
        case metricArn
        case metricName
        case metricType
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let metricNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .metricName)
        metricName = metricNameDecoded
        let metricArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .metricArn)
        metricArn = metricArnDecoded
        let metricTypeDecoded = try containerValues.decodeIfPresent(CustomMetricType.self, forKey: .metricType)
        metricType = metricTypeDecoded
        let displayNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .displayName)
        displayName = displayNameDecoded
        let creationDateDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .creationDate)
        creationDate = creationDateDecoded
        let lastModifiedDateDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .lastModifiedDate)
        lastModifiedDate = lastModifiedDateDecoded
    }
}
