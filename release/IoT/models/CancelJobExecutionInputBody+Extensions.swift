// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CancelJobExecutionInputBody: Equatable {
    public let expectedVersion: Int?
    public let statusDetails: [String:String]?
}

extension CancelJobExecutionInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case expectedVersion
        case statusDetails
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let expectedVersionDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .expectedVersion)
        expectedVersion = expectedVersionDecoded
        let statusDetailsContainer = try containerValues.decodeIfPresent([String: String?].self, forKey: .statusDetails)
        var statusDetailsDecoded0: [String:String]? = nil
        if let statusDetailsContainer = statusDetailsContainer {
            statusDetailsDecoded0 = [String:String]()
            for (key0, detailsvalue0) in statusDetailsContainer {
                if let detailsvalue0 = detailsvalue0 {
                    statusDetailsDecoded0?[key0] = detailsvalue0
                }
            }
        }
        statusDetails = statusDetailsDecoded0
    }
}
