// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ActiveViolation: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case behavior
        case lastViolationTime
        case lastViolationValue
        case securityProfileName
        case thingName
        case violationEventAdditionalInfo
        case violationId
        case violationStartTime
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let behavior = behavior {
            try encodeContainer.encode(behavior, forKey: .behavior)
        }
        if let lastViolationTime = lastViolationTime {
            try encodeContainer.encode(lastViolationTime.timeIntervalSince1970, forKey: .lastViolationTime)
        }
        if let lastViolationValue = lastViolationValue {
            try encodeContainer.encode(lastViolationValue, forKey: .lastViolationValue)
        }
        if let securityProfileName = securityProfileName {
            try encodeContainer.encode(securityProfileName, forKey: .securityProfileName)
        }
        if let thingName = thingName {
            try encodeContainer.encode(thingName, forKey: .thingName)
        }
        if let violationEventAdditionalInfo = violationEventAdditionalInfo {
            try encodeContainer.encode(violationEventAdditionalInfo, forKey: .violationEventAdditionalInfo)
        }
        if let violationId = violationId {
            try encodeContainer.encode(violationId, forKey: .violationId)
        }
        if let violationStartTime = violationStartTime {
            try encodeContainer.encode(violationStartTime.timeIntervalSince1970, forKey: .violationStartTime)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let violationIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .violationId)
        violationId = violationIdDecoded
        let thingNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .thingName)
        thingName = thingNameDecoded
        let securityProfileNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .securityProfileName)
        securityProfileName = securityProfileNameDecoded
        let behaviorDecoded = try containerValues.decodeIfPresent(Behavior.self, forKey: .behavior)
        behavior = behaviorDecoded
        let lastViolationValueDecoded = try containerValues.decodeIfPresent(MetricValue.self, forKey: .lastViolationValue)
        lastViolationValue = lastViolationValueDecoded
        let violationEventAdditionalInfoDecoded = try containerValues.decodeIfPresent(ViolationEventAdditionalInfo.self, forKey: .violationEventAdditionalInfo)
        violationEventAdditionalInfo = violationEventAdditionalInfoDecoded
        let lastViolationTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .lastViolationTime)
        lastViolationTime = lastViolationTimeDecoded
        let violationStartTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .violationStartTime)
        violationStartTime = violationStartTimeDecoded
    }
}
