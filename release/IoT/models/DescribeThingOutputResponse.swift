// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The output from the DescribeThing operation.</p>
public struct DescribeThingOutputResponse: Equatable {
    /// <p>The thing attributes.</p>
    public let attributes: [String:String]?
    /// <p>The name of the billing group the thing belongs to.</p>
    public let billingGroupName: String?
    /// <p>The default MQTT client ID. For a typical device, the thing name is also used as the default MQTT client ID.
    /// 			Although we donâ€™t require a mapping between a thing's registry name and its use of MQTT client IDs, certificates, or
    /// 			shadow state, we recommend that you choose a thing name and use it as the MQTT client ID for the registry and the Device Shadow service.</p>
    /// 		       <p>This lets you better organize your AWS IoT fleet without removing the flexibility of the underlying device certificate model or shadows.</p>
    public let defaultClientId: String?
    /// <p>The ARN of the thing to describe.</p>
    public let thingArn: String?
    /// <p>The ID of the thing to describe.</p>
    public let thingId: String?
    /// <p>The name of the thing.</p>
    public let thingName: String?
    /// <p>The thing type name.</p>
    public let thingTypeName: String?
    /// <p>The current version of the thing record in the registry.</p>
    /// 		       <note>
    /// 			         <p>To avoid unintentional changes to the information in the registry, you can pass
    /// 				the version information in the <code>expectedVersion</code> parameter of the
    /// 					<code>UpdateThing</code> and <code>DeleteThing</code> calls.</p>
    /// 		       </note>
    public let version: Int

    public init (
        attributes: [String:String]? = nil,
        billingGroupName: String? = nil,
        defaultClientId: String? = nil,
        thingArn: String? = nil,
        thingId: String? = nil,
        thingName: String? = nil,
        thingTypeName: String? = nil,
        version: Int = 0
    )
    {
        self.attributes = attributes
        self.billingGroupName = billingGroupName
        self.defaultClientId = defaultClientId
        self.thingArn = thingArn
        self.thingId = thingId
        self.thingName = thingName
        self.thingTypeName = thingTypeName
        self.version = version
    }
}

extension DescribeThingOutputResponse: CustomDebugStringConvertible {
    public var debugDescription: String {
        "DescribeThingOutputResponse(attributes: \(String(describing: attributes)), billingGroupName: \(String(describing: billingGroupName)), defaultClientId: \(String(describing: defaultClientId)), thingArn: \(String(describing: thingArn)), thingId: \(String(describing: thingId)), thingName: \(String(describing: thingName)), thingTypeName: \(String(describing: thingTypeName)), version: \(String(describing: version)))"}
}
