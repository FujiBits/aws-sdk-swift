// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateProvisioningTemplateInputBody: Equatable {
    public let description: String?
    public let enabled: Bool
    public let defaultVersionId: Int?
    public let provisioningRoleArn: String?
    public let preProvisioningHook: ProvisioningHook?
    public let removePreProvisioningHook: Bool?
}

extension UpdateProvisioningTemplateInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case defaultVersionId
        case description
        case enabled
        case preProvisioningHook
        case provisioningRoleArn
        case removePreProvisioningHook
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let descriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .description)
        description = descriptionDecoded
        let enabledDecoded = try containerValues.decode(Bool.self, forKey: .enabled)
        enabled = enabledDecoded
        let defaultVersionIdDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .defaultVersionId)
        defaultVersionId = defaultVersionIdDecoded
        let provisioningRoleArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .provisioningRoleArn)
        provisioningRoleArn = provisioningRoleArnDecoded
        let preProvisioningHookDecoded = try containerValues.decodeIfPresent(ProvisioningHook.self, forKey: .preProvisioningHook)
        preProvisioningHook = preProvisioningHookDecoded
        let removePreProvisioningHookDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .removePreProvisioningHook)
        removePreProvisioningHook = removePreProvisioningHookDecoded
    }
}
