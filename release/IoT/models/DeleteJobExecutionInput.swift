// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct DeleteJobExecutionInput: Equatable {
    /// <p>The ID of the job execution to be deleted. The <code>executionNumber</code> refers to the
    ///         execution of a particular job on a particular device.</p>
    ///          <p>Note that once a job execution is deleted, the <code>executionNumber</code> may be reused
    ///         by IoT, so be sure you get and use the correct value here.</p>
    public let executionNumber: Int?
    /// <p>(Optional) When true, you can delete a job execution which is "IN_PROGRESS". Otherwise,
    ///         you can only delete a job execution which is in a terminal state ("SUCCEEDED", "FAILED",
    ///         "REJECTED", "REMOVED" or "CANCELED") or an exception will occur. The default is false.</p>
    ///          <note>
    ///             <p>Deleting a job execution which is "IN_PROGRESS", will cause the device
    ///         to be unable to access job information or update the job execution status.
    ///         Use caution and ensure that the device is able to recover to a valid state.</p>
    ///          </note>
    public let force: Bool
    /// <p>The ID of the job whose execution on a particular device will be deleted.</p>
    public let jobId: String?
    /// <p>The namespace used to indicate that a job is a customer-managed job.</p>
    ///         <p>When you specify a value for this parameter, AWS IoT Core sends jobs notifications to MQTT topics that
    ///             contain the value in the following format.</p>
    ///         <p>
    ///             <code>$aws/things/<i>THING_NAME</i>/jobs/<i>JOB_ID</i>/notify-namespace-<i>NAMESPACE_ID</i>/</code>
    ///          </p>
    ///         <note>
    ///             <p>The <code>namespaceId</code> feature is in public preview.</p>
    ///          </note>
    public let namespaceId: String?
    /// <p>The name of the thing whose job execution will be deleted.</p>
    public let thingName: String?

    public init (
        executionNumber: Int? = nil,
        force: Bool = false,
        jobId: String? = nil,
        namespaceId: String? = nil,
        thingName: String? = nil
    )
    {
        self.executionNumber = executionNumber
        self.force = force
        self.jobId = jobId
        self.namespaceId = namespaceId
        self.thingName = thingName
    }
}

extension DeleteJobExecutionInput: CustomDebugStringConvertible {
    public var debugDescription: String {
        "DeleteJobExecutionInput(executionNumber: \(String(describing: executionNumber)), force: \(String(describing: force)), jobId: \(String(describing: jobId)), namespaceId: \(String(describing: namespaceId)), thingName: \(String(describing: thingName)))"}
}
