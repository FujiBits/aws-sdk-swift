// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListV2LoggingLevelsOutputResponseBody: Equatable {
    public let logTargetConfigurations: [LogTargetConfiguration]?
    public let nextToken: String?
}

extension ListV2LoggingLevelsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case logTargetConfigurations
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let logTargetConfigurationsContainer = try containerValues.decodeIfPresent([LogTargetConfiguration?].self, forKey: .logTargetConfigurations)
        var logTargetConfigurationsDecoded0:[LogTargetConfiguration]? = nil
        if let logTargetConfigurationsContainer = logTargetConfigurationsContainer {
            logTargetConfigurationsDecoded0 = [LogTargetConfiguration]()
            for structure0 in logTargetConfigurationsContainer {
                if let structure0 = structure0 {
                    logTargetConfigurationsDecoded0?.append(structure0)
                }
            }
        }
        logTargetConfigurations = logTargetConfigurationsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
