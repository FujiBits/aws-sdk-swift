// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct StartDetectMitigationActionsTaskInputBody: Equatable {
    public let target: DetectMitigationActionsTaskTarget?
    public let actions: [String]?
    public let violationEventOccurrenceRange: ViolationEventOccurrenceRange?
    public let includeOnlyActiveViolations: Bool?
    public let includeSuppressedAlerts: Bool?
    public let clientRequestToken: String?
}

extension StartDetectMitigationActionsTaskInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case actions
        case clientRequestToken
        case includeOnlyActiveViolations
        case includeSuppressedAlerts
        case target
        case violationEventOccurrenceRange
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let targetDecoded = try containerValues.decodeIfPresent(DetectMitigationActionsTaskTarget.self, forKey: .target)
        target = targetDecoded
        let actionsContainer = try containerValues.decodeIfPresent([String?].self, forKey: .actions)
        var actionsDecoded0:[String]? = nil
        if let actionsContainer = actionsContainer {
            actionsDecoded0 = [String]()
            for string0 in actionsContainer {
                if let string0 = string0 {
                    actionsDecoded0?.append(string0)
                }
            }
        }
        actions = actionsDecoded0
        let violationEventOccurrenceRangeDecoded = try containerValues.decodeIfPresent(ViolationEventOccurrenceRange.self, forKey: .violationEventOccurrenceRange)
        violationEventOccurrenceRange = violationEventOccurrenceRangeDecoded
        let includeOnlyActiveViolationsDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .includeOnlyActiveViolations)
        includeOnlyActiveViolations = includeOnlyActiveViolationsDecoded
        let includeSuppressedAlertsDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .includeSuppressedAlerts)
        includeSuppressedAlerts = includeSuppressedAlertsDecoded
        let clientRequestTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .clientRequestToken)
        clientRequestToken = clientRequestTokenDecoded
    }
}
