// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PolicyVersionIdentifier: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case policyName
        case policyVersionId
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let policyName = policyName {
            try encodeContainer.encode(policyName, forKey: .policyName)
        }
        if let policyVersionId = policyVersionId {
            try encodeContainer.encode(policyVersionId, forKey: .policyVersionId)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let policyNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .policyName)
        policyName = policyNameDecoded
        let policyVersionIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .policyVersionId)
        policyVersionId = policyVersionIdDecoded
    }
}
