// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateJobInput: Equatable {
    /// <p>Allows you to create criteria to abort a job.</p>
    public let abortConfig: AbortConfig?
    /// <p>A short text description of the job.</p>
    public let description: String?
    /// <p>Allows you to create a staged rollout of the job.</p>
    public let jobExecutionsRolloutConfig: JobExecutionsRolloutConfig?
    /// <p>The ID of the job to be updated.</p>
    public let jobId: String?
    /// <p>The namespace used to indicate that a job is a customer-managed job.</p>
    ///         <p>When you specify a value for this parameter, AWS IoT Core sends jobs notifications to MQTT topics that
    ///             contain the value in the following format.</p>
    ///         <p>
    ///             <code>$aws/things/<i>THING_NAME</i>/jobs/<i>JOB_ID</i>/notify-namespace-<i>NAMESPACE_ID</i>/</code>
    ///          </p>
    ///         <note>
    ///             <p>The <code>namespaceId</code> feature is in public preview.</p>
    ///          </note>
    public let namespaceId: String?
    /// <p>Configuration information for pre-signed S3 URLs.</p>
    public let presignedUrlConfig: PresignedUrlConfig?
    /// <p>Specifies the amount of time each device has to finish its execution of the job. The timer is started when the job execution status is set to <code>IN_PROGRESS</code>.
    ///             If the job execution status is not set to another terminal state before the time expires, it will be automatically set to <code>TIMED_OUT</code>. </p>
    public let timeoutConfig: TimeoutConfig?

    public init (
        abortConfig: AbortConfig? = nil,
        description: String? = nil,
        jobExecutionsRolloutConfig: JobExecutionsRolloutConfig? = nil,
        jobId: String? = nil,
        namespaceId: String? = nil,
        presignedUrlConfig: PresignedUrlConfig? = nil,
        timeoutConfig: TimeoutConfig? = nil
    )
    {
        self.abortConfig = abortConfig
        self.description = description
        self.jobExecutionsRolloutConfig = jobExecutionsRolloutConfig
        self.jobId = jobId
        self.namespaceId = namespaceId
        self.presignedUrlConfig = presignedUrlConfig
        self.timeoutConfig = timeoutConfig
    }
}

extension UpdateJobInput: CustomDebugStringConvertible {
    public var debugDescription: String {
        "UpdateJobInput(abortConfig: \(String(describing: abortConfig)), description: \(String(describing: description)), jobExecutionsRolloutConfig: \(String(describing: jobExecutionsRolloutConfig)), jobId: \(String(describing: jobId)), namespaceId: \(String(describing: namespaceId)), presignedUrlConfig: \(String(describing: presignedUrlConfig)), timeoutConfig: \(String(describing: timeoutConfig)))"}
}
