// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListJobExecutionsForThingOutputResponseBody: Equatable {
    public let executionSummaries: [JobExecutionSummaryForThing]?
    public let nextToken: String?
}

extension ListJobExecutionsForThingOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case executionSummaries
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let executionSummariesContainer = try containerValues.decodeIfPresent([JobExecutionSummaryForThing?].self, forKey: .executionSummaries)
        var executionSummariesDecoded0:[JobExecutionSummaryForThing]? = nil
        if let executionSummariesContainer = executionSummariesContainer {
            executionSummariesDecoded0 = [JobExecutionSummaryForThing]()
            for structure0 in executionSummariesContainer {
                if let structure0 = structure0 {
                    executionSummariesDecoded0?.append(structure0)
                }
            }
        }
        executionSummaries = executionSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
