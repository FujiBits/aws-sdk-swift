// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAuditFindingsOutputResponseBody: Equatable {
    public let findings: [AuditFinding]?
    public let nextToken: String?
}

extension ListAuditFindingsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case findings
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let findingsContainer = try containerValues.decodeIfPresent([AuditFinding?].self, forKey: .findings)
        var findingsDecoded0:[AuditFinding]? = nil
        if let findingsContainer = findingsContainer {
            findingsDecoded0 = [AuditFinding]()
            for structure0 in findingsContainer {
                if let structure0 = structure0 {
                    findingsDecoded0?.append(structure0)
                }
            }
        }
        findings = findingsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
