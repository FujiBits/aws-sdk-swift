// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetEffectivePoliciesOutputResponseBody: Equatable {
    public let effectivePolicies: [EffectivePolicy]?
}

extension GetEffectivePoliciesOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case effectivePolicies
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let effectivePoliciesContainer = try containerValues.decodeIfPresent([EffectivePolicy?].self, forKey: .effectivePolicies)
        var effectivePoliciesDecoded0:[EffectivePolicy]? = nil
        if let effectivePoliciesContainer = effectivePoliciesContainer {
            effectivePoliciesDecoded0 = [EffectivePolicy]()
            for structure0 in effectivePoliciesContainer {
                if let structure0 = structure0 {
                    effectivePoliciesDecoded0?.append(structure0)
                }
            }
        }
        effectivePolicies = effectivePoliciesDecoded0
    }
}
