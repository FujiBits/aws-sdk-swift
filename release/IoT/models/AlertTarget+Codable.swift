// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AlertTarget: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case alertTargetArn
        case roleArn
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let alertTargetArn = alertTargetArn {
            try encodeContainer.encode(alertTargetArn, forKey: .alertTargetArn)
        }
        if let roleArn = roleArn {
            try encodeContainer.encode(roleArn, forKey: .roleArn)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let alertTargetArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .alertTargetArn)
        alertTargetArn = alertTargetArnDecoded
        let roleArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
    }
}
