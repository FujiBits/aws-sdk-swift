// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeThingTypeOutputResponseBody: Equatable {
    public let thingTypeName: String?
    public let thingTypeId: String?
    public let thingTypeArn: String?
    public let thingTypeProperties: ThingTypeProperties?
    public let thingTypeMetadata: ThingTypeMetadata?
}

extension DescribeThingTypeOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case thingTypeArn
        case thingTypeId
        case thingTypeMetadata
        case thingTypeName
        case thingTypeProperties
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let thingTypeNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .thingTypeName)
        thingTypeName = thingTypeNameDecoded
        let thingTypeIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .thingTypeId)
        thingTypeId = thingTypeIdDecoded
        let thingTypeArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .thingTypeArn)
        thingTypeArn = thingTypeArnDecoded
        let thingTypePropertiesDecoded = try containerValues.decodeIfPresent(ThingTypeProperties.self, forKey: .thingTypeProperties)
        thingTypeProperties = thingTypePropertiesDecoded
        let thingTypeMetadataDecoded = try containerValues.decodeIfPresent(ThingTypeMetadata.self, forKey: .thingTypeMetadata)
        thingTypeMetadata = thingTypeMetadataDecoded
    }
}
