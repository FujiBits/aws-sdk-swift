// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The set of parameters for this mitigation action. You can specify only one type of parameter (in other words, you can apply only one action for each defined mitigation action).</p>
public struct MitigationActionParams: Equatable {
    /// <p>Parameters to define a mitigation action that moves devices associated with a certificate to one or more specified thing groups, typically for quarantine.</p>
    public let addThingsToThingGroupParams: AddThingsToThingGroupParams?
    /// <p>Parameters to define a mitigation action that enables AWS IoT logging at a specified level of detail.</p>
    public let enableIoTLoggingParams: EnableIoTLoggingParams?
    /// <p>Parameters to define a mitigation action that publishes findings to Amazon Simple Notification Service (Amazon SNS. You can implement your own custom actions in response to the Amazon SNS messages.</p>
    public let publishFindingToSnsParams: PublishFindingToSnsParams?
    /// <p>Parameters to define a mitigation action that adds a blank policy to restrict permissions.</p>
    public let replaceDefaultPolicyVersionParams: ReplaceDefaultPolicyVersionParams?
    /// <p>Parameters to define a mitigation action that changes the state of the CA certificate to inactive.</p>
    public let updateCACertificateParams: UpdateCACertificateParams?
    /// <p>Parameters to define a mitigation action that changes the state of the device certificate to inactive.</p>
    public let updateDeviceCertificateParams: UpdateDeviceCertificateParams?

    public init (
        addThingsToThingGroupParams: AddThingsToThingGroupParams? = nil,
        enableIoTLoggingParams: EnableIoTLoggingParams? = nil,
        publishFindingToSnsParams: PublishFindingToSnsParams? = nil,
        replaceDefaultPolicyVersionParams: ReplaceDefaultPolicyVersionParams? = nil,
        updateCACertificateParams: UpdateCACertificateParams? = nil,
        updateDeviceCertificateParams: UpdateDeviceCertificateParams? = nil
    )
    {
        self.addThingsToThingGroupParams = addThingsToThingGroupParams
        self.enableIoTLoggingParams = enableIoTLoggingParams
        self.publishFindingToSnsParams = publishFindingToSnsParams
        self.replaceDefaultPolicyVersionParams = replaceDefaultPolicyVersionParams
        self.updateCACertificateParams = updateCACertificateParams
        self.updateDeviceCertificateParams = updateDeviceCertificateParams
    }
}

extension MitigationActionParams: CustomDebugStringConvertible {
    public var debugDescription: String {
        "MitigationActionParams(addThingsToThingGroupParams: \(String(describing: addThingsToThingGroupParams)), enableIoTLoggingParams: \(String(describing: enableIoTLoggingParams)), publishFindingToSnsParams: \(String(describing: publishFindingToSnsParams)), replaceDefaultPolicyVersionParams: \(String(describing: replaceDefaultPolicyVersionParams)), updateCACertificateParams: \(String(describing: updateCACertificateParams)), updateDeviceCertificateParams: \(String(describing: updateDeviceCertificateParams)))"}
}
