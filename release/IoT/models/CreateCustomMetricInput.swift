// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateCustomMetricInput: Equatable {
    /// <p>Each custom
    ///       metric must have a unique client request token. If you try to create a new custom metric that
    ///       already exists with a different token,
    ///       an exception
    ///       occurs. If you omit this value, AWS SDKs will automatically generate a unique client request. </p>
    public var clientRequestToken: String?
    /// <p>
    ///       Field
    ///       represents a friendly name in the console for the custom metric;
    ///       it
    ///       doesn't have to be unique. Don't use this name as the metric identifier in
    ///       the device metric report. Can be updated once defined.</p>
    public let displayName: String?
    /// <p> The name of the custom metric. This will be used in the metric report submitted from the device/thing. Shouldn't begin with <code>aws:</code>.
    ///       Cannot be updated
    ///       once defined.</p>
    public let metricName: String?
    /// <p>
    ///       The type of the custom metric. Types include <code>string-list</code>, <code>ip-address-list</code>, <code>number-list</code>, and <code>number</code>.
    ///     </p>
    public let metricType: CustomMetricType?
    /// <p>
    ///       Metadata that can be used to manage the custom metric.
    ///     </p>
    public let tags: [Tag]?

    public init (
        clientRequestToken: String? = nil,
        displayName: String? = nil,
        metricName: String? = nil,
        metricType: CustomMetricType? = nil,
        tags: [Tag]? = nil
    )
    {
        self.clientRequestToken = clientRequestToken
        self.displayName = displayName
        self.metricName = metricName
        self.metricType = metricType
        self.tags = tags
    }
}

extension CreateCustomMetricInput: CustomDebugStringConvertible {
    public var debugDescription: String {
        "CreateCustomMetricInput(clientRequestToken: \(String(describing: clientRequestToken)), displayName: \(String(describing: displayName)), metricName: \(String(describing: metricName)), metricType: \(String(describing: metricType)), tags: \(String(describing: tags)))"}
}
