// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct RegisterCertificateInputBody: Equatable {
    public let certificatePem: String?
    public let caCertificatePem: String?
    public let status: CertificateStatus?
}

extension RegisterCertificateInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case caCertificatePem
        case certificatePem
        case status
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let certificatePemDecoded = try containerValues.decodeIfPresent(String.self, forKey: .certificatePem)
        certificatePem = certificatePemDecoded
        let caCertificatePemDecoded = try containerValues.decodeIfPresent(String.self, forKey: .caCertificatePem)
        caCertificatePem = caCertificatePemDecoded
        let statusDecoded = try containerValues.decodeIfPresent(CertificateStatus.self, forKey: .status)
        status = statusDecoded
    }
}
