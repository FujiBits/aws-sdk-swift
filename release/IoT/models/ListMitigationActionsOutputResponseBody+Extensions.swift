// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListMitigationActionsOutputResponseBody: Equatable {
    public let actionIdentifiers: [MitigationActionIdentifier]?
    public let nextToken: String?
}

extension ListMitigationActionsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case actionIdentifiers
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let actionIdentifiersContainer = try containerValues.decodeIfPresent([MitigationActionIdentifier?].self, forKey: .actionIdentifiers)
        var actionIdentifiersDecoded0:[MitigationActionIdentifier]? = nil
        if let actionIdentifiersContainer = actionIdentifiersContainer {
            actionIdentifiersDecoded0 = [MitigationActionIdentifier]()
            for structure0 in actionIdentifiersContainer {
                if let structure0 = structure0 {
                    actionIdentifiersDecoded0?.append(structure0)
                }
            }
        }
        actionIdentifiers = actionIdentifiersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
