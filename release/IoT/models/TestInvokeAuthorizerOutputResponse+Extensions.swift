// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TestInvokeAuthorizerOutputResponse: HttpResponseBinding {
    public init (httpResponse: HttpResponse, decoder: ResponseDecoder? = nil) throws {
        if case .data(let data) = httpResponse.body,
            let unwrappedData = data,
            let responseDecoder = decoder {
            let output: TestInvokeAuthorizerOutputResponseBody = try responseDecoder.decode(responseBody: unwrappedData)
            self.disconnectAfterInSeconds = output.disconnectAfterInSeconds
            self.isAuthenticated = output.isAuthenticated
            self.policyDocuments = output.policyDocuments
            self.principalId = output.principalId
            self.refreshAfterInSeconds = output.refreshAfterInSeconds
        } else {
            self.disconnectAfterInSeconds = nil
            self.isAuthenticated = nil
            self.policyDocuments = nil
            self.principalId = nil
            self.refreshAfterInSeconds = nil
        }
    }
}
