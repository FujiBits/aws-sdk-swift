// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ListJobsInput: Equatable {
    /// <p>The maximum number of results to return per request.</p>
    public let maxResults: Int?
    /// <p>The namespace used to indicate that a job is a customer-managed job.</p>
    ///         <p>When you specify a value for this parameter, AWS IoT Core sends jobs notifications to MQTT topics that
    ///             contain the value in the following format.</p>
    ///         <p>
    ///             <code>$aws/things/<i>THING_NAME</i>/jobs/<i>JOB_ID</i>/notify-namespace-<i>NAMESPACE_ID</i>/</code>
    ///          </p>
    ///         <note>
    ///             <p>The <code>namespaceId</code> feature is in public preview.</p>
    ///          </note>
    public let namespaceId: String?
    /// <p>The token to retrieve the next set of results.</p>
    public let nextToken: String?
    /// <p>An optional filter that lets you search for jobs that have the specified status.</p>
    public let status: JobStatus?
    /// <p>Specifies whether the job will continue to run (CONTINUOUS), or will be complete after all those things
    ///             specified as targets have completed the job (SNAPSHOT). If continuous, the job may also be run on a thing
    ///             when a change is detected in a target. For example, a job will run on a thing when the thing is added to a
    ///             target group, even after the job was completed by all things originally in the group. </p>
    public let targetSelection: TargetSelection?
    /// <p>A filter that limits the returned jobs to those for the specified group.</p>
    public let thingGroupId: String?
    /// <p>A filter that limits the returned jobs to those for the specified group.</p>
    public let thingGroupName: String?

    public init (
        maxResults: Int? = nil,
        namespaceId: String? = nil,
        nextToken: String? = nil,
        status: JobStatus? = nil,
        targetSelection: TargetSelection? = nil,
        thingGroupId: String? = nil,
        thingGroupName: String? = nil
    )
    {
        self.maxResults = maxResults
        self.namespaceId = namespaceId
        self.nextToken = nextToken
        self.status = status
        self.targetSelection = targetSelection
        self.thingGroupId = thingGroupId
        self.thingGroupName = thingGroupName
    }
}

extension ListJobsInput: CustomDebugStringConvertible {
    public var debugDescription: String {
        "ListJobsInput(maxResults: \(String(describing: maxResults)), namespaceId: \(String(describing: namespaceId)), nextToken: \(String(describing: nextToken)), status: \(String(describing: status)), targetSelection: \(String(describing: targetSelection)), thingGroupId: \(String(describing: thingGroupId)), thingGroupName: \(String(describing: thingGroupName)))"}
}
