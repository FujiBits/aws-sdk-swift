// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTopicRuleDestinationsOutputResponseBody: Equatable {
    public let destinationSummaries: [TopicRuleDestinationSummary]?
    public let nextToken: String?
}

extension ListTopicRuleDestinationsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case destinationSummaries
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let destinationSummariesContainer = try containerValues.decodeIfPresent([TopicRuleDestinationSummary?].self, forKey: .destinationSummaries)
        var destinationSummariesDecoded0:[TopicRuleDestinationSummary]? = nil
        if let destinationSummariesContainer = destinationSummariesContainer {
            destinationSummariesDecoded0 = [TopicRuleDestinationSummary]()
            for structure0 in destinationSummariesContainer {
                if let structure0 = structure0 {
                    destinationSummariesDecoded0?.append(structure0)
                }
            }
        }
        destinationSummaries = destinationSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
