// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAttachedPoliciesOutputResponseBody: Equatable {
    public let policies: [Policy]?
    public let nextMarker: String?
}

extension ListAttachedPoliciesOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextMarker
        case policies
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let policiesContainer = try containerValues.decodeIfPresent([Policy?].self, forKey: .policies)
        var policiesDecoded0:[Policy]? = nil
        if let policiesContainer = policiesContainer {
            policiesDecoded0 = [Policy]()
            for structure0 in policiesContainer {
                if let structure0 = structure0 {
                    policiesDecoded0?.append(structure0)
                }
            }
        }
        policies = policiesDecoded0
        let nextMarkerDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextMarker)
        nextMarker = nextMarkerDecoded
    }
}
