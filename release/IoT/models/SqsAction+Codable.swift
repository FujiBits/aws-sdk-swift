// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SqsAction: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case queueUrl
        case roleArn
        case useBase64
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let queueUrl = queueUrl {
            try encodeContainer.encode(queueUrl, forKey: .queueUrl)
        }
        if let roleArn = roleArn {
            try encodeContainer.encode(roleArn, forKey: .roleArn)
        }
        if let useBase64 = useBase64 {
            try encodeContainer.encode(useBase64, forKey: .useBase64)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let roleArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
        let queueUrlDecoded = try containerValues.decodeIfPresent(String.self, forKey: .queueUrl)
        queueUrl = queueUrlDecoded
        let useBase64Decoded = try containerValues.decodeIfPresent(Bool.self, forKey: .useBase64)
        useBase64 = useBase64Decoded
    }
}
