// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The input for the UpdateCertificate operation.</p>
public struct UpdateCertificateInput: Equatable {
    /// <p>The ID of the certificate. (The last part of the certificate ARN contains the
    ///          certificate ID.)</p>
    public let certificateId: String?
    /// <p>The new status.</p>
    ///          <p>
    ///             <b>Note:</b> Setting the status to PENDING_TRANSFER  or PENDING_ACTIVATION will result
    ///          in an exception being thrown. PENDING_TRANSFER and PENDING_ACTIVATION are statuses used internally by AWS IoT. They
    ///          are not intended for developer use.</p>
    ///          <p>
    ///             <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and
    ///          should not be used.</p>
    public let newStatus: CertificateStatus?

    public init (
        certificateId: String? = nil,
        newStatus: CertificateStatus? = nil
    )
    {
        self.certificateId = certificateId
        self.newStatus = newStatus
    }
}

extension UpdateCertificateInput: CustomDebugStringConvertible {
    public var debugDescription: String {
        "UpdateCertificateInput(certificateId: \(String(describing: certificateId)), newStatus: \(String(describing: newStatus)))"}
}
