// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateDynamicThingGroupOutputResponseBody: Equatable {
    public let thingGroupName: String?
    public let thingGroupArn: String?
    public let thingGroupId: String?
    public let indexName: String?
    public let queryString: String?
    public let queryVersion: String?
}

extension CreateDynamicThingGroupOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case indexName
        case queryString
        case queryVersion
        case thingGroupArn
        case thingGroupId
        case thingGroupName
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let thingGroupNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .thingGroupName)
        thingGroupName = thingGroupNameDecoded
        let thingGroupArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .thingGroupArn)
        thingGroupArn = thingGroupArnDecoded
        let thingGroupIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .thingGroupId)
        thingGroupId = thingGroupIdDecoded
        let indexNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .indexName)
        indexName = indexNameDecoded
        let queryStringDecoded = try containerValues.decodeIfPresent(String.self, forKey: .queryString)
        queryString = queryStringDecoded
        let queryVersionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .queryVersion)
        queryVersion = queryVersionDecoded
    }
}
