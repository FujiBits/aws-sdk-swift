// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DeleteOTAUpdateInputHeadersMiddleware: Middleware {
    public let id: String = "DeleteOTAUpdateInputHeadersMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<DeleteOTAUpdateInput>,
                  next: H) -> Swift.Result<OperationOutput<DeleteOTAUpdateOutputResponse>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<DeleteOTAUpdateInput>
    public typealias MOutput = OperationOutput<DeleteOTAUpdateOutputResponse>
    public typealias Context = ClientRuntime.HttpContext
    public typealias MError = SdkError<DeleteOTAUpdateOutputError>
}

public struct DeleteOTAUpdateInputQueryItemMiddleware: Middleware {
    public let id: String = "DeleteOTAUpdateInputQueryItemMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<DeleteOTAUpdateInput>,
                  next: H) -> Swift.Result<OperationOutput<DeleteOTAUpdateOutputResponse>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        let deleteStreamQueryItem = URLQueryItem(name: "deleteStream".urlPercentEncoding(), value: String(input.operationInput.deleteStream).urlPercentEncoding())
        input.builder.withQueryItem(deleteStreamQueryItem)
        let forceDeleteAWSJobQueryItem = URLQueryItem(name: "forceDeleteAWSJob".urlPercentEncoding(), value: String(input.operationInput.forceDeleteAWSJob).urlPercentEncoding())
        input.builder.withQueryItem(forceDeleteAWSJobQueryItem)
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<DeleteOTAUpdateInput>
    public typealias MOutput = OperationOutput<DeleteOTAUpdateOutputResponse>
    public typealias Context = ClientRuntime.HttpContext
    public typealias MError = SdkError<DeleteOTAUpdateOutputError>
}

extension DeleteOTAUpdateInput: Encodable, Reflection {

    public func encode(to encoder: Encoder) throws {
    }
}
