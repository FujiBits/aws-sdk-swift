// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>A certificate that has been transferred but not yet accepted.</p>
public struct OutgoingCertificate: Equatable {
    /// <p>The certificate ARN.</p>
    public let certificateArn: String?
    /// <p>The certificate ID.</p>
    public let certificateId: String?
    /// <p>The certificate creation date.</p>
    public let creationDate: Date?
    /// <p>The date the transfer was initiated.</p>
    public let transferDate: Date?
    /// <p>The transfer message.</p>
    public let transferMessage: String?
    /// <p>The AWS account to which the transfer was made.</p>
    public let transferredTo: String?

    public init (
        certificateArn: String? = nil,
        certificateId: String? = nil,
        creationDate: Date? = nil,
        transferDate: Date? = nil,
        transferMessage: String? = nil,
        transferredTo: String? = nil
    )
    {
        self.certificateArn = certificateArn
        self.certificateId = certificateId
        self.creationDate = creationDate
        self.transferDate = transferDate
        self.transferMessage = transferMessage
        self.transferredTo = transferredTo
    }
}

extension OutgoingCertificate: CustomDebugStringConvertible {
    public var debugDescription: String {
        "OutgoingCertificate(certificateArn: \(String(describing: certificateArn)), certificateId: \(String(describing: certificateId)), creationDate: \(String(describing: creationDate)), transferDate: \(String(describing: transferDate)), transferMessage: \(String(describing: transferMessage)), transferredTo: \(String(describing: transferredTo)))"}
}
