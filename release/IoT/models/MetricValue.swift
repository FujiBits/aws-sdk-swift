// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The value to be compared with the <code>metric</code>.</p>
public struct MetricValue: Equatable {
    /// <p>If the <code>comparisonOperator</code> calls for a set of CIDRs, use this
    ///           to specify that set to be compared with the <code>metric</code>.</p>
    public let cidrs: [String]?
    /// <p>If the <code>comparisonOperator</code> calls for a numeric value, use this
    ///           to specify that numeric value to be compared with the <code>metric</code>.</p>
    public let count: Int?
    /// <p>
    ///             The numeral value of a metric.
    ///         </p>
    public let number: Double?
    /// <p>
    ///             The numeral values of a metric.
    ///         </p>
    public let numbers: [Double]?
    /// <p>If the <code>comparisonOperator</code> calls for a set of ports, use this
    ///           to specify that set to be compared with the <code>metric</code>.</p>
    public let ports: [Int]?
    /// <p>
    ///             The string values of a metric.
    ///         </p>
    public let strings: [String]?

    public init (
        cidrs: [String]? = nil,
        count: Int? = nil,
        number: Double? = nil,
        numbers: [Double]? = nil,
        ports: [Int]? = nil,
        strings: [String]? = nil
    )
    {
        self.cidrs = cidrs
        self.count = count
        self.number = number
        self.numbers = numbers
        self.ports = ports
        self.strings = strings
    }
}

extension MetricValue: CustomDebugStringConvertible {
    public var debugDescription: String {
        "MetricValue(cidrs: \(String(describing: cidrs)), count: \(String(describing: count)), number: \(String(describing: number)), numbers: \(String(describing: numbers)), ports: \(String(describing: ports)), strings: \(String(describing: strings)))"}
}
