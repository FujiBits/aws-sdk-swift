// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ListAttachedPoliciesInput: Equatable {
    /// <p>The token to retrieve the next set of results.</p>
    public let marker: String?
    /// <p>The maximum number of results to be returned per request.</p>
    public let pageSize: Int?
    /// <p>When true, recursively list attached policies.</p>
    public let recursive: Bool
    /// <p>The group or principal for which the policies will be listed. Valid principals are CertificateArn (arn:aws:iot:<i>region</i>:<i>accountId</i>:cert/<i>certificateId</i>), thingGroupArn (arn:aws:iot:<i>region</i>:<i>accountId</i>:thinggroup/<i>groupName</i>) and CognitoId (<i>region</i>:<i>id</i>).</p>
    public let target: String?

    public init (
        marker: String? = nil,
        pageSize: Int? = nil,
        recursive: Bool = false,
        target: String? = nil
    )
    {
        self.marker = marker
        self.pageSize = pageSize
        self.recursive = recursive
        self.target = target
    }
}

extension ListAttachedPoliciesInput: CustomDebugStringConvertible {
    public var debugDescription: String {
        "ListAttachedPoliciesInput(marker: \(String(describing: marker)), pageSize: \(String(describing: pageSize)), recursive: \(String(describing: recursive)), target: \(String(describing: target)))"}
}
