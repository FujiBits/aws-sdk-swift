// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum AuditCheckRunStatus {
    case canceled
    case completedCompliant
    case completedNonCompliant
    case failed
    case inProgress
    case waitingForDataCollection
    case sdkUnknown(String)
}

extension AuditCheckRunStatus : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [AuditCheckRunStatus] {
        return [
            .canceled,
            .completedCompliant,
            .completedNonCompliant,
            .failed,
            .inProgress,
            .waitingForDataCollection,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .canceled: return "CANCELED"
        case .completedCompliant: return "COMPLETED_COMPLIANT"
        case .completedNonCompliant: return "COMPLETED_NON_COMPLIANT"
        case .failed: return "FAILED"
        case .inProgress: return "IN_PROGRESS"
        case .waitingForDataCollection: return "WAITING_FOR_DATA_COLLECTION"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = AuditCheckRunStatus(rawValue: rawValue) ?? AuditCheckRunStatus.sdkUnknown(rawValue)
    }
}
