// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TaskStatisticsForAuditCheck: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case canceledFindingsCount
        case failedFindingsCount
        case skippedFindingsCount
        case succeededFindingsCount
        case totalFindingsCount
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let canceledFindingsCount = canceledFindingsCount {
            try encodeContainer.encode(canceledFindingsCount, forKey: .canceledFindingsCount)
        }
        if let failedFindingsCount = failedFindingsCount {
            try encodeContainer.encode(failedFindingsCount, forKey: .failedFindingsCount)
        }
        if let skippedFindingsCount = skippedFindingsCount {
            try encodeContainer.encode(skippedFindingsCount, forKey: .skippedFindingsCount)
        }
        if let succeededFindingsCount = succeededFindingsCount {
            try encodeContainer.encode(succeededFindingsCount, forKey: .succeededFindingsCount)
        }
        if let totalFindingsCount = totalFindingsCount {
            try encodeContainer.encode(totalFindingsCount, forKey: .totalFindingsCount)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let totalFindingsCountDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .totalFindingsCount)
        totalFindingsCount = totalFindingsCountDecoded
        let failedFindingsCountDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .failedFindingsCount)
        failedFindingsCount = failedFindingsCountDecoded
        let succeededFindingsCountDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .succeededFindingsCount)
        succeededFindingsCount = succeededFindingsCountDecoded
        let skippedFindingsCountDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .skippedFindingsCount)
        skippedFindingsCount = skippedFindingsCountDecoded
        let canceledFindingsCountDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .canceledFindingsCount)
        canceledFindingsCount = canceledFindingsCountDecoded
    }
}
