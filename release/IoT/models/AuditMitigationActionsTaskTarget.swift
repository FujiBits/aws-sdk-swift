// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Used in MitigationActionParams, this information identifies the target findings to which the mitigation actions are applied. Only one entry appears.</p>
public struct AuditMitigationActionsTaskTarget: Equatable {
    /// <p>Specifies a filter in the form of an audit check and set of reason codes that identify the findings from the audit to which the audit mitigation actions task apply.</p>
    public let auditCheckToReasonCodeFilter: [String:[String]]?
    /// <p>If the task will apply a mitigation action to findings from a specific audit, this value uniquely identifies the audit.</p>
    public let auditTaskId: String?
    /// <p>If the task will apply a mitigation action to one or more listed findings, this value uniquely identifies those findings.</p>
    public let findingIds: [String]?

    public init (
        auditCheckToReasonCodeFilter: [String:[String]]? = nil,
        auditTaskId: String? = nil,
        findingIds: [String]? = nil
    )
    {
        self.auditCheckToReasonCodeFilter = auditCheckToReasonCodeFilter
        self.auditTaskId = auditTaskId
        self.findingIds = findingIds
    }
}

extension AuditMitigationActionsTaskTarget: CustomDebugStringConvertible {
    public var debugDescription: String {
        "AuditMitigationActionsTaskTarget(auditCheckToReasonCodeFilter: \(String(describing: auditCheckToReasonCodeFilter)), auditTaskId: \(String(describing: auditTaskId)), findingIds: \(String(describing: findingIds)))"}
}
