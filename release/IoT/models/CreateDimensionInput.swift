// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateDimensionInput: Equatable {
    /// <p>Each dimension must have a unique client request token. If you try to create a new dimension with the same token as a dimension that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request.</p>
    public var clientRequestToken: String?
    /// <p>A unique identifier for the dimension. Choose something that describes the type and value to make it easy to remember what it does.</p>
    public let name: String?
    /// <p>Specifies the value or list of values for the dimension. For <code>TOPIC_FILTER</code> dimensions, this is a pattern used to match the MQTT topic (for example, "admin/#").</p>
    public let stringValues: [String]?
    /// <p>Metadata that can be used to manage the dimension.</p>
    public let tags: [Tag]?
    /// <p>Specifies the type of dimension. Supported types: <code>TOPIC_FILTER.</code>
    ///          </p>
    public let type: DimensionType?

    public init (
        clientRequestToken: String? = nil,
        name: String? = nil,
        stringValues: [String]? = nil,
        tags: [Tag]? = nil,
        type: DimensionType? = nil
    )
    {
        self.clientRequestToken = clientRequestToken
        self.name = name
        self.stringValues = stringValues
        self.tags = tags
        self.type = type
    }
}

extension CreateDimensionInput: CustomDebugStringConvertible {
    public var debugDescription: String {
        "CreateDimensionInput(clientRequestToken: \(String(describing: clientRequestToken)), name: \(String(describing: name)), stringValues: \(String(describing: stringValues)), tags: \(String(describing: tags)), type: \(String(describing: type)))"}
}
