// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateProvisioningTemplateVersionOutputResponseBody: Equatable {
    public let templateArn: String?
    public let templateName: String?
    public let versionId: Int?
    public let isDefaultVersion: Bool
}

extension CreateProvisioningTemplateVersionOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case isDefaultVersion
        case templateArn
        case templateName
        case versionId
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let templateArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .templateArn)
        templateArn = templateArnDecoded
        let templateNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .templateName)
        templateName = templateNameDecoded
        let versionIdDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .versionId)
        versionId = versionIdDecoded
        let isDefaultVersionDecoded = try containerValues.decode(Bool.self, forKey: .isDefaultVersion)
        isDefaultVersion = isDefaultVersionDecoded
    }
}
