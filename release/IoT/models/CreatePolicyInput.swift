// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The input for the CreatePolicy operation.</p>
public struct CreatePolicyInput: Equatable {
    /// <p>The JSON document that describes the policy. <b>policyDocument</b> must have a minimum length of 1, with a maximum length of
    ///          2048, excluding whitespace.</p>
    public let policyDocument: String?
    /// <p>The policy name.</p>
    public let policyName: String?
    /// <p>Metadata which can be used to manage the policy.</p>
    ///          <note>
    ///             <p>For URI Request parameters use format: ...key1=value1&key2=value2...</p>
    ///             <p>For the CLI command-line parameter use format: &&tags
    ///             "key1=value1&key2=value2..."</p>
    ///             <p>For the cli-input-json file use format: "tags":
    ///             "key1=value1&key2=value2..."</p>
    ///          </note>
    public let tags: [Tag]?

    public init (
        policyDocument: String? = nil,
        policyName: String? = nil,
        tags: [Tag]? = nil
    )
    {
        self.policyDocument = policyDocument
        self.policyName = policyName
        self.tags = tags
    }
}

extension CreatePolicyInput: CustomDebugStringConvertible {
    public var debugDescription: String {
        "CreatePolicyInput(policyDocument: \(String(describing: policyDocument)), policyName: \(String(describing: policyName)), tags: \(String(describing: tags)))"}
}
