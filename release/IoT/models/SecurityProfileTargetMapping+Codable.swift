// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SecurityProfileTargetMapping: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case securityProfileIdentifier
        case target
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let securityProfileIdentifier = securityProfileIdentifier {
            try encodeContainer.encode(securityProfileIdentifier, forKey: .securityProfileIdentifier)
        }
        if let target = target {
            try encodeContainer.encode(target, forKey: .target)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let securityProfileIdentifierDecoded = try containerValues.decodeIfPresent(SecurityProfileIdentifier.self, forKey: .securityProfileIdentifier)
        securityProfileIdentifier = securityProfileIdentifierDecoded
        let targetDecoded = try containerValues.decodeIfPresent(SecurityProfileTarget.self, forKey: .target)
        target = targetDecoded
    }
}
