// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateKeysAndCertificateOutputResponseBody: Equatable {
    public let certificateArn: String?
    public let certificateId: String?
    public let certificatePem: String?
    public let keyPair: KeyPair?
}

extension CreateKeysAndCertificateOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case certificateArn
        case certificateId
        case certificatePem
        case keyPair
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let certificateArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .certificateArn)
        certificateArn = certificateArnDecoded
        let certificateIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .certificateId)
        certificateId = certificateIdDecoded
        let certificatePemDecoded = try containerValues.decodeIfPresent(String.self, forKey: .certificatePem)
        certificatePem = certificatePemDecoded
        let keyPairDecoded = try containerValues.decodeIfPresent(KeyPair.self, forKey: .keyPair)
        keyPair = keyPairDecoded
    }
}
