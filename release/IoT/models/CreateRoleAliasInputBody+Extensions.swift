// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateRoleAliasInputBody: Equatable {
    public let roleArn: String?
    public let credentialDurationSeconds: Int?
    public let tags: [Tag]?
}

extension CreateRoleAliasInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case credentialDurationSeconds
        case roleArn
        case tags
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let roleArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
        let credentialDurationSecondsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .credentialDurationSeconds)
        credentialDurationSeconds = credentialDurationSecondsDecoded
        let tagsContainer = try containerValues.decodeIfPresent([Tag?].self, forKey: .tags)
        var tagsDecoded0:[Tag]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [Tag]()
            for structure0 in tagsContainer {
                if let structure0 = structure0 {
                    tagsDecoded0?.append(structure0)
                }
            }
        }
        tags = tagsDecoded0
    }
}
