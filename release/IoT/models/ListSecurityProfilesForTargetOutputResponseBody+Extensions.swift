// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSecurityProfilesForTargetOutputResponseBody: Equatable {
    public let securityProfileTargetMappings: [SecurityProfileTargetMapping]?
    public let nextToken: String?
}

extension ListSecurityProfilesForTargetOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case securityProfileTargetMappings
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let securityProfileTargetMappingsContainer = try containerValues.decodeIfPresent([SecurityProfileTargetMapping?].self, forKey: .securityProfileTargetMappings)
        var securityProfileTargetMappingsDecoded0:[SecurityProfileTargetMapping]? = nil
        if let securityProfileTargetMappingsContainer = securityProfileTargetMappingsContainer {
            securityProfileTargetMappingsDecoded0 = [SecurityProfileTargetMapping]()
            for structure0 in securityProfileTargetMappingsContainer {
                if let structure0 = structure0 {
                    securityProfileTargetMappingsDecoded0?.append(structure0)
                }
            }
        }
        securityProfileTargetMappings = securityProfileTargetMappingsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
