// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Sends an input to an AWS IoT Events detector.</p>
public struct IotEventsAction: Equatable {
    /// <p>Whether to process the event actions as a batch. The default value is
    ///             <code>false</code>.</p>
    ///          <p>When <code>batchMode</code> is <code>true</code>, you can't specify a
    ///             <code>messageId</code>. </p>
    ///          <p>When <code>batchMode</code> is <code>true</code> and the rule SQL statement evaluates
    ///          to an Array, each Array element is treated as a separate message when it's sent to AWS IoT
    ///          Events by calling <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_iotevents-data_BatchPutMessage.html">
    ///                <code>BatchPutMessage</code>
    ///             </a>.  The resulting array can't have more
    ///          than 10 messages.</p>
    public let batchMode: Bool?
    /// <p>The name of the AWS IoT Events input.</p>
    public let inputName: String?
    /// <p>The ID of the message. The default <code>messageId</code> is a new UUID value.</p>
    ///          <p>When <code>batchMode</code> is <code>true</code>, you can't specify a
    ///         <code>messageId</code>--a new UUID value will be assigned.</p>
    ///          <p>Assign a value to this property to ensure that only one input (message) with a given
    ///             <code>messageId</code> will be processed by an AWS IoT Events detector.</p>
    public let messageId: String?
    /// <p>The ARN of the role that grants AWS IoT permission to send an input to an AWS IoT
    ///       Events detector. ("Action":"iotevents:BatchPutMessage").</p>
    public let roleArn: String?

    public init (
        batchMode: Bool? = nil,
        inputName: String? = nil,
        messageId: String? = nil,
        roleArn: String? = nil
    )
    {
        self.batchMode = batchMode
        self.inputName = inputName
        self.messageId = messageId
        self.roleArn = roleArn
    }
}

extension IotEventsAction: CustomDebugStringConvertible {
    public var debugDescription: String {
        "IotEventsAction(batchMode: \(String(describing: batchMode)), inputName: \(String(describing: inputName)), messageId: \(String(describing: messageId)), roleArn: \(String(describing: roleArn)))"}
}
