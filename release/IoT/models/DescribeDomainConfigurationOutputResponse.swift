// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DescribeDomainConfigurationOutputResponse: Equatable {
    /// <p>An object that specifies the authorization service for a domain.</p>
    public let authorizerConfig: AuthorizerConfig?
    /// <p>The ARN of the domain configuration.</p>
    public let domainConfigurationArn: String?
    /// <p>The name of the domain configuration.</p>
    public let domainConfigurationName: String?
    /// <p>A Boolean value that specifies the current state of the domain configuration.</p>
    public let domainConfigurationStatus: DomainConfigurationStatus?
    /// <p>The name of the domain.</p>
    public let domainName: String?
    /// <p>The type of the domain.</p>
    public let domainType: DomainType?
    /// <p>The date and time the domain configuration's status was last changed.</p>
    public let lastStatusChangeDate: Date?
    /// <p>A list containing summary information about the server certificate included in the domain configuration.</p>
    public let serverCertificates: [ServerCertificateSummary]?
    /// <p>The type of service delivered by the endpoint.</p>
    public let serviceType: ServiceType?

    public init (
        authorizerConfig: AuthorizerConfig? = nil,
        domainConfigurationArn: String? = nil,
        domainConfigurationName: String? = nil,
        domainConfigurationStatus: DomainConfigurationStatus? = nil,
        domainName: String? = nil,
        domainType: DomainType? = nil,
        lastStatusChangeDate: Date? = nil,
        serverCertificates: [ServerCertificateSummary]? = nil,
        serviceType: ServiceType? = nil
    )
    {
        self.authorizerConfig = authorizerConfig
        self.domainConfigurationArn = domainConfigurationArn
        self.domainConfigurationName = domainConfigurationName
        self.domainConfigurationStatus = domainConfigurationStatus
        self.domainName = domainName
        self.domainType = domainType
        self.lastStatusChangeDate = lastStatusChangeDate
        self.serverCertificates = serverCertificates
        self.serviceType = serviceType
    }
}

extension DescribeDomainConfigurationOutputResponse: CustomDebugStringConvertible {
    public var debugDescription: String {
        "DescribeDomainConfigurationOutputResponse(authorizerConfig: \(String(describing: authorizerConfig)), domainConfigurationArn: \(String(describing: domainConfigurationArn)), domainConfigurationName: \(String(describing: domainConfigurationName)), domainConfigurationStatus: \(String(describing: domainConfigurationStatus)), domainName: \(String(describing: domainName)), domainType: \(String(describing: domainType)), lastStatusChangeDate: \(String(describing: lastStatusChangeDate)), serverCertificates: \(String(describing: serverCertificates)), serviceType: \(String(describing: serviceType)))"}
}
