// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The input for the CreateTopicRule operation.</p>
public struct CreateTopicRuleInput: Equatable {
    /// <p>The name of the rule.</p>
    public let ruleName: String?
    /// <p>Metadata which can be used to manage the topic rule.</p>
    ///          <note>
    ///             <p>For URI Request parameters use format: ...key1=value1&key2=value2...</p>
    ///             <p>For the CLI command-line parameter use format: --tags
    ///             "key1=value1&key2=value2..."</p>
    ///             <p>For the cli-input-json file use format: "tags":
    ///             "key1=value1&key2=value2..."</p>
    ///          </note>
    public let tags: String?
    /// <p>The rule payload.</p>
    public let topicRulePayload: TopicRulePayload?

    public init (
        ruleName: String? = nil,
        tags: String? = nil,
        topicRulePayload: TopicRulePayload? = nil
    )
    {
        self.ruleName = ruleName
        self.tags = tags
        self.topicRulePayload = topicRulePayload
    }
}

extension CreateTopicRuleInput: CustomDebugStringConvertible {
    public var debugDescription: String {
        "CreateTopicRuleInput(ruleName: \(String(describing: ruleName)), tags: \(String(describing: tags)), topicRulePayload: \(String(describing: topicRulePayload)))"}
}
