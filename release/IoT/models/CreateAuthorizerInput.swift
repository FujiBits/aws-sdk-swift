// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateAuthorizerInput: Equatable {
    /// <p>The ARN of the authorizer's Lambda function.</p>
    public let authorizerFunctionArn: String?
    /// <p>The authorizer name.</p>
    public let authorizerName: String?
    /// <p>Specifies whether AWS IoT validates the token signature in an authorization request.</p>
    public let signingDisabled: Bool?
    /// <p>The status of the create authorizer request.</p>
    public let status: AuthorizerStatus?
    /// <p>Metadata which can be used to manage the custom authorizer.</p>
    ///          <note>
    ///             <p>For URI Request parameters use format: ...key1=value1&key2=value2...</p>
    ///             <p>For the CLI command-line parameter use format: &&tags
    ///             "key1=value1&key2=value2..."</p>
    ///             <p>For the cli-input-json file use format: "tags":
    ///             "key1=value1&key2=value2..."</p>
    ///          </note>
    public let tags: [Tag]?
    /// <p>The name of the token key used to extract the token from the HTTP headers.</p>
    public let tokenKeyName: String?
    /// <p>The public keys used to verify the digital signature returned by your custom
    ///          authentication service.</p>
    public let tokenSigningPublicKeys: [String:String]?

    public init (
        authorizerFunctionArn: String? = nil,
        authorizerName: String? = nil,
        signingDisabled: Bool? = nil,
        status: AuthorizerStatus? = nil,
        tags: [Tag]? = nil,
        tokenKeyName: String? = nil,
        tokenSigningPublicKeys: [String:String]? = nil
    )
    {
        self.authorizerFunctionArn = authorizerFunctionArn
        self.authorizerName = authorizerName
        self.signingDisabled = signingDisabled
        self.status = status
        self.tags = tags
        self.tokenKeyName = tokenKeyName
        self.tokenSigningPublicKeys = tokenSigningPublicKeys
    }
}

extension CreateAuthorizerInput: CustomDebugStringConvertible {
    public var debugDescription: String {
        "CreateAuthorizerInput(authorizerFunctionArn: \(String(describing: authorizerFunctionArn)), authorizerName: \(String(describing: authorizerName)), signingDisabled: \(String(describing: signingDisabled)), status: \(String(describing: status)), tags: \(String(describing: tags)), tokenKeyName: \(String(describing: tokenKeyName)), tokenSigningPublicKeys: \(String(describing: tokenSigningPublicKeys)))"}
}
