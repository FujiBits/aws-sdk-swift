// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateThingInputBody: Equatable {
    public let thingTypeName: String?
    public let attributePayload: AttributePayload?
    public let billingGroupName: String?
}

extension CreateThingInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case attributePayload
        case billingGroupName
        case thingTypeName
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let thingTypeNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .thingTypeName)
        thingTypeName = thingTypeNameDecoded
        let attributePayloadDecoded = try containerValues.decodeIfPresent(AttributePayload.self, forKey: .attributePayload)
        attributePayload = attributePayloadDecoded
        let billingGroupNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .billingGroupName)
        billingGroupName = billingGroupNameDecoded
    }
}
