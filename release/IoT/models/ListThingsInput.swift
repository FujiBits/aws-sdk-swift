// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The input for the ListThings operation.</p>
public struct ListThingsInput: Equatable {
    /// <p>The attribute name used to search for things.</p>
    public let attributeName: String?
    /// <p>The attribute value used to search for things.</p>
    public let attributeValue: String?
    /// <p>The maximum number of results to return in this operation.</p>
    public let maxResults: Int?
    /// <p>To retrieve the next set of results, the <code>nextToken</code>
    /// 			value from a previous response; otherwise <b>null</b> to receive
    /// 			the first set of results.</p>
    public let nextToken: String?
    /// <p>The name of the thing type used to search for things.</p>
    public let thingTypeName: String?
    /// <p>When <code>true</code>, the action returns the thing resources with attribute values
    ///                      that start with the <code>attributeValue</code> provided.</p>
    ///             <p>When <code>false</code>, or not present, the action returns only the thing
    /// 			resources with attribute values that match the entire <code>attributeValue</code>
    /// 			provided. </p>
    public let usePrefixAttributeValue: Bool

    public init (
        attributeName: String? = nil,
        attributeValue: String? = nil,
        maxResults: Int? = nil,
        nextToken: String? = nil,
        thingTypeName: String? = nil,
        usePrefixAttributeValue: Bool = false
    )
    {
        self.attributeName = attributeName
        self.attributeValue = attributeValue
        self.maxResults = maxResults
        self.nextToken = nextToken
        self.thingTypeName = thingTypeName
        self.usePrefixAttributeValue = usePrefixAttributeValue
    }
}

extension ListThingsInput: CustomDebugStringConvertible {
    public var debugDescription: String {
        "ListThingsInput(attributeName: \(String(describing: attributeName)), attributeValue: \(String(describing: attributeValue)), maxResults: \(String(describing: maxResults)), nextToken: \(String(describing: nextToken)), thingTypeName: \(String(describing: thingTypeName)), usePrefixAttributeValue: \(String(describing: usePrefixAttributeValue)))"}
}
