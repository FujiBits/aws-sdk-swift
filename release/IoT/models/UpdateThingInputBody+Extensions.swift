// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateThingInputBody: Equatable {
    public let thingTypeName: String?
    public let attributePayload: AttributePayload?
    public let expectedVersion: Int?
    public let removeThingType: Bool
}

extension UpdateThingInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case attributePayload
        case expectedVersion
        case removeThingType
        case thingTypeName
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let thingTypeNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .thingTypeName)
        thingTypeName = thingTypeNameDecoded
        let attributePayloadDecoded = try containerValues.decodeIfPresent(AttributePayload.self, forKey: .attributePayload)
        attributePayload = attributePayloadDecoded
        let expectedVersionDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .expectedVersion)
        expectedVersion = expectedVersionDecoded
        let removeThingTypeDecoded = try containerValues.decode(Bool.self, forKey: .removeThingType)
        removeThingType = removeThingTypeDecoded
    }
}
