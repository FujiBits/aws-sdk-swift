// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct ListThingsInputHeadersMiddleware: Middleware {
    public let id: String = "ListThingsInputHeadersMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<ListThingsInput>,
                  next: H) -> Swift.Result<OperationOutput<ListThingsOutputResponse>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<ListThingsInput>
    public typealias MOutput = OperationOutput<ListThingsOutputResponse>
    public typealias Context = ClientRuntime.HttpContext
    public typealias MError = SdkError<ListThingsOutputError>
}

public struct ListThingsInputQueryItemMiddleware: Middleware {
    public let id: String = "ListThingsInputQueryItemMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<ListThingsInput>,
                  next: H) -> Swift.Result<OperationOutput<ListThingsOutputResponse>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        let usePrefixAttributeValueQueryItem = URLQueryItem(name: "usePrefixAttributeValue".urlPercentEncoding(), value: String(input.operationInput.usePrefixAttributeValue).urlPercentEncoding())
        input.builder.withQueryItem(usePrefixAttributeValueQueryItem)
        if let attributeValue = input.operationInput.attributeValue {
            let attributeValueQueryItem = URLQueryItem(name: "attributeValue".urlPercentEncoding(), value: String(attributeValue).urlPercentEncoding())
            input.builder.withQueryItem(attributeValueQueryItem)
        }
        if let thingTypeName = input.operationInput.thingTypeName {
            let thingTypeNameQueryItem = URLQueryItem(name: "thingTypeName".urlPercentEncoding(), value: String(thingTypeName).urlPercentEncoding())
            input.builder.withQueryItem(thingTypeNameQueryItem)
        }
        if let nextToken = input.operationInput.nextToken {
            let nextTokenQueryItem = URLQueryItem(name: "nextToken".urlPercentEncoding(), value: String(nextToken).urlPercentEncoding())
            input.builder.withQueryItem(nextTokenQueryItem)
        }
        if let maxResults = input.operationInput.maxResults {
            let maxResultsQueryItem = URLQueryItem(name: "maxResults".urlPercentEncoding(), value: String(maxResults).urlPercentEncoding())
            input.builder.withQueryItem(maxResultsQueryItem)
        }
        if let attributeName = input.operationInput.attributeName {
            let attributeNameQueryItem = URLQueryItem(name: "attributeName".urlPercentEncoding(), value: String(attributeName).urlPercentEncoding())
            input.builder.withQueryItem(attributeNameQueryItem)
        }
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<ListThingsInput>
    public typealias MOutput = OperationOutput<ListThingsOutputResponse>
    public typealias Context = ClientRuntime.HttpContext
    public typealias MError = SdkError<ListThingsOutputError>
}

extension ListThingsInput: Encodable, Reflection {

    public func encode(to encoder: Encoder) throws {
    }
}
