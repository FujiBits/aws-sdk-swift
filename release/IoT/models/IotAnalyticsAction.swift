// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Sends message data to an AWS IoT Analytics channel.</p>
public struct IotAnalyticsAction: Equatable {
    /// <p>Whether to process the action as a batch. The default value is
    ///          <code>false</code>.</p>
    ///          <p>When <code>batchMode</code> is <code>true</code> and the rule SQL statement evaluates
    ///          to an Array, each Array element is delivered as a separate message when passed by <a href="https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_BatchPutMessage.html">
    ///                <code>BatchPutMessage</code>
    ///             </a> to the AWS IoT Analytics channel. The resulting array can't have more
    ///          than 100 messages.</p>
    public let batchMode: Bool?
    /// <p>(deprecated) The ARN of the IoT Analytics channel to which message data will be
    ///          sent.</p>
    public let channelArn: String?
    /// <p>The name of the IoT Analytics channel to which message data will be sent.</p>
    public let channelName: String?
    /// <p>The ARN of the role which has a policy that grants IoT Analytics permission to send
    ///          message data via IoT Analytics (iotanalytics:BatchPutMessage).</p>
    public let roleArn: String?

    public init (
        batchMode: Bool? = nil,
        channelArn: String? = nil,
        channelName: String? = nil,
        roleArn: String? = nil
    )
    {
        self.batchMode = batchMode
        self.channelArn = channelArn
        self.channelName = channelName
        self.roleArn = roleArn
    }
}

extension IotAnalyticsAction: CustomDebugStringConvertible {
    public var debugDescription: String {
        "IotAnalyticsAction(batchMode: \(String(describing: batchMode)), channelArn: \(String(describing: channelArn)), channelName: \(String(describing: channelName)), roleArn: \(String(describing: roleArn)))"}
}
