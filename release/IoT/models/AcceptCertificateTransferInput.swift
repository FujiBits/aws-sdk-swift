// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The input for the AcceptCertificateTransfer operation.</p>
public struct AcceptCertificateTransferInput: Equatable {
    /// <p>The ID of the certificate. (The last part of the certificate ARN contains the
    ///          certificate ID.)</p>
    public let certificateId: String?
    /// <p>Specifies whether the certificate is active.</p>
    public let setAsActive: Bool

    public init (
        certificateId: String? = nil,
        setAsActive: Bool = false
    )
    {
        self.certificateId = certificateId
        self.setAsActive = setAsActive
    }
}

extension AcceptCertificateTransferInput: CustomDebugStringConvertible {
    public var debugDescription: String {
        "AcceptCertificateTransferInput(certificateId: \(String(describing: certificateId)), setAsActive: \(String(describing: setAsActive)))"}
}
