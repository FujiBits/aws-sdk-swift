// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct ListAuditTasksInput: Equatable {
    /// <p>The end of the time period.</p>
    public let endTime: Date?
    /// <p>The maximum number of results to return at one time. The default is 25.</p>
    public let maxResults: Int?
    /// <p>The token for the next set of results.</p>
    public let nextToken: String?
    /// <p>The beginning of the time period. Audit information is retained for a
    ///               limited time (90 days). Requesting a start time prior to what is retained
    ///               results in an "InvalidRequestException".</p>
    public let startTime: Date?
    /// <p>A filter to limit the output to audits with the specified completion
    ///             status: can be one of "IN_PROGRESS", "COMPLETED", "FAILED", or "CANCELED".</p>
    public let taskStatus: AuditTaskStatus?
    /// <p>A filter to limit the output to the specified type of audit: can be one of
    ///             "ON_DEMAND_AUDIT_TASK" or "SCHEDULED__AUDIT_TASK".</p>
    public let taskType: AuditTaskType?

    public init (
        endTime: Date? = nil,
        maxResults: Int? = nil,
        nextToken: String? = nil,
        startTime: Date? = nil,
        taskStatus: AuditTaskStatus? = nil,
        taskType: AuditTaskType? = nil
    )
    {
        self.endTime = endTime
        self.maxResults = maxResults
        self.nextToken = nextToken
        self.startTime = startTime
        self.taskStatus = taskStatus
        self.taskType = taskType
    }
}

extension ListAuditTasksInput: CustomDebugStringConvertible {
    public var debugDescription: String {
        "ListAuditTasksInput(endTime: \(String(describing: endTime)), maxResults: \(String(describing: maxResults)), nextToken: \(String(describing: nextToken)), startTime: \(String(describing: startTime)), taskStatus: \(String(describing: taskStatus)), taskType: \(String(describing: taskType)))"}
}
