// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct TestAuthorizationOutputResponseBody: Equatable {
    public let authResults: [AuthResult]?
}

extension TestAuthorizationOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case authResults
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let authResultsContainer = try containerValues.decodeIfPresent([AuthResult?].self, forKey: .authResults)
        var authResultsDecoded0:[AuthResult]? = nil
        if let authResultsContainer = authResultsContainer {
            authResultsDecoded0 = [AuthResult]()
            for structure0 in authResultsContainer {
                if let structure0 = structure0 {
                    authResultsDecoded0?.append(structure0)
                }
            }
        }
        authResults = authResultsDecoded0
    }
}
