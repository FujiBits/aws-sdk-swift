// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Describes an action that writes data to an Amazon Kinesis Firehose stream.</p>
public struct FirehoseAction: Equatable {
    /// <p>Whether to deliver the Kinesis Data Firehose stream as a batch by using <a href="https://docs.aws.amazon.com/firehose/latest/APIReference/API_PutRecordBatch.html">
    ///                <code>PutRecordBatch</code>
    ///             </a>.  The default value is
    ///          <code>false</code>.</p>
    ///          <p>When <code>batchMode</code> is <code>true</code> and the rule's SQL statement
    ///          evaluates to an Array, each Array element forms one record in the <a href="https://docs.aws.amazon.com/firehose/latest/APIReference/API_PutRecordBatch.html">
    ///                <code>PutRecordBatch</code>
    ///             </a> request. The resulting array can't have more
    ///          than 500 records.</p>
    public let batchMode: Bool?
    /// <p>The delivery stream name.</p>
    public let deliveryStreamName: String?
    /// <p>The IAM role that grants access to the Amazon Kinesis Firehose stream.</p>
    public let roleArn: String?
    /// <p>A character separator that will be used to separate records written to the Firehose
    ///          stream. Valid values are: '\n' (newline), '\t' (tab), '\r\n' (Windows newline), ','
    ///          (comma).</p>
    public let separator: String?

    public init (
        batchMode: Bool? = nil,
        deliveryStreamName: String? = nil,
        roleArn: String? = nil,
        separator: String? = nil
    )
    {
        self.batchMode = batchMode
        self.deliveryStreamName = deliveryStreamName
        self.roleArn = roleArn
        self.separator = separator
    }
}

extension FirehoseAction: CustomDebugStringConvertible {
    public var debugDescription: String {
        "FirehoseAction(batchMode: \(String(describing: batchMode)), deliveryStreamName: \(String(describing: deliveryStreamName)), roleArn: \(String(describing: roleArn)), separator: \(String(describing: separator)))"}
}
