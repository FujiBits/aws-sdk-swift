// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The properties of the thing, including thing name, thing type name, and a list of thing
/// 			attributes.</p>
public struct ThingAttribute: Equatable {
    /// <p>A list of thing attributes which are name-value pairs.</p>
    public let attributes: [String:String]?
    /// <p>The thing ARN.</p>
    public let thingArn: String?
    /// <p>The name of the thing.</p>
    public let thingName: String?
    /// <p>The name of the thing type, if the thing has been associated with a type.</p>
    public let thingTypeName: String?
    /// <p>The version of the thing record in the registry.</p>
    public let version: Int

    public init (
        attributes: [String:String]? = nil,
        thingArn: String? = nil,
        thingName: String? = nil,
        thingTypeName: String? = nil,
        version: Int = 0
    )
    {
        self.attributes = attributes
        self.thingArn = thingArn
        self.thingName = thingName
        self.thingTypeName = thingTypeName
        self.version = version
    }
}

extension ThingAttribute: CustomDebugStringConvertible {
    public var debugDescription: String {
        "ThingAttribute(attributes: \(String(describing: attributes)), thingArn: \(String(describing: thingArn)), thingName: \(String(describing: thingName)), thingTypeName: \(String(describing: thingTypeName)), version: \(String(describing: version)))"}
}
