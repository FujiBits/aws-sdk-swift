// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The input for the DeprecateThingType operation.</p>
public struct DeprecateThingTypeInput: Equatable {
    /// <p>The name of the thing type to deprecate.</p>
    public let thingTypeName: String?
    /// <p>Whether to undeprecate a deprecated thing type. If <b>true</b>, the thing type will not be deprecated anymore and you can
    /// 			associate it with things.</p>
    public let undoDeprecate: Bool

    public init (
        thingTypeName: String? = nil,
        undoDeprecate: Bool = false
    )
    {
        self.thingTypeName = thingTypeName
        self.undoDeprecate = undoDeprecate
    }
}

extension DeprecateThingTypeInput: CustomDebugStringConvertible {
    public var debugDescription: String {
        "DeprecateThingTypeInput(thingTypeName: \(String(describing: thingTypeName)), undoDeprecate: \(String(describing: undoDeprecate)))"}
}
