// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension JobTemplateSummary: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case createdAt
        case description
        case jobTemplateArn
        case jobTemplateId
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let createdAt = createdAt {
            try encodeContainer.encode(createdAt.timeIntervalSince1970, forKey: .createdAt)
        }
        if let description = description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let jobTemplateArn = jobTemplateArn {
            try encodeContainer.encode(jobTemplateArn, forKey: .jobTemplateArn)
        }
        if let jobTemplateId = jobTemplateId {
            try encodeContainer.encode(jobTemplateId, forKey: .jobTemplateId)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let jobTemplateArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .jobTemplateArn)
        jobTemplateArn = jobTemplateArnDecoded
        let jobTemplateIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .jobTemplateId)
        jobTemplateId = jobTemplateIdDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .description)
        description = descriptionDecoded
        let createdAtDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .createdAt)
        createdAt = createdAtDecoded
    }
}
