// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension JobExecutionStatusDetails: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case detailsMap
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let detailsMap = detailsMap {
            var detailsMapContainer = encodeContainer.nestedContainer(keyedBy: Key.self, forKey: .detailsMap)
            for (dictKey0, detailsmap0) in detailsMap {
                try detailsMapContainer.encode(detailsmap0, forKey: Key(stringValue: dictKey0))
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let detailsMapContainer = try containerValues.decodeIfPresent([String: String?].self, forKey: .detailsMap)
        var detailsMapDecoded0: [String:String]? = nil
        if let detailsMapContainer = detailsMapContainer {
            detailsMapDecoded0 = [String:String]()
            for (key0, detailsvalue0) in detailsMapContainer {
                if let detailsvalue0 = detailsvalue0 {
                    detailsMapDecoded0?[key0] = detailsvalue0
                }
            }
        }
        detailsMap = detailsMapDecoded0
    }
}
