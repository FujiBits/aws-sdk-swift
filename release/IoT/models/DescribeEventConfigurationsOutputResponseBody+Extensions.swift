// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeEventConfigurationsOutputResponseBody: Equatable {
    public let eventConfigurations: [String:Configuration]?
    public let creationDate: Date?
    public let lastModifiedDate: Date?
}

extension DescribeEventConfigurationsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case creationDate
        case eventConfigurations
        case lastModifiedDate
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let eventConfigurationsContainer = try containerValues.decodeIfPresent([String: Configuration?].self, forKey: .eventConfigurations)
        var eventConfigurationsDecoded0: [String:Configuration]? = nil
        if let eventConfigurationsContainer = eventConfigurationsContainer {
            eventConfigurationsDecoded0 = [String:Configuration]()
            for (key0, configuration0) in eventConfigurationsContainer {
                if let configuration0 = configuration0 {
                    eventConfigurationsDecoded0?[key0] = configuration0
                }
            }
        }
        eventConfigurations = eventConfigurationsDecoded0
        let creationDateDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .creationDate)
        creationDate = creationDateDecoded
        let lastModifiedDateDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .lastModifiedDate)
        lastModifiedDate = lastModifiedDateDecoded
    }
}
