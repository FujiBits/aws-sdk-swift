// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateOTAUpdateInput: Equatable {
    /// <p>A list of additional OTA update parameters which are name-value pairs.</p>
    public let additionalParameters: [String:String]?
    /// <p>The criteria that determine when and how a job abort takes place.</p>
    public let awsJobAbortConfig: AwsJobAbortConfig?
    /// <p>Configuration for the rollout of OTA updates.</p>
    public let awsJobExecutionsRolloutConfig: AwsJobExecutionsRolloutConfig?
    /// <p>Configuration information for pre-signed URLs.</p>
    public let awsJobPresignedUrlConfig: AwsJobPresignedUrlConfig?
    /// <p>Specifies the amount of time each device has to finish its execution of the job.  A timer is
    ///             started when the job execution status is set to <code>IN_PROGRESS</code>. If the job execution
    ///             status is not set to another terminal state before the timer expires, it will be automatically
    ///             set to <code>TIMED_OUT</code>.</p>
    public let awsJobTimeoutConfig: AwsJobTimeoutConfig?
    /// <p>The description of the OTA update.</p>
    public let description: String?
    /// <p>The files to be streamed by the OTA update.</p>
    public let files: [OTAUpdateFile]?
    /// <p>The ID of the OTA update to be created.</p>
    public let otaUpdateId: String?
    /// <p>The protocol used to transfer the OTA update image. Valid values are [HTTP], [MQTT], [HTTP, MQTT]. When both
    ///            HTTP and MQTT are specified, the target device can choose the protocol.</p>
    public let protocols: [`Protocol`]?
    /// <p>The IAM role that grants AWS IoT access to the Amazon S3, AWS IoT jobs and AWS Code Signing resources
    ///             to create an OTA update job.</p>
    public let roleArn: String?
    /// <p>Metadata which can be used to manage updates.</p>
    public let tags: [Tag]?
    /// <p>Specifies whether the update will continue to run (CONTINUOUS), or will be complete after all the things
    ///             specified as targets have completed the update (SNAPSHOT). If continuous, the update may also be run on a
    ///             thing when a change is detected in a target. For example, an update will run on a thing when the thing is
    ///             added to a target group, even after the update was completed by all things originally in the group. Valid
    ///             values: CONTINUOUS | SNAPSHOT.</p>
    public let targetSelection: TargetSelection?
    /// <p>The devices targeted to receive OTA updates.</p>
    public let targets: [String]?

    public init (
        additionalParameters: [String:String]? = nil,
        awsJobAbortConfig: AwsJobAbortConfig? = nil,
        awsJobExecutionsRolloutConfig: AwsJobExecutionsRolloutConfig? = nil,
        awsJobPresignedUrlConfig: AwsJobPresignedUrlConfig? = nil,
        awsJobTimeoutConfig: AwsJobTimeoutConfig? = nil,
        description: String? = nil,
        files: [OTAUpdateFile]? = nil,
        otaUpdateId: String? = nil,
        protocols: [`Protocol`]? = nil,
        roleArn: String? = nil,
        tags: [Tag]? = nil,
        targetSelection: TargetSelection? = nil,
        targets: [String]? = nil
    )
    {
        self.additionalParameters = additionalParameters
        self.awsJobAbortConfig = awsJobAbortConfig
        self.awsJobExecutionsRolloutConfig = awsJobExecutionsRolloutConfig
        self.awsJobPresignedUrlConfig = awsJobPresignedUrlConfig
        self.awsJobTimeoutConfig = awsJobTimeoutConfig
        self.description = description
        self.files = files
        self.otaUpdateId = otaUpdateId
        self.protocols = protocols
        self.roleArn = roleArn
        self.tags = tags
        self.targetSelection = targetSelection
        self.targets = targets
    }
}

extension CreateOTAUpdateInput: CustomDebugStringConvertible {
    public var debugDescription: String {
        "CreateOTAUpdateInput(additionalParameters: \(String(describing: additionalParameters)), awsJobAbortConfig: \(String(describing: awsJobAbortConfig)), awsJobExecutionsRolloutConfig: \(String(describing: awsJobExecutionsRolloutConfig)), awsJobPresignedUrlConfig: \(String(describing: awsJobPresignedUrlConfig)), awsJobTimeoutConfig: \(String(describing: awsJobTimeoutConfig)), description: \(String(describing: description)), files: \(String(describing: files)), otaUpdateId: \(String(describing: otaUpdateId)), protocols: \(String(describing: protocols)), roleArn: \(String(describing: roleArn)), tags: \(String(describing: tags)), targetSelection: \(String(describing: targetSelection)), targets: \(String(describing: targets)))"}
}
