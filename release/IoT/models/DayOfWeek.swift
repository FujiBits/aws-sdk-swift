// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum DayOfWeek {
    case fri
    case mon
    case sat
    case sun
    case thu
    case tue
    case wed
    case sdkUnknown(String)
}

extension DayOfWeek : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [DayOfWeek] {
        return [
            .fri,
            .mon,
            .sat,
            .sun,
            .thu,
            .tue,
            .wed,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .fri: return "FRI"
        case .mon: return "MON"
        case .sat: return "SAT"
        case .sun: return "SUN"
        case .thu: return "THU"
        case .tue: return "TUE"
        case .wed: return "WED"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = DayOfWeek(rawValue: rawValue) ?? DayOfWeek.sdkUnknown(rawValue)
    }
}
