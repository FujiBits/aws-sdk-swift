// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateProvisioningTemplateInput: Equatable {
    /// <p>The description of the fleet provisioning template.</p>
    public let description: String?
    /// <p>True to enable the fleet provisioning template, otherwise false.</p>
    public let enabled: Bool
    /// <p>Creates a pre-provisioning hook template.</p>
    public let preProvisioningHook: ProvisioningHook?
    /// <p>The role ARN for the role associated with the fleet provisioning template. This IoT role
    ///          grants permission to provision a device.</p>
    public let provisioningRoleArn: String?
    /// <p>Metadata which can be used to manage the fleet provisioning template.</p>
    ///          <note>
    ///             <p>For URI Request parameters use format: ...key1=value1&key2=value2...</p>
    ///             <p>For the CLI command-line parameter use format: &&tags
    ///             "key1=value1&key2=value2..."</p>
    ///             <p>For the cli-input-json file use format: "tags":
    ///             "key1=value1&key2=value2..."</p>
    ///          </note>
    public let tags: [Tag]?
    /// <p>The JSON formatted contents of the fleet provisioning template.</p>
    public let templateBody: String?
    /// <p>The name of the fleet provisioning template.</p>
    public let templateName: String?

    public init (
        description: String? = nil,
        enabled: Bool = false,
        preProvisioningHook: ProvisioningHook? = nil,
        provisioningRoleArn: String? = nil,
        tags: [Tag]? = nil,
        templateBody: String? = nil,
        templateName: String? = nil
    )
    {
        self.description = description
        self.enabled = enabled
        self.preProvisioningHook = preProvisioningHook
        self.provisioningRoleArn = provisioningRoleArn
        self.tags = tags
        self.templateBody = templateBody
        self.templateName = templateName
    }
}

extension CreateProvisioningTemplateInput: CustomDebugStringConvertible {
    public var debugDescription: String {
        "CreateProvisioningTemplateInput(description: \(String(describing: description)), enabled: \(String(describing: enabled)), preProvisioningHook: \(String(describing: preProvisioningHook)), provisioningRoleArn: \(String(describing: provisioningRoleArn)), tags: \(String(describing: tags)), templateBody: \(String(describing: templateBody)), templateName: \(String(describing: templateName)))"}
}
