// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListArtifactsOutputResponseBody: Equatable {
    public let artifacts: [Artifact]?
    public let nextToken: String?
}

extension ListArtifactsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case artifacts
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let artifactsContainer = try containerValues.decodeIfPresent([Artifact?].self, forKey: .artifacts)
        var artifactsDecoded0:[Artifact]? = nil
        if let artifactsContainer = artifactsContainer {
            artifactsDecoded0 = [Artifact]()
            for structure0 in artifactsContainer {
                if let structure0 = structure0 {
                    artifactsDecoded0?.append(structure0)
                }
            }
        }
        artifacts = artifactsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
