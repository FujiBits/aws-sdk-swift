// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListRemoteAccessSessionsOutputResponseBody: Equatable {
    public let remoteAccessSessions: [RemoteAccessSession]?
    public let nextToken: String?
}

extension ListRemoteAccessSessionsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case remoteAccessSessions
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let remoteAccessSessionsContainer = try containerValues.decodeIfPresent([RemoteAccessSession?].self, forKey: .remoteAccessSessions)
        var remoteAccessSessionsDecoded0:[RemoteAccessSession]? = nil
        if let remoteAccessSessionsContainer = remoteAccessSessionsContainer {
            remoteAccessSessionsDecoded0 = [RemoteAccessSession]()
            for structure0 in remoteAccessSessionsContainer {
                if let structure0 = structure0 {
                    remoteAccessSessionsDecoded0?.append(structure0)
                }
            }
        }
        remoteAccessSessions = remoteAccessSessionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
