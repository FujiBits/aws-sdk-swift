// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum AgentParameterField {
    /// Maximum stack depth to be captured by the CodeGuru Profiler.
    case maxStackDepth
    /// Percentage of memory to be used by CodeGuru profiler. Minimum of 30MB is required for the agent.
    case memoryUsageLimitPercent
    /// Minimum time in milliseconds between sending reports.
    case minimumTimeForReportingInMilliseconds
    /// Reporting interval in milliseconds used to report profiles.
    case reportingIntervalInMilliseconds
    /// Sampling interval in milliseconds used to sample profiles.
    case samplingIntervalInMilliseconds
    case sdkUnknown(String)
}

extension AgentParameterField : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [AgentParameterField] {
        return [
            .maxStackDepth,
            .memoryUsageLimitPercent,
            .minimumTimeForReportingInMilliseconds,
            .reportingIntervalInMilliseconds,
            .samplingIntervalInMilliseconds,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .maxStackDepth: return "MaxStackDepth"
        case .memoryUsageLimitPercent: return "MemoryUsageLimitPercent"
        case .minimumTimeForReportingInMilliseconds: return "MinimumTimeForReportingInMilliseconds"
        case .reportingIntervalInMilliseconds: return "ReportingIntervalInMilliseconds"
        case .samplingIntervalInMilliseconds: return "SamplingIntervalInMilliseconds"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = AgentParameterField(rawValue: rawValue) ?? AgentParameterField.sdkUnknown(rawValue)
    }
}
