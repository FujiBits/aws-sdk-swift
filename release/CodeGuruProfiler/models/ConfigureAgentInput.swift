// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The structure representing the configureAgentRequest.</p>
public struct ConfigureAgentInput: Equatable {
    /// <p> A universally unique identifier (UUID) for a profiling instance. For example, if the
    ///          profiling instance is an Amazon EC2 instance, it is the instance ID. If it is an AWS
    ///          Fargate container, it is the container's task ID. </p>
    public let fleetInstanceId: String?
    /// <p> Metadata captured about the compute platform the agent is running on. It includes
    ///          information about sampling and reporting. The valid fields are:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>COMPUTE_PLATFORM</code> - The compute platform on which the agent is running
    ///             </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>AGENT_ID</code> - The ID for an agent instance.
    ///             </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>AWS_REQUEST_ID</code> - The AWS request ID of a Lambda invocation.
    ///             </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>EXECUTION_ENVIRONMENT</code> - The execution environment a Lambda function is running on.
    ///             </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>LAMBDA_FUNCTION_ARN</code> - The Amazon Resource Name (ARN) that is used to invoke a Lambda function.
    ///             </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>LAMBDA_MEMORY_LIMIT_IN_MB</code> - The memory allocated to a Lambda function.
    ///             </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>LAMBDA_REMAINING_TIME_IN_MILLISECONDS</code> - The time in milliseconds before execution of a Lambda function times out.
    ///             </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>LAMBDA_TIME_GAP_BETWEEN_INVOKES_IN_MILLISECONDS</code> - The time in milliseconds between two invocations of a Lambda function.
    ///             </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>LAMBDA_PREVIOUS_EXECUTION_TIME_IN_MILLISECONDS</code> - The time in milliseconds for the previous Lambda invocation.
    ///             </p>
    ///             </li>
    ///          </ul>
    public let metadata: [String:String]?
    /// <p>
    ///          The name of the profiling group for which the configured agent is collecting profiling data.
    ///       </p>
    public let profilingGroupName: String?

    public init (
        fleetInstanceId: String? = nil,
        metadata: [String:String]? = nil,
        profilingGroupName: String? = nil
    )
    {
        self.fleetInstanceId = fleetInstanceId
        self.metadata = metadata
        self.profilingGroupName = profilingGroupName
    }
}

extension ConfigureAgentInput: CustomDebugStringConvertible {
    public var debugDescription: String {
        "ConfigureAgentInput(fleetInstanceId: \(String(describing: fleetInstanceId)), metadata: \(String(describing: metadata)), profilingGroupName: \(String(describing: profilingGroupName)))"}
}
