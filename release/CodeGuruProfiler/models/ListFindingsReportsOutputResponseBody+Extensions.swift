// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListFindingsReportsOutputResponseBody: Equatable {
    public let findingsReportSummaries: [FindingsReportSummary]?
    public let nextToken: String?
}

extension ListFindingsReportsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case findingsReportSummaries
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let findingsReportSummariesContainer = try containerValues.decodeIfPresent([FindingsReportSummary?].self, forKey: .findingsReportSummaries)
        var findingsReportSummariesDecoded0:[FindingsReportSummary]? = nil
        if let findingsReportSummariesContainer = findingsReportSummariesContainer {
            findingsReportSummariesDecoded0 = [FindingsReportSummary]()
            for structure0 in findingsReportSummariesContainer {
                if let structure0 = structure0 {
                    findingsReportSummariesDecoded0?.append(structure0)
                }
            }
        }
        findingsReportSummaries = findingsReportSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
