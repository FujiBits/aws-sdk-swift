// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Notification medium for users to get alerted for events that occur in application profile. We support SNS topic as a notification channel.</p>
public struct Channel: Equatable, Hashable {
    /// <p>List of publishers for different type of events that may be detected in an application from the profile. Anomaly detection is the only event publisher in Profiler.</p>
    public let eventPublishers: Set<EventPublisher>?
    /// <p>Unique identifier for each <code>Channel</code> in the notification configuration of a Profiling Group. A random UUID for channelId is used when adding a channel to the notification configuration if not specified in the request.</p>
    public let id: String?
    /// <p>Unique arn of the resource to be used for notifications. We support a valid SNS topic arn as a channel uri.</p>
    public let uri: String?

    public init (
        eventPublishers: Set<EventPublisher>? = nil,
        id: String? = nil,
        uri: String? = nil
    )
    {
        self.eventPublishers = eventPublishers
        self.id = id
        self.uri = uri
    }
}

extension Channel: CustomDebugStringConvertible {
    public var debugDescription: String {
        "Channel(eventPublishers: \(String(describing: eventPublishers)), id: \(String(describing: id)), uri: \(String(describing: uri)))"}
}
