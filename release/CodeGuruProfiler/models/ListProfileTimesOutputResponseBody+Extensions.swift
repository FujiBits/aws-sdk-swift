// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListProfileTimesOutputResponseBody: Equatable {
    public let profileTimes: [ProfileTime]?
    public let nextToken: String?
}

extension ListProfileTimesOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case profileTimes
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let profileTimesContainer = try containerValues.decodeIfPresent([ProfileTime?].self, forKey: .profileTimes)
        var profileTimesDecoded0:[ProfileTime]? = nil
        if let profileTimesContainer = profileTimesContainer {
            profileTimesDecoded0 = [ProfileTime]()
            for structure0 in profileTimesContainer {
                if let structure0 = structure0 {
                    profileTimesDecoded0?.append(structure0)
                }
            }
        }
        profileTimes = profileTimesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
