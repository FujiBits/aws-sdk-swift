// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The structure representing the listProfilingGroupsResponse.</p>
public struct ListProfilingGroupsOutputResponse: Equatable {
    /// <p>The <code>nextToken</code> value to include in a future <code>ListProfilingGroups</code> request.
    ///          When the results of a <code>ListProfilingGroups</code> request exceed <code>maxResults</code>, this
    ///          value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more
    ///          results to return. </p>
    public let nextToken: String?
    /// <p>
    ///          A returned list of profiling group names. A list of the names is returned only if
    ///          <code>includeDescription</code> is <code>false</code>, otherwise a list of
    ///          <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ProfilingGroupDescription.html">
    ///                <code>ProfilingGroupDescription</code>
    ///             </a> objects
    ///          is returned.
    ///       </p>
    public let profilingGroupNames: [String]?
    /// <p>
    ///          A returned list
    ///          <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ProfilingGroupDescription.html">
    ///                <code>ProfilingGroupDescription</code>
    ///             </a>
    ///          objects. A list of
    ///          <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ProfilingGroupDescription.html">
    ///                <code>ProfilingGroupDescription</code>
    ///             </a>
    ///          objects is returned only if <code>includeDescription</code> is <code>true</code>, otherwise a list of profiling group names is returned.
    ///       </p>
    public let profilingGroups: [ProfilingGroupDescription]?

    public init (
        nextToken: String? = nil,
        profilingGroupNames: [String]? = nil,
        profilingGroups: [ProfilingGroupDescription]? = nil
    )
    {
        self.nextToken = nextToken
        self.profilingGroupNames = profilingGroupNames
        self.profilingGroups = profilingGroups
    }
}

extension ListProfilingGroupsOutputResponse: CustomDebugStringConvertible {
    public var debugDescription: String {
        "ListProfilingGroupsOutputResponse(nextToken: \(String(describing: nextToken)), profilingGroupNames: \(String(describing: profilingGroupNames)), profilingGroups: \(String(describing: profilingGroups)))"}
}
