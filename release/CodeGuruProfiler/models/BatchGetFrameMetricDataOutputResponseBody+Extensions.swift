// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchGetFrameMetricDataOutputResponseBody: Equatable {
    public let startTime: Date?
    public let endTime: Date?
    public let resolution: AggregationPeriod?
    public let endTimes: [TimestampStructure]?
    public let unprocessedEndTimes: [String:[TimestampStructure]]?
    public let frameMetricData: [FrameMetricDatum]?
}

extension BatchGetFrameMetricDataOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case endTime
        case endTimes
        case frameMetricData
        case resolution
        case startTime
        case unprocessedEndTimes
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let startTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .startTime)
        startTime = startTimeDecoded
        let endTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .endTime)
        endTime = endTimeDecoded
        let resolutionDecoded = try containerValues.decodeIfPresent(AggregationPeriod.self, forKey: .resolution)
        resolution = resolutionDecoded
        let endTimesContainer = try containerValues.decodeIfPresent([TimestampStructure?].self, forKey: .endTimes)
        var endTimesDecoded0:[TimestampStructure]? = nil
        if let endTimesContainer = endTimesContainer {
            endTimesDecoded0 = [TimestampStructure]()
            for structure0 in endTimesContainer {
                if let structure0 = structure0 {
                    endTimesDecoded0?.append(structure0)
                }
            }
        }
        endTimes = endTimesDecoded0
        let unprocessedEndTimesContainer = try containerValues.decodeIfPresent([String: [TimestampStructure?]?].self, forKey: .unprocessedEndTimes)
        var unprocessedEndTimesDecoded0: [String:[TimestampStructure]]? = nil
        if let unprocessedEndTimesContainer = unprocessedEndTimesContainer {
            unprocessedEndTimesDecoded0 = [String:[TimestampStructure]]()
            for (key0, listoftimestamps0) in unprocessedEndTimesContainer {
                var listoftimestamps0Decoded0: [TimestampStructure]? = nil
                if let listoftimestamps0 = listoftimestamps0 {
                    listoftimestamps0Decoded0 = [TimestampStructure]()
                    for structure1 in listoftimestamps0 {
                        if let structure1 = structure1 {
                            listoftimestamps0Decoded0?.append(structure1)
                        }
                    }
                }
                unprocessedEndTimesDecoded0?[key0] = listoftimestamps0Decoded0
            }
        }
        unprocessedEndTimes = unprocessedEndTimesDecoded0
        let frameMetricDataContainer = try containerValues.decodeIfPresent([FrameMetricDatum?].self, forKey: .frameMetricData)
        var frameMetricDataDecoded0:[FrameMetricDatum]? = nil
        if let frameMetricDataContainer = frameMetricDataContainer {
            frameMetricDataDecoded0 = [FrameMetricDatum]()
            for structure0 in frameMetricDataContainer {
                if let structure0 = structure0 {
                    frameMetricDataDecoded0?.append(structure0)
                }
            }
        }
        frameMetricData = frameMetricDataDecoded0
    }
}
