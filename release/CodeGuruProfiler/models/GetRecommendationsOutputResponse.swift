// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>The structure representing the GetRecommendationsResponse.</p>
public struct GetRecommendationsOutputResponse: Equatable {
    /// <p>
    ///             The list of anomalies that the analysis has found for this profile.
    ///         </p>
    public let anomalies: [Anomaly]?
    /// <p>
    ///             The end time of the profile the analysis data is about. This is specified
    ///             using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z represents 1
    ///             millisecond past June 1, 2020 1:15:02 PM UTC.
    ///         </p>
    public let profileEndTime: Date?
    /// <p>
    ///             The start time of the profile the analysis data is about. This is specified
    ///             using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z represents 1
    ///             millisecond past June 1, 2020 1:15:02 PM UTC.
    ///         </p>
    public let profileStartTime: Date?
    /// <p>The name of the profiling group the analysis data is about.</p>
    public let profilingGroupName: String?
    /// <p>The list of recommendations that the analysis found for this profile.</p>
    public let recommendations: [Recommendation]?

    public init (
        anomalies: [Anomaly]? = nil,
        profileEndTime: Date? = nil,
        profileStartTime: Date? = nil,
        profilingGroupName: String? = nil,
        recommendations: [Recommendation]? = nil
    )
    {
        self.anomalies = anomalies
        self.profileEndTime = profileEndTime
        self.profileStartTime = profileStartTime
        self.profilingGroupName = profilingGroupName
        self.recommendations = recommendations
    }
}

extension GetRecommendationsOutputResponse: CustomDebugStringConvertible {
    public var debugDescription: String {
        "GetRecommendationsOutputResponse(anomalies: \(String(describing: anomalies)), profileEndTime: \(String(describing: profileEndTime)), profileStartTime: \(String(describing: profileStartTime)), profilingGroupName: \(String(describing: profilingGroupName)), recommendations: \(String(describing: recommendations)))"}
}
