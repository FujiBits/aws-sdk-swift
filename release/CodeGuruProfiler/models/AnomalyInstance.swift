// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>The specific duration in which the metric is flagged as anomalous.</p>
public struct AnomalyInstance: Equatable {
    /// <p>
    ///             The end time of the period during which the metric is flagged as anomalous.
    ///             This is specified
    ///             using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z represents 1
    ///             millisecond past June 1, 2020 1:15:02 PM UTC.
    ///         </p>
    public let endTime: Date?
    /// <p>
    ///             The universally unique identifier (UUID) of an instance of an anomaly in a metric.
    ///         </p>
    public let id: String?
    /// <p>
    ///             The start time of the period during which the metric is flagged as anomalous.
    ///             This is specified
    ///             using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z represents 1
    ///             millisecond past June 1, 2020 1:15:02 PM UTC.
    ///         </p>
    public let startTime: Date?
    /// <p>Feedback type on a specific instance of anomaly submitted by the user.</p>
    public let userFeedback: UserFeedback?

    public init (
        endTime: Date? = nil,
        id: String? = nil,
        startTime: Date? = nil,
        userFeedback: UserFeedback? = nil
    )
    {
        self.endTime = endTime
        self.id = id
        self.startTime = startTime
        self.userFeedback = userFeedback
    }
}

extension AnomalyInstance: CustomDebugStringConvertible {
    public var debugDescription: String {
        "AnomalyInstance(endTime: \(String(describing: endTime)), id: \(String(describing: id)), startTime: \(String(describing: startTime)), userFeedback: \(String(describing: userFeedback)))"}
}
