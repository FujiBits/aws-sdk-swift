// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>The structure representing the listProfileTimesRequest.</p>
public struct ListProfileTimesInput: Equatable {
    /// <p>The end time of the time range from which to list the profiles.</p>
    public let endTime: Date?
    /// <p>The maximum number of profile time results returned by <code>ListProfileTimes</code>
    ///          in paginated output. When this parameter is used, <code>ListProfileTimes</code> only returns
    ///          <code>maxResults</code> results in a single page with a <code>nextToken</code> response
    ///          element. The remaining results of the initial request
    ///          can be seen by sending another <code>ListProfileTimes</code> request with the returned
    ///          <code>nextToken</code> value.
    ///       </p>
    public let maxResults: Int?
    /// <p>The <code>nextToken</code> value returned from a previous paginated
    ///          <code>ListProfileTimes</code> request where <code>maxResults</code> was used and the results
    ///          exceeded the value of that parameter. Pagination continues from the end of the previous results
    ///          that returned the <code>nextToken</code> value.
    ///       </p>
    ///          <note>
    ///             <p>This token should be treated as an opaque identifier that is only used to retrieve
    ///          the next items in a list and not for other programmatic purposes.</p>
    ///          </note>
    public let nextToken: String?
    /// <p>The order (ascending or descending by start time of the profile) to
    ///         use when listing profiles. Defaults to <code>TIMESTAMP_DESCENDING</code>.
    ///       </p>
    public let orderBy: OrderBy?
    /// <p>
    ///          The aggregation period. This specifies the period during which an aggregation profile
    ///          collects posted agent profiles for a profiling group. There are 3 valid values.
    ///       </p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>P1D</code> — 1 day
    ///             </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>PT1H</code> — 1 hour
    ///             </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>PT5M</code> — 5 minutes
    ///             </p>
    ///             </li>
    ///          </ul>
    public let period: AggregationPeriod?
    /// <p>The name of the profiling group.</p>
    public let profilingGroupName: String?
    /// <p>The start time of the time range from which to list the profiles.</p>
    public let startTime: Date?

    public init (
        endTime: Date? = nil,
        maxResults: Int? = nil,
        nextToken: String? = nil,
        orderBy: OrderBy? = nil,
        period: AggregationPeriod? = nil,
        profilingGroupName: String? = nil,
        startTime: Date? = nil
    )
    {
        self.endTime = endTime
        self.maxResults = maxResults
        self.nextToken = nextToken
        self.orderBy = orderBy
        self.period = period
        self.profilingGroupName = profilingGroupName
        self.startTime = startTime
    }
}

extension ListProfileTimesInput: CustomDebugStringConvertible {
    public var debugDescription: String {
        "ListProfileTimesInput(endTime: \(String(describing: endTime)), maxResults: \(String(describing: maxResults)), nextToken: \(String(describing: nextToken)), orderBy: \(String(describing: orderBy)), period: \(String(describing: period)), profilingGroupName: \(String(describing: profilingGroupName)), startTime: \(String(describing: startTime)))"}
}
