// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>A potential improvement that was found from analyzing the profiling data.</p>
public struct Recommendation: Equatable {
    /// <p>How many different places in the profile graph triggered a match.</p>
    public let allMatchesCount: Int?
    /// <p>How much of the total sample count is potentially affected.</p>
    public let allMatchesSum: Double?
    /// <p>End time of the profile that was used by this analysis.
    ///             This is specified
    ///             using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z represents 1
    ///             millisecond past June 1, 2020 1:15:02 PM UTC.</p>
    public let endTime: Date?
    /// <p>The pattern that analysis recognized in the profile to make this recommendation.</p>
    public let pattern: Pattern?
    /// <p>The start time of the profile that was used by this analysis.
    ///         This is specified
    ///             using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z represents 1
    ///             millisecond past June 1, 2020 1:15:02 PM UTC.</p>
    public let startTime: Date?
    /// <p>List of the matches with most impact. </p>
    public let topMatches: [Match]?

    public init (
        allMatchesCount: Int? = nil,
        allMatchesSum: Double? = nil,
        endTime: Date? = nil,
        pattern: Pattern? = nil,
        startTime: Date? = nil,
        topMatches: [Match]? = nil
    )
    {
        self.allMatchesCount = allMatchesCount
        self.allMatchesSum = allMatchesSum
        self.endTime = endTime
        self.pattern = pattern
        self.startTime = startTime
        self.topMatches = topMatches
    }
}

extension Recommendation: CustomDebugStringConvertible {
    public var debugDescription: String {
        "Recommendation(allMatchesCount: \(String(describing: allMatchesCount)), allMatchesSum: \(String(describing: allMatchesSum)), endTime: \(String(describing: endTime)), pattern: \(String(describing: pattern)), startTime: \(String(describing: startTime)), topMatches: \(String(describing: topMatches)))"}
}
