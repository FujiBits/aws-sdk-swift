// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The structure representing the createProfiliingGroupRequest.</p>
public struct CreateProfilingGroupInput: Equatable {
    /// <p>
    ///          Specifies whether profiling is enabled or disabled for the created profiling group.
    ///       </p>
    public let agentOrchestrationConfig: AgentOrchestrationConfig?
    /// <p> Amazon CodeGuru Profiler uses this universally unique identifier (UUID) to prevent the
    ///          accidental creation of duplicate profiling groups if there are failures and retries. </p>
    public var clientToken: String?
    /// <p>
    ///          The compute platform of the profiling group. Use <code>AWSLambda</code> if your application
    ///          runs on AWS Lambda. Use <code>Default</code> if your application runs on a compute platform that
    ///          is not AWS Lambda, such an Amazon EC2 instance, an on-premises server, or a different platform.
    ///          If not specified, <code>Default</code> is used.
    ///       </p>
    public let computePlatform: ComputePlatform?
    /// <p>The name of the profiling group to create.</p>
    public let profilingGroupName: String?
    /// <p>
    ///          A list of tags to add to the created profiling group.
    ///       </p>
    public let tags: [String:String]?

    public init (
        agentOrchestrationConfig: AgentOrchestrationConfig? = nil,
        clientToken: String? = nil,
        computePlatform: ComputePlatform? = nil,
        profilingGroupName: String? = nil,
        tags: [String:String]? = nil
    )
    {
        self.agentOrchestrationConfig = agentOrchestrationConfig
        self.clientToken = clientToken
        self.computePlatform = computePlatform
        self.profilingGroupName = profilingGroupName
        self.tags = tags
    }
}

extension CreateProfilingGroupInput: CustomDebugStringConvertible {
    public var debugDescription: String {
        "CreateProfilingGroupInput(agentOrchestrationConfig: \(String(describing: agentOrchestrationConfig)), clientToken: \(String(describing: clientToken)), computePlatform: \(String(describing: computePlatform)), profilingGroupName: \(String(describing: profilingGroupName)), tags: \(String(describing: tags)))"}
}
