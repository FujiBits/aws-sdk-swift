// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ProfilingStatus: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case latestAgentOrchestratedAt
        case latestAgentProfileReportedAt
        case latestAggregatedProfile
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let latestAgentOrchestratedAt = latestAgentOrchestratedAt {
            try encodeContainer.encode(latestAgentOrchestratedAt.timeIntervalSince1970, forKey: .latestAgentOrchestratedAt)
        }
        if let latestAgentProfileReportedAt = latestAgentProfileReportedAt {
            try encodeContainer.encode(latestAgentProfileReportedAt.timeIntervalSince1970, forKey: .latestAgentProfileReportedAt)
        }
        if let latestAggregatedProfile = latestAggregatedProfile {
            try encodeContainer.encode(latestAggregatedProfile, forKey: .latestAggregatedProfile)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let latestAgentProfileReportedAtDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .latestAgentProfileReportedAt)
        latestAgentProfileReportedAt = latestAgentProfileReportedAtDecoded
        let latestAggregatedProfileDecoded = try containerValues.decodeIfPresent(AggregatedProfileTime.self, forKey: .latestAggregatedProfile)
        latestAggregatedProfile = latestAggregatedProfileDecoded
        let latestAgentOrchestratedAtDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .latestAgentOrchestratedAt)
        latestAgentOrchestratedAt = latestAgentOrchestratedAtDecoded
    }
}
