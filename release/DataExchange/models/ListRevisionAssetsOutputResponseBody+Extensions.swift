// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListRevisionAssetsOutputResponseBody: Equatable {
    public let assets: [AssetEntry]?
    public let nextToken: String?
}

extension ListRevisionAssetsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case assets = "Assets"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let assetsContainer = try containerValues.decodeIfPresent([AssetEntry?].self, forKey: .assets)
        var assetsDecoded0:[AssetEntry]? = nil
        if let assetsContainer = assetsContainer {
            assetsDecoded0 = [AssetEntry]()
            for structure0 in assetsContainer {
                if let structure0 = structure0 {
                    assetsDecoded0?.append(structure0)
                }
            }
        }
        assets = assetsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
