// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListEntitiesOutputResponseBody: Equatable {
    public let entitySummaryList: [EntitySummary]?
    public let nextToken: String?
}

extension ListEntitiesOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case entitySummaryList = "EntitySummaryList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let entitySummaryListContainer = try containerValues.decodeIfPresent([EntitySummary?].self, forKey: .entitySummaryList)
        var entitySummaryListDecoded0:[EntitySummary]? = nil
        if let entitySummaryListContainer = entitySummaryListContainer {
            entitySummaryListDecoded0 = [EntitySummary]()
            for structure0 in entitySummaryListContainer {
                if let structure0 = structure0 {
                    entitySummaryListDecoded0?.append(structure0)
                }
            }
        }
        entitySummaryList = entitySummaryListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
