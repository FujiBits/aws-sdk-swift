// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MovingAddressStatus: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case moveStatus = "moveStatus"
        case publicIp = "publicIp"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let moveStatus = moveStatus {
            try container.encode(moveStatus, forKey: Key("MoveStatus"))
        }
        if let publicIp = publicIp {
            try container.encode(publicIp, forKey: Key("PublicIp"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let moveStatusDecoded = try containerValues.decodeIfPresent(MoveStatus.self, forKey: .moveStatus)
        moveStatus = moveStatusDecoded
        let publicIpDecoded = try containerValues.decodeIfPresent(String.self, forKey: .publicIp)
        publicIp = publicIpDecoded
    }
}
