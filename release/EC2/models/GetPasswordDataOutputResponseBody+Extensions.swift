// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetPasswordDataOutputResponseBody: Equatable {
    public let instanceId: String?
    public let passwordData: String?
    public let timestamp: Date?
}

extension GetPasswordDataOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case instanceId = "instanceId"
        case passwordData = "passwordData"
        case timestamp = "timestamp"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let instanceIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .instanceId)
        instanceId = instanceIdDecoded
        let passwordDataDecoded = try containerValues.decodeIfPresent(String.self, forKey: .passwordData)
        passwordData = passwordDataDecoded
        let timestampDecoded = try containerValues.decodeIfPresent(String.self, forKey: .timestamp)
        var timestampBuffer:Date? = nil
        if let timestampDecoded = timestampDecoded {
            timestampBuffer = try TimestampWrapperDecoder.parseDateStringValue(timestampDecoded, format: .dateTime)
        }
        timestamp = timestampBuffer
    }
}
