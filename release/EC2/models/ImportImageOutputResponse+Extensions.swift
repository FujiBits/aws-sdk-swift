// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ImportImageOutputResponse: HttpResponseBinding {
    public init (httpResponse: HttpResponse, decoder: ResponseDecoder? = nil) throws {
        if case .data(let data) = httpResponse.body,
            let unwrappedData = data,
            let responseDecoder = decoder {
            let output: ImportImageOutputResponseBody = try responseDecoder.decode(responseBody: unwrappedData)
            self.architecture = output.architecture
            self.description = output.description
            self.encrypted = output.encrypted
            self.hypervisor = output.hypervisor
            self.imageId = output.imageId
            self.importTaskId = output.importTaskId
            self.kmsKeyId = output.kmsKeyId
            self.licenseSpecifications = output.licenseSpecifications
            self.licenseType = output.licenseType
            self.platform = output.platform
            self.progress = output.progress
            self.snapshotDetails = output.snapshotDetails
            self.status = output.status
            self.statusMessage = output.statusMessage
            self.tags = output.tags
        } else {
            self.architecture = nil
            self.description = nil
            self.encrypted = false
            self.hypervisor = nil
            self.imageId = nil
            self.importTaskId = nil
            self.kmsKeyId = nil
            self.licenseSpecifications = nil
            self.licenseType = nil
            self.platform = nil
            self.progress = nil
            self.snapshotDetails = nil
            self.status = nil
            self.statusMessage = nil
            self.tags = nil
        }
    }
}
