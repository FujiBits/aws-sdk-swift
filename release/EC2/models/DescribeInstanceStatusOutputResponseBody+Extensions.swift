// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeInstanceStatusOutputResponseBody: Equatable {
    public let instanceStatuses: [InstanceStatus]?
    public let nextToken: String?
}

extension DescribeInstanceStatusOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case instanceStatuses = "instanceStatusSet"
        case nextToken = "nextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.instanceStatuses) {
            struct KeyVal0{struct item{}}
            let instanceStatusesWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .instanceStatuses)
            if let instanceStatusesWrappedContainer = instanceStatusesWrappedContainer {
                let instanceStatusesContainer = try instanceStatusesWrappedContainer.decodeIfPresent([InstanceStatus].self, forKey: .member)
                var instanceStatusesBuffer:[InstanceStatus]? = nil
                if let instanceStatusesContainer = instanceStatusesContainer {
                    instanceStatusesBuffer = [InstanceStatus]()
                    for structureContainer0 in instanceStatusesContainer {
                        instanceStatusesBuffer?.append(structureContainer0)
                    }
                }
                instanceStatuses = instanceStatusesBuffer
            } else {
                instanceStatuses = []
            }
        } else {
            instanceStatuses = nil
        }
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
