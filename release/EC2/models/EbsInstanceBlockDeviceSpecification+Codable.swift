// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EbsInstanceBlockDeviceSpecification: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case deleteOnTermination = "deleteOnTermination"
        case volumeId = "volumeId"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if deleteOnTermination != false {
            try container.encode(deleteOnTermination, forKey: Key("DeleteOnTermination"))
        }
        if let volumeId = volumeId {
            try container.encode(volumeId, forKey: Key("VolumeId"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deleteOnTerminationDecoded = try containerValues.decode(Bool.self, forKey: .deleteOnTermination)
        deleteOnTermination = deleteOnTerminationDecoded
        let volumeIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .volumeId)
        volumeId = volumeIdDecoded
    }
}
