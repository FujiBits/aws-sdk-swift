// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TransitGatewayAttachmentPropagation: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case state = "state"
        case transitGatewayRouteTableId = "transitGatewayRouteTableId"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let state = state {
            try container.encode(state, forKey: Key("State"))
        }
        if let transitGatewayRouteTableId = transitGatewayRouteTableId {
            try container.encode(transitGatewayRouteTableId, forKey: Key("TransitGatewayRouteTableId"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let transitGatewayRouteTableIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .transitGatewayRouteTableId)
        transitGatewayRouteTableId = transitGatewayRouteTableIdDecoded
        let stateDecoded = try containerValues.decodeIfPresent(TransitGatewayPropagationState.self, forKey: .state)
        state = stateDecoded
    }
}
