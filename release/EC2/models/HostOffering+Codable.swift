// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension HostOffering: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case currencyCode = "currencyCode"
        case duration = "duration"
        case hourlyPrice = "hourlyPrice"
        case instanceFamily = "instanceFamily"
        case offeringId = "offeringId"
        case paymentOption = "paymentOption"
        case upfrontPrice = "upfrontPrice"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let currencyCode = currencyCode {
            try container.encode(currencyCode, forKey: Key("CurrencyCode"))
        }
        if duration != 0 {
            try container.encode(duration, forKey: Key("Duration"))
        }
        if let hourlyPrice = hourlyPrice {
            try container.encode(hourlyPrice, forKey: Key("HourlyPrice"))
        }
        if let instanceFamily = instanceFamily {
            try container.encode(instanceFamily, forKey: Key("InstanceFamily"))
        }
        if let offeringId = offeringId {
            try container.encode(offeringId, forKey: Key("OfferingId"))
        }
        if let paymentOption = paymentOption {
            try container.encode(paymentOption, forKey: Key("PaymentOption"))
        }
        if let upfrontPrice = upfrontPrice {
            try container.encode(upfrontPrice, forKey: Key("UpfrontPrice"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let currencyCodeDecoded = try containerValues.decodeIfPresent(CurrencyCodeValues.self, forKey: .currencyCode)
        currencyCode = currencyCodeDecoded
        let durationDecoded = try containerValues.decode(Int.self, forKey: .duration)
        duration = durationDecoded
        let hourlyPriceDecoded = try containerValues.decodeIfPresent(String.self, forKey: .hourlyPrice)
        hourlyPrice = hourlyPriceDecoded
        let instanceFamilyDecoded = try containerValues.decodeIfPresent(String.self, forKey: .instanceFamily)
        instanceFamily = instanceFamilyDecoded
        let offeringIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .offeringId)
        offeringId = offeringIdDecoded
        let paymentOptionDecoded = try containerValues.decodeIfPresent(PaymentOption.self, forKey: .paymentOption)
        paymentOption = paymentOptionDecoded
        let upfrontPriceDecoded = try containerValues.decodeIfPresent(String.self, forKey: .upfrontPrice)
        upfrontPrice = upfrontPriceDecoded
    }
}
