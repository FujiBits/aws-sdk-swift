// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PtrUpdateStatus: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case reason = "reason"
        case status = "status"
        case value = "value"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let reason = reason {
            try container.encode(reason, forKey: Key("Reason"))
        }
        if let status = status {
            try container.encode(status, forKey: Key("Status"))
        }
        if let value = value {
            try container.encode(value, forKey: Key("Value"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let valueDecoded = try containerValues.decodeIfPresent(String.self, forKey: .value)
        value = valueDecoded
        let statusDecoded = try containerValues.decodeIfPresent(String.self, forKey: .status)
        status = statusDecoded
        let reasonDecoded = try containerValues.decodeIfPresent(String.self, forKey: .reason)
        reason = reasonDecoded
    }
}
