// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension NetworkInterfaceAssociation: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case allocationId = "allocationId"
        case associationId = "associationId"
        case carrierIp = "carrierIp"
        case customerOwnedIp = "customerOwnedIp"
        case ipOwnerId = "ipOwnerId"
        case publicDnsName = "publicDnsName"
        case publicIp = "publicIp"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let allocationId = allocationId {
            try container.encode(allocationId, forKey: Key("AllocationId"))
        }
        if let associationId = associationId {
            try container.encode(associationId, forKey: Key("AssociationId"))
        }
        if let carrierIp = carrierIp {
            try container.encode(carrierIp, forKey: Key("CarrierIp"))
        }
        if let customerOwnedIp = customerOwnedIp {
            try container.encode(customerOwnedIp, forKey: Key("CustomerOwnedIp"))
        }
        if let ipOwnerId = ipOwnerId {
            try container.encode(ipOwnerId, forKey: Key("IpOwnerId"))
        }
        if let publicDnsName = publicDnsName {
            try container.encode(publicDnsName, forKey: Key("PublicDnsName"))
        }
        if let publicIp = publicIp {
            try container.encode(publicIp, forKey: Key("PublicIp"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let allocationIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .allocationId)
        allocationId = allocationIdDecoded
        let associationIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .associationId)
        associationId = associationIdDecoded
        let ipOwnerIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .ipOwnerId)
        ipOwnerId = ipOwnerIdDecoded
        let publicDnsNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .publicDnsName)
        publicDnsName = publicDnsNameDecoded
        let publicIpDecoded = try containerValues.decodeIfPresent(String.self, forKey: .publicIp)
        publicIp = publicIpDecoded
        let customerOwnedIpDecoded = try containerValues.decodeIfPresent(String.self, forKey: .customerOwnedIp)
        customerOwnedIp = customerOwnedIpDecoded
        let carrierIpDecoded = try containerValues.decodeIfPresent(String.self, forKey: .carrierIp)
        carrierIp = carrierIpDecoded
    }
}
