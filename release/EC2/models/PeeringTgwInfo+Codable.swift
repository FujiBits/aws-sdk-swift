// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PeeringTgwInfo: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case ownerId = "ownerId"
        case region = "region"
        case transitGatewayId = "transitGatewayId"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let ownerId = ownerId {
            try container.encode(ownerId, forKey: Key("OwnerId"))
        }
        if let region = region {
            try container.encode(region, forKey: Key("Region"))
        }
        if let transitGatewayId = transitGatewayId {
            try container.encode(transitGatewayId, forKey: Key("TransitGatewayId"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let transitGatewayIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .transitGatewayId)
        transitGatewayId = transitGatewayIdDecoded
        let ownerIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .ownerId)
        ownerId = ownerIdDecoded
        let regionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .region)
        region = regionDecoded
    }
}
