// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeVpcPeeringConnectionsOutputResponseBody: Equatable {
    public let vpcPeeringConnections: [VpcPeeringConnection]?
    public let nextToken: String?
}

extension DescribeVpcPeeringConnectionsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "nextToken"
        case vpcPeeringConnections = "vpcPeeringConnectionSet"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.vpcPeeringConnections) {
            struct KeyVal0{struct item{}}
            let vpcPeeringConnectionsWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .vpcPeeringConnections)
            if let vpcPeeringConnectionsWrappedContainer = vpcPeeringConnectionsWrappedContainer {
                let vpcPeeringConnectionsContainer = try vpcPeeringConnectionsWrappedContainer.decodeIfPresent([VpcPeeringConnection].self, forKey: .member)
                var vpcPeeringConnectionsBuffer:[VpcPeeringConnection]? = nil
                if let vpcPeeringConnectionsContainer = vpcPeeringConnectionsContainer {
                    vpcPeeringConnectionsBuffer = [VpcPeeringConnection]()
                    for structureContainer0 in vpcPeeringConnectionsContainer {
                        vpcPeeringConnectionsBuffer?.append(structureContainer0)
                    }
                }
                vpcPeeringConnections = vpcPeeringConnectionsBuffer
            } else {
                vpcPeeringConnections = []
            }
        } else {
            vpcPeeringConnections = nil
        }
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
