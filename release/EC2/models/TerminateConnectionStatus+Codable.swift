// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TerminateConnectionStatus: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case connectionId = "connectionId"
        case currentStatus = "currentStatus"
        case previousStatus = "previousStatus"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let connectionId = connectionId {
            try container.encode(connectionId, forKey: Key("ConnectionId"))
        }
        if let currentStatus = currentStatus {
            try container.encode(currentStatus, forKey: Key("CurrentStatus"))
        }
        if let previousStatus = previousStatus {
            try container.encode(previousStatus, forKey: Key("PreviousStatus"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let connectionIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .connectionId)
        connectionId = connectionIdDecoded
        let previousStatusDecoded = try containerValues.decodeIfPresent(ClientVpnConnectionStatus.self, forKey: .previousStatus)
        previousStatus = previousStatusDecoded
        let currentStatusDecoded = try containerValues.decodeIfPresent(ClientVpnConnectionStatus.self, forKey: .currentStatus)
        currentStatus = currentStatusDecoded
    }
}
