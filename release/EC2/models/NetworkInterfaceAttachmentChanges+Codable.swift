// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension NetworkInterfaceAttachmentChanges: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case attachmentId = "attachmentId"
        case deleteOnTermination = "deleteOnTermination"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let attachmentId = attachmentId {
            try container.encode(attachmentId, forKey: Key("AttachmentId"))
        }
        if deleteOnTermination != false {
            try container.encode(deleteOnTermination, forKey: Key("DeleteOnTermination"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let attachmentIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .attachmentId)
        attachmentId = attachmentIdDecoded
        let deleteOnTerminationDecoded = try containerValues.decode(Bool.self, forKey: .deleteOnTermination)
        deleteOnTermination = deleteOnTerminationDecoded
    }
}
