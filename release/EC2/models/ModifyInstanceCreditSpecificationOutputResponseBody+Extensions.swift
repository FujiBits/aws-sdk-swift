// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ModifyInstanceCreditSpecificationOutputResponseBody: Equatable {
    public let successfulInstanceCreditSpecifications: [SuccessfulInstanceCreditSpecificationItem]?
    public let unsuccessfulInstanceCreditSpecifications: [UnsuccessfulInstanceCreditSpecificationItem]?
}

extension ModifyInstanceCreditSpecificationOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case successfulInstanceCreditSpecifications = "successfulInstanceCreditSpecificationSet"
        case unsuccessfulInstanceCreditSpecifications = "unsuccessfulInstanceCreditSpecificationSet"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.successfulInstanceCreditSpecifications) {
            struct KeyVal0{struct item{}}
            let successfulInstanceCreditSpecificationsWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .successfulInstanceCreditSpecifications)
            if let successfulInstanceCreditSpecificationsWrappedContainer = successfulInstanceCreditSpecificationsWrappedContainer {
                let successfulInstanceCreditSpecificationsContainer = try successfulInstanceCreditSpecificationsWrappedContainer.decodeIfPresent([SuccessfulInstanceCreditSpecificationItem].self, forKey: .member)
                var successfulInstanceCreditSpecificationsBuffer:[SuccessfulInstanceCreditSpecificationItem]? = nil
                if let successfulInstanceCreditSpecificationsContainer = successfulInstanceCreditSpecificationsContainer {
                    successfulInstanceCreditSpecificationsBuffer = [SuccessfulInstanceCreditSpecificationItem]()
                    for structureContainer0 in successfulInstanceCreditSpecificationsContainer {
                        successfulInstanceCreditSpecificationsBuffer?.append(structureContainer0)
                    }
                }
                successfulInstanceCreditSpecifications = successfulInstanceCreditSpecificationsBuffer
            } else {
                successfulInstanceCreditSpecifications = []
            }
        } else {
            successfulInstanceCreditSpecifications = nil
        }
        if containerValues.contains(.unsuccessfulInstanceCreditSpecifications) {
            struct KeyVal0{struct item{}}
            let unsuccessfulInstanceCreditSpecificationsWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .unsuccessfulInstanceCreditSpecifications)
            if let unsuccessfulInstanceCreditSpecificationsWrappedContainer = unsuccessfulInstanceCreditSpecificationsWrappedContainer {
                let unsuccessfulInstanceCreditSpecificationsContainer = try unsuccessfulInstanceCreditSpecificationsWrappedContainer.decodeIfPresent([UnsuccessfulInstanceCreditSpecificationItem].self, forKey: .member)
                var unsuccessfulInstanceCreditSpecificationsBuffer:[UnsuccessfulInstanceCreditSpecificationItem]? = nil
                if let unsuccessfulInstanceCreditSpecificationsContainer = unsuccessfulInstanceCreditSpecificationsContainer {
                    unsuccessfulInstanceCreditSpecificationsBuffer = [UnsuccessfulInstanceCreditSpecificationItem]()
                    for structureContainer0 in unsuccessfulInstanceCreditSpecificationsContainer {
                        unsuccessfulInstanceCreditSpecificationsBuffer?.append(structureContainer0)
                    }
                }
                unsuccessfulInstanceCreditSpecifications = unsuccessfulInstanceCreditSpecificationsBuffer
            } else {
                unsuccessfulInstanceCreditSpecifications = []
            }
        } else {
            unsuccessfulInstanceCreditSpecifications = nil
        }
    }
}
