// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension InternetGatewayAttachment: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case state = "state"
        case vpcId = "vpcId"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let state = state {
            try container.encode(state, forKey: Key("State"))
        }
        if let vpcId = vpcId {
            try container.encode(vpcId, forKey: Key("VpcId"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let stateDecoded = try containerValues.decodeIfPresent(AttachmentStatus.self, forKey: .state)
        state = stateDecoded
        let vpcIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .vpcId)
        vpcId = vpcIdDecoded
    }
}
