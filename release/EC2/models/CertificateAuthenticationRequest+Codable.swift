// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CertificateAuthenticationRequest: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case clientRootCertificateChainArn = "ClientRootCertificateChainArn"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let clientRootCertificateChainArn = clientRootCertificateChainArn {
            try container.encode(clientRootCertificateChainArn, forKey: Key("ClientRootCertificateChainArn"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clientRootCertificateChainArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .clientRootCertificateChainArn)
        clientRootCertificateChainArn = clientRootCertificateChainArnDecoded
    }
}
