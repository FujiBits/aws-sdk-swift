// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeClientVpnConnectionsOutputResponseBody: Equatable {
    public let connections: [ClientVpnConnection]?
    public let nextToken: String?
}

extension DescribeClientVpnConnectionsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case connections = "connections"
        case nextToken = "nextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.connections) {
            struct KeyVal0{struct item{}}
            let connectionsWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .connections)
            if let connectionsWrappedContainer = connectionsWrappedContainer {
                let connectionsContainer = try connectionsWrappedContainer.decodeIfPresent([ClientVpnConnection].self, forKey: .member)
                var connectionsBuffer:[ClientVpnConnection]? = nil
                if let connectionsContainer = connectionsContainer {
                    connectionsBuffer = [ClientVpnConnection]()
                    for structureContainer0 in connectionsContainer {
                        connectionsBuffer?.append(structureContainer0)
                    }
                }
                connections = connectionsBuffer
            } else {
                connections = []
            }
        } else {
            connections = nil
        }
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
