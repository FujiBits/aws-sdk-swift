// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CancelSpotInstanceRequestsOutputResponseBody: Equatable {
    public let cancelledSpotInstanceRequests: [CancelledSpotInstanceRequest]?
}

extension CancelSpotInstanceRequestsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case cancelledSpotInstanceRequests = "spotInstanceRequestSet"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.cancelledSpotInstanceRequests) {
            struct KeyVal0{struct item{}}
            let cancelledSpotInstanceRequestsWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .cancelledSpotInstanceRequests)
            if let cancelledSpotInstanceRequestsWrappedContainer = cancelledSpotInstanceRequestsWrappedContainer {
                let cancelledSpotInstanceRequestsContainer = try cancelledSpotInstanceRequestsWrappedContainer.decodeIfPresent([CancelledSpotInstanceRequest].self, forKey: .member)
                var cancelledSpotInstanceRequestsBuffer:[CancelledSpotInstanceRequest]? = nil
                if let cancelledSpotInstanceRequestsContainer = cancelledSpotInstanceRequestsContainer {
                    cancelledSpotInstanceRequestsBuffer = [CancelledSpotInstanceRequest]()
                    for structureContainer0 in cancelledSpotInstanceRequestsContainer {
                        cancelledSpotInstanceRequestsBuffer?.append(structureContainer0)
                    }
                }
                cancelledSpotInstanceRequests = cancelledSpotInstanceRequestsBuffer
            } else {
                cancelledSpotInstanceRequests = []
            }
        } else {
            cancelledSpotInstanceRequests = nil
        }
    }
}
