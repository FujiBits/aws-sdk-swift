// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeImagesOutputResponseBody: Equatable {
    public let images: [Image]?
}

extension DescribeImagesOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case images = "imagesSet"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.images) {
            struct KeyVal0{struct item{}}
            let imagesWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .images)
            if let imagesWrappedContainer = imagesWrappedContainer {
                let imagesContainer = try imagesWrappedContainer.decodeIfPresent([Image].self, forKey: .member)
                var imagesBuffer:[Image]? = nil
                if let imagesContainer = imagesContainer {
                    imagesBuffer = [Image]()
                    for structureContainer0 in imagesContainer {
                        imagesBuffer?.append(structureContainer0)
                    }
                }
                images = imagesBuffer
            } else {
                images = []
            }
        } else {
            images = nil
        }
    }
}
