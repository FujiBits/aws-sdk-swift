// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Describes a network interface.</p>
public struct InstanceNetworkInterface: Equatable {
    /// <p>The association information for an Elastic IPv4 associated with the network
    ///             interface.</p>
    public let association: InstanceNetworkInterfaceAssociation?
    /// <p>The network interface attachment.</p>
    public let attachment: InstanceNetworkInterfaceAttachment?
    /// <p>The description.</p>
    public let description: String?
    /// <p>One or more security groups.</p>
    public let groups: [GroupIdentifier]?
    /// <p>Describes the type of network interface.</p>
    /// 		       <p>Valid values: <code>interface</code> | <code>efa</code>
    ///          </p>
    public let interfaceType: String?
    /// <p>One or more IPv6 addresses associated with the network interface.</p>
    public let ipv6Addresses: [InstanceIpv6Address]?
    /// <p>The MAC address.</p>
    public let macAddress: String?
    /// <p>The ID of the network interface.</p>
    public let networkInterfaceId: String?
    /// <p>The ID of the AWS account that created the network interface.</p>
    public let ownerId: String?
    /// <p>The private DNS name.</p>
    public let privateDnsName: String?
    /// <p>The IPv4 address of the network interface within the subnet.</p>
    public let privateIpAddress: String?
    /// <p>One or more private IPv4 addresses associated with the network interface.</p>
    public let privateIpAddresses: [InstancePrivateIpAddress]?
    /// <p>Indicates whether source/destination checking is enabled.</p>
    public let sourceDestCheck: Bool
    /// <p>The status of the network interface.</p>
    public let status: NetworkInterfaceStatus?
    /// <p>The ID of the subnet.</p>
    public let subnetId: String?
    /// <p>The ID of the VPC.</p>
    public let vpcId: String?

    public init (
        association: InstanceNetworkInterfaceAssociation? = nil,
        attachment: InstanceNetworkInterfaceAttachment? = nil,
        description: String? = nil,
        groups: [GroupIdentifier]? = nil,
        interfaceType: String? = nil,
        ipv6Addresses: [InstanceIpv6Address]? = nil,
        macAddress: String? = nil,
        networkInterfaceId: String? = nil,
        ownerId: String? = nil,
        privateDnsName: String? = nil,
        privateIpAddress: String? = nil,
        privateIpAddresses: [InstancePrivateIpAddress]? = nil,
        sourceDestCheck: Bool = false,
        status: NetworkInterfaceStatus? = nil,
        subnetId: String? = nil,
        vpcId: String? = nil
    )
    {
        self.association = association
        self.attachment = attachment
        self.description = description
        self.groups = groups
        self.interfaceType = interfaceType
        self.ipv6Addresses = ipv6Addresses
        self.macAddress = macAddress
        self.networkInterfaceId = networkInterfaceId
        self.ownerId = ownerId
        self.privateDnsName = privateDnsName
        self.privateIpAddress = privateIpAddress
        self.privateIpAddresses = privateIpAddresses
        self.sourceDestCheck = sourceDestCheck
        self.status = status
        self.subnetId = subnetId
        self.vpcId = vpcId
    }
}

extension InstanceNetworkInterface: CustomDebugStringConvertible {
    public var debugDescription: String {
        "InstanceNetworkInterface(association: \(String(describing: association)), attachment: \(String(describing: attachment)), description: \(String(describing: description)), groups: \(String(describing: groups)), interfaceType: \(String(describing: interfaceType)), ipv6Addresses: \(String(describing: ipv6Addresses)), macAddress: \(String(describing: macAddress)), networkInterfaceId: \(String(describing: networkInterfaceId)), ownerId: \(String(describing: ownerId)), privateDnsName: \(String(describing: privateDnsName)), privateIpAddress: \(String(describing: privateIpAddress)), privateIpAddresses: \(String(describing: privateIpAddresses)), sourceDestCheck: \(String(describing: sourceDestCheck)), status: \(String(describing: status)), subnetId: \(String(describing: subnetId)), vpcId: \(String(describing: vpcId)))"}
}
