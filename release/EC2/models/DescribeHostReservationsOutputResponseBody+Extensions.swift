// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeHostReservationsOutputResponseBody: Equatable {
    public let hostReservationSet: [HostReservation]?
    public let nextToken: String?
}

extension DescribeHostReservationsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case hostReservationSet = "hostReservationSet"
        case nextToken = "nextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.hostReservationSet) {
            struct KeyVal0{struct item{}}
            let hostReservationSetWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .hostReservationSet)
            if let hostReservationSetWrappedContainer = hostReservationSetWrappedContainer {
                let hostReservationSetContainer = try hostReservationSetWrappedContainer.decodeIfPresent([HostReservation].self, forKey: .member)
                var hostReservationSetBuffer:[HostReservation]? = nil
                if let hostReservationSetContainer = hostReservationSetContainer {
                    hostReservationSetBuffer = [HostReservation]()
                    for structureContainer0 in hostReservationSetContainer {
                        hostReservationSetBuffer?.append(structureContainer0)
                    }
                }
                hostReservationSet = hostReservationSetBuffer
            } else {
                hostReservationSet = []
            }
        } else {
            hostReservationSet = nil
        }
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
