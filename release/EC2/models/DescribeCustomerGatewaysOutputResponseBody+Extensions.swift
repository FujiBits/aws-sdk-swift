// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeCustomerGatewaysOutputResponseBody: Equatable {
    public let customerGateways: [CustomerGateway]?
}

extension DescribeCustomerGatewaysOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case customerGateways = "customerGatewaySet"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.customerGateways) {
            struct KeyVal0{struct item{}}
            let customerGatewaysWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .customerGateways)
            if let customerGatewaysWrappedContainer = customerGatewaysWrappedContainer {
                let customerGatewaysContainer = try customerGatewaysWrappedContainer.decodeIfPresent([CustomerGateway].self, forKey: .member)
                var customerGatewaysBuffer:[CustomerGateway]? = nil
                if let customerGatewaysContainer = customerGatewaysContainer {
                    customerGatewaysBuffer = [CustomerGateway]()
                    for structureContainer0 in customerGatewaysContainer {
                        customerGatewaysBuffer?.append(structureContainer0)
                    }
                }
                customerGateways = customerGatewaysBuffer
            } else {
                customerGateways = []
            }
        } else {
            customerGateways = nil
        }
    }
}
