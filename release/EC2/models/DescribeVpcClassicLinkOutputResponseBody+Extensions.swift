// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeVpcClassicLinkOutputResponseBody: Equatable {
    public let vpcs: [VpcClassicLink]?
}

extension DescribeVpcClassicLinkOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case vpcs = "vpcSet"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.vpcs) {
            struct KeyVal0{struct item{}}
            let vpcsWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .vpcs)
            if let vpcsWrappedContainer = vpcsWrappedContainer {
                let vpcsContainer = try vpcsWrappedContainer.decodeIfPresent([VpcClassicLink].self, forKey: .member)
                var vpcsBuffer:[VpcClassicLink]? = nil
                if let vpcsContainer = vpcsContainer {
                    vpcsBuffer = [VpcClassicLink]()
                    for structureContainer0 in vpcsContainer {
                        vpcsBuffer?.append(structureContainer0)
                    }
                }
                vpcs = vpcsBuffer
            } else {
                vpcs = []
            }
        } else {
            vpcs = nil
        }
    }
}
