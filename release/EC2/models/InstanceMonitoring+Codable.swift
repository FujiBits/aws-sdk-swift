// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension InstanceMonitoring: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case instanceId = "instanceId"
        case monitoring = "monitoring"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let instanceId = instanceId {
            try container.encode(instanceId, forKey: Key("InstanceId"))
        }
        if let monitoring = monitoring {
            try container.encode(monitoring, forKey: Key("Monitoring"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let instanceIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .instanceId)
        instanceId = instanceIdDecoded
        let monitoringDecoded = try containerValues.decodeIfPresent(Monitoring.self, forKey: .monitoring)
        monitoring = monitoringDecoded
    }
}
