// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AssociatedRole: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case associatedRoleArn = "associatedRoleArn"
        case certificateS3BucketName = "certificateS3BucketName"
        case certificateS3ObjectKey = "certificateS3ObjectKey"
        case encryptionKmsKeyId = "encryptionKmsKeyId"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let associatedRoleArn = associatedRoleArn {
            try container.encode(associatedRoleArn, forKey: Key("AssociatedRoleArn"))
        }
        if let certificateS3BucketName = certificateS3BucketName {
            try container.encode(certificateS3BucketName, forKey: Key("CertificateS3BucketName"))
        }
        if let certificateS3ObjectKey = certificateS3ObjectKey {
            try container.encode(certificateS3ObjectKey, forKey: Key("CertificateS3ObjectKey"))
        }
        if let encryptionKmsKeyId = encryptionKmsKeyId {
            try container.encode(encryptionKmsKeyId, forKey: Key("EncryptionKmsKeyId"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let associatedRoleArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .associatedRoleArn)
        associatedRoleArn = associatedRoleArnDecoded
        let certificateS3BucketNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .certificateS3BucketName)
        certificateS3BucketName = certificateS3BucketNameDecoded
        let certificateS3ObjectKeyDecoded = try containerValues.decodeIfPresent(String.self, forKey: .certificateS3ObjectKey)
        certificateS3ObjectKey = certificateS3ObjectKeyDecoded
        let encryptionKmsKeyIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .encryptionKmsKeyId)
        encryptionKmsKeyId = encryptionKmsKeyIdDecoded
    }
}
