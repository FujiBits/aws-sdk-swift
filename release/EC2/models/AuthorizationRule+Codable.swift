// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AuthorizationRule: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case accessAll = "accessAll"
        case clientVpnEndpointId = "clientVpnEndpointId"
        case description = "description"
        case destinationCidr = "destinationCidr"
        case groupId = "groupId"
        case status = "status"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if accessAll != false {
            try container.encode(accessAll, forKey: Key("AccessAll"))
        }
        if let clientVpnEndpointId = clientVpnEndpointId {
            try container.encode(clientVpnEndpointId, forKey: Key("ClientVpnEndpointId"))
        }
        if let description = description {
            try container.encode(description, forKey: Key("Description"))
        }
        if let destinationCidr = destinationCidr {
            try container.encode(destinationCidr, forKey: Key("DestinationCidr"))
        }
        if let groupId = groupId {
            try container.encode(groupId, forKey: Key("GroupId"))
        }
        if let status = status {
            try container.encode(status, forKey: Key("Status"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clientVpnEndpointIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .clientVpnEndpointId)
        clientVpnEndpointId = clientVpnEndpointIdDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .description)
        description = descriptionDecoded
        let groupIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .groupId)
        groupId = groupIdDecoded
        let accessAllDecoded = try containerValues.decode(Bool.self, forKey: .accessAll)
        accessAll = accessAllDecoded
        let destinationCidrDecoded = try containerValues.decodeIfPresent(String.self, forKey: .destinationCidr)
        destinationCidr = destinationCidrDecoded
        let statusDecoded = try containerValues.decodeIfPresent(ClientVpnAuthorizationRuleStatus.self, forKey: .status)
        status = statusDecoded
    }
}
