// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ReservedInstanceReservationValue: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case reservationValue = "reservationValue"
        case reservedInstanceId = "reservedInstanceId"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let reservationValue = reservationValue {
            try container.encode(reservationValue, forKey: Key("ReservationValue"))
        }
        if let reservedInstanceId = reservedInstanceId {
            try container.encode(reservedInstanceId, forKey: Key("ReservedInstanceId"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let reservationValueDecoded = try containerValues.decodeIfPresent(ReservationValue.self, forKey: .reservationValue)
        reservationValue = reservationValueDecoded
        let reservedInstanceIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .reservedInstanceId)
        reservedInstanceId = reservedInstanceIdDecoded
    }
}
