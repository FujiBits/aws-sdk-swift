// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeVpnConnectionsOutputResponseBody: Equatable {
    public let vpnConnections: [VpnConnection]?
}

extension DescribeVpnConnectionsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case vpnConnections = "vpnConnectionSet"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.vpnConnections) {
            struct KeyVal0{struct item{}}
            let vpnConnectionsWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .vpnConnections)
            if let vpnConnectionsWrappedContainer = vpnConnectionsWrappedContainer {
                let vpnConnectionsContainer = try vpnConnectionsWrappedContainer.decodeIfPresent([VpnConnection].self, forKey: .member)
                var vpnConnectionsBuffer:[VpnConnection]? = nil
                if let vpnConnectionsContainer = vpnConnectionsContainer {
                    vpnConnectionsBuffer = [VpnConnection]()
                    for structureContainer0 in vpnConnectionsContainer {
                        vpnConnectionsBuffer?.append(structureContainer0)
                    }
                }
                vpnConnections = vpnConnectionsBuffer
            } else {
                vpnConnections = []
            }
        } else {
            vpnConnections = nil
        }
    }
}
