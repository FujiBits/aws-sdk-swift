// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeHostsOutputResponseBody: Equatable {
    public let hosts: [Host]?
    public let nextToken: String?
}

extension DescribeHostsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case hosts = "hostSet"
        case nextToken = "nextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.hosts) {
            struct KeyVal0{struct item{}}
            let hostsWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .hosts)
            if let hostsWrappedContainer = hostsWrappedContainer {
                let hostsContainer = try hostsWrappedContainer.decodeIfPresent([Host].self, forKey: .member)
                var hostsBuffer:[Host]? = nil
                if let hostsContainer = hostsContainer {
                    hostsBuffer = [Host]()
                    for structureContainer0 in hostsContainer {
                        hostsBuffer?.append(structureContainer0)
                    }
                }
                hosts = hostsBuffer
            } else {
                hosts = []
            }
        } else {
            hosts = nil
        }
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
