// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeScheduledInstanceAvailabilityOutputResponseBody: Equatable {
    public let nextToken: String?
    public let scheduledInstanceAvailabilitySet: [ScheduledInstanceAvailability]?
}

extension DescribeScheduledInstanceAvailabilityOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "nextToken"
        case scheduledInstanceAvailabilitySet = "scheduledInstanceAvailabilitySet"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        if containerValues.contains(.scheduledInstanceAvailabilitySet) {
            struct KeyVal0{struct item{}}
            let scheduledInstanceAvailabilitySetWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .scheduledInstanceAvailabilitySet)
            if let scheduledInstanceAvailabilitySetWrappedContainer = scheduledInstanceAvailabilitySetWrappedContainer {
                let scheduledInstanceAvailabilitySetContainer = try scheduledInstanceAvailabilitySetWrappedContainer.decodeIfPresent([ScheduledInstanceAvailability].self, forKey: .member)
                var scheduledInstanceAvailabilitySetBuffer:[ScheduledInstanceAvailability]? = nil
                if let scheduledInstanceAvailabilitySetContainer = scheduledInstanceAvailabilitySetContainer {
                    scheduledInstanceAvailabilitySetBuffer = [ScheduledInstanceAvailability]()
                    for structureContainer0 in scheduledInstanceAvailabilitySetContainer {
                        scheduledInstanceAvailabilitySetBuffer?.append(structureContainer0)
                    }
                }
                scheduledInstanceAvailabilitySet = scheduledInstanceAvailabilitySetBuffer
            } else {
                scheduledInstanceAvailabilitySet = []
            }
        } else {
            scheduledInstanceAvailabilitySet = nil
        }
    }
}
