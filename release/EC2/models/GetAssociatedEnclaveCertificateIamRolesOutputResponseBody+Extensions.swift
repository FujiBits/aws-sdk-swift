// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetAssociatedEnclaveCertificateIamRolesOutputResponseBody: Equatable {
    public let associatedRoles: [AssociatedRole]?
}

extension GetAssociatedEnclaveCertificateIamRolesOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case associatedRoles = "associatedRoleSet"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.associatedRoles) {
            struct KeyVal0{struct item{}}
            let associatedRolesWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .associatedRoles)
            if let associatedRolesWrappedContainer = associatedRolesWrappedContainer {
                let associatedRolesContainer = try associatedRolesWrappedContainer.decodeIfPresent([AssociatedRole].self, forKey: .member)
                var associatedRolesBuffer:[AssociatedRole]? = nil
                if let associatedRolesContainer = associatedRolesContainer {
                    associatedRolesBuffer = [AssociatedRole]()
                    for structureContainer0 in associatedRolesContainer {
                        associatedRolesBuffer?.append(structureContainer0)
                    }
                }
                associatedRoles = associatedRolesBuffer
            } else {
                associatedRoles = []
            }
        } else {
            associatedRoles = nil
        }
    }
}
