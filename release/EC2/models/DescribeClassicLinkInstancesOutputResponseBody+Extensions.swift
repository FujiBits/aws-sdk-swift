// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeClassicLinkInstancesOutputResponseBody: Equatable {
    public let instances: [ClassicLinkInstance]?
    public let nextToken: String?
}

extension DescribeClassicLinkInstancesOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case instances = "instancesSet"
        case nextToken = "nextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.instances) {
            struct KeyVal0{struct item{}}
            let instancesWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .instances)
            if let instancesWrappedContainer = instancesWrappedContainer {
                let instancesContainer = try instancesWrappedContainer.decodeIfPresent([ClassicLinkInstance].self, forKey: .member)
                var instancesBuffer:[ClassicLinkInstance]? = nil
                if let instancesContainer = instancesContainer {
                    instancesBuffer = [ClassicLinkInstance]()
                    for structureContainer0 in instancesContainer {
                        instancesBuffer?.append(structureContainer0)
                    }
                }
                instances = instancesBuffer
            } else {
                instances = []
            }
        } else {
            instances = nil
        }
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
