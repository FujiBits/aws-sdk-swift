// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Ipv6Range: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case cidrIpv6 = "cidrIpv6"
        case description = "description"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let cidrIpv6 = cidrIpv6 {
            try container.encode(cidrIpv6, forKey: Key("CidrIpv6"))
        }
        if let description = description {
            try container.encode(description, forKey: Key("Description"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let cidrIpv6Decoded = try containerValues.decodeIfPresent(String.self, forKey: .cidrIpv6)
        cidrIpv6 = cidrIpv6Decoded
        let descriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .description)
        description = descriptionDecoded
    }
}
