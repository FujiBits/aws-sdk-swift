// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension InstanceBlockDeviceMapping: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case deviceName = "deviceName"
        case ebs = "ebs"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let deviceName = deviceName {
            try container.encode(deviceName, forKey: Key("DeviceName"))
        }
        if let ebs = ebs {
            try container.encode(ebs, forKey: Key("Ebs"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deviceNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .deviceName)
        deviceName = deviceNameDecoded
        let ebsDecoded = try containerValues.decodeIfPresent(EbsInstanceBlockDevice.self, forKey: .ebs)
        ebs = ebsDecoded
    }
}
