// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeFleetsOutputResponseBody: Equatable {
    public let nextToken: String?
    public let fleets: [FleetData]?
}

extension DescribeFleetsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case fleets = "fleetSet"
        case nextToken = "nextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        if containerValues.contains(.fleets) {
            struct KeyVal0{struct item{}}
            let fleetsWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .fleets)
            if let fleetsWrappedContainer = fleetsWrappedContainer {
                let fleetsContainer = try fleetsWrappedContainer.decodeIfPresent([FleetData].self, forKey: .member)
                var fleetsBuffer:[FleetData]? = nil
                if let fleetsContainer = fleetsContainer {
                    fleetsBuffer = [FleetData]()
                    for structureContainer0 in fleetsContainer {
                        fleetsBuffer?.append(structureContainer0)
                    }
                }
                fleets = fleetsBuffer
            } else {
                fleets = []
            }
        } else {
            fleets = nil
        }
    }
}
