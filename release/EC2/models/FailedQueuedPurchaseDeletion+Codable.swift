// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FailedQueuedPurchaseDeletion: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case error = "error"
        case reservedInstancesId = "reservedInstancesId"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let error = error {
            try container.encode(error, forKey: Key("Error"))
        }
        if let reservedInstancesId = reservedInstancesId {
            try container.encode(reservedInstancesId, forKey: Key("ReservedInstancesId"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let errorDecoded = try containerValues.decodeIfPresent(DeleteQueuedReservedInstancesError.self, forKey: .error)
        error = errorDecoded
        let reservedInstancesIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .reservedInstancesId)
        reservedInstancesId = reservedInstancesIdDecoded
    }
}
