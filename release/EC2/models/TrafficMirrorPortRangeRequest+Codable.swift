// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TrafficMirrorPortRangeRequest: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case fromPort = "FromPort"
        case toPort = "ToPort"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if fromPort != 0 {
            try container.encode(fromPort, forKey: Key("FromPort"))
        }
        if toPort != 0 {
            try container.encode(toPort, forKey: Key("ToPort"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let fromPortDecoded = try containerValues.decode(Int.self, forKey: .fromPort)
        fromPort = fromPortDecoded
        let toPortDecoded = try containerValues.decode(Int.self, forKey: .toPort)
        toPort = toPortDecoded
    }
}
