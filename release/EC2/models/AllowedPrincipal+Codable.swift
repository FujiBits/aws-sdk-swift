// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AllowedPrincipal: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case principal = "principal"
        case principalType = "principalType"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let principal = principal {
            try container.encode(principal, forKey: Key("Principal"))
        }
        if let principalType = principalType {
            try container.encode(principalType, forKey: Key("PrincipalType"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let principalTypeDecoded = try containerValues.decodeIfPresent(PrincipalType.self, forKey: .principalType)
        principalType = principalTypeDecoded
        let principalDecoded = try containerValues.decodeIfPresent(String.self, forKey: .principal)
        principal = principalDecoded
    }
}
