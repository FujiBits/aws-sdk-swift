// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeVpcEndpointConnectionsOutputResponseBody: Equatable {
    public let vpcEndpointConnections: [VpcEndpointConnection]?
    public let nextToken: String?
}

extension DescribeVpcEndpointConnectionsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "nextToken"
        case vpcEndpointConnections = "vpcEndpointConnectionSet"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.vpcEndpointConnections) {
            struct KeyVal0{struct item{}}
            let vpcEndpointConnectionsWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .vpcEndpointConnections)
            if let vpcEndpointConnectionsWrappedContainer = vpcEndpointConnectionsWrappedContainer {
                let vpcEndpointConnectionsContainer = try vpcEndpointConnectionsWrappedContainer.decodeIfPresent([VpcEndpointConnection].self, forKey: .member)
                var vpcEndpointConnectionsBuffer:[VpcEndpointConnection]? = nil
                if let vpcEndpointConnectionsContainer = vpcEndpointConnectionsContainer {
                    vpcEndpointConnectionsBuffer = [VpcEndpointConnection]()
                    for structureContainer0 in vpcEndpointConnectionsContainer {
                        vpcEndpointConnectionsBuffer?.append(structureContainer0)
                    }
                }
                vpcEndpointConnections = vpcEndpointConnectionsBuffer
            } else {
                vpcEndpointConnections = []
            }
        } else {
            vpcEndpointConnections = nil
        }
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
