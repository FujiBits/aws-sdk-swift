// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension InstanceUsage: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case accountId = "accountId"
        case usedInstanceCount = "usedInstanceCount"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let accountId = accountId {
            try container.encode(accountId, forKey: Key("AccountId"))
        }
        if usedInstanceCount != 0 {
            try container.encode(usedInstanceCount, forKey: Key("UsedInstanceCount"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let accountIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .accountId)
        accountId = accountIdDecoded
        let usedInstanceCountDecoded = try containerValues.decode(Int.self, forKey: .usedInstanceCount)
        usedInstanceCount = usedInstanceCountDecoded
    }
}
