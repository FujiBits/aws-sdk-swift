// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CancelledSpotInstanceRequest: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case spotInstanceRequestId = "spotInstanceRequestId"
        case state = "state"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let spotInstanceRequestId = spotInstanceRequestId {
            try container.encode(spotInstanceRequestId, forKey: Key("SpotInstanceRequestId"))
        }
        if let state = state {
            try container.encode(state, forKey: Key("State"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let spotInstanceRequestIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .spotInstanceRequestId)
        spotInstanceRequestId = spotInstanceRequestIdDecoded
        let stateDecoded = try containerValues.decodeIfPresent(CancelSpotInstanceRequestState.self, forKey: .state)
        state = stateDecoded
    }
}
