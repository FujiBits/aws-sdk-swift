// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UnsuccessfulItem: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case error = "error"
        case resourceId = "resourceId"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let error = error {
            try container.encode(error, forKey: Key("Error"))
        }
        if let resourceId = resourceId {
            try container.encode(resourceId, forKey: Key("ResourceId"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let errorDecoded = try containerValues.decodeIfPresent(UnsuccessfulItemError.self, forKey: .error)
        error = errorDecoded
        let resourceIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .resourceId)
        resourceId = resourceIdDecoded
    }
}
