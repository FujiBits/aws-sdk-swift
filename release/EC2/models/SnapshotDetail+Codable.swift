// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SnapshotDetail: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case description = "description"
        case deviceName = "deviceName"
        case diskImageSize = "diskImageSize"
        case format = "format"
        case progress = "progress"
        case snapshotId = "snapshotId"
        case status = "status"
        case statusMessage = "statusMessage"
        case url = "url"
        case userBucket = "userBucket"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let description = description {
            try container.encode(description, forKey: Key("Description"))
        }
        if let deviceName = deviceName {
            try container.encode(deviceName, forKey: Key("DeviceName"))
        }
        if diskImageSize != 0.0 {
            try container.encode(String(diskImageSize), forKey: Key("DiskImageSize"))
        }
        if let format = format {
            try container.encode(format, forKey: Key("Format"))
        }
        if let progress = progress {
            try container.encode(progress, forKey: Key("Progress"))
        }
        if let snapshotId = snapshotId {
            try container.encode(snapshotId, forKey: Key("SnapshotId"))
        }
        if let status = status {
            try container.encode(status, forKey: Key("Status"))
        }
        if let statusMessage = statusMessage {
            try container.encode(statusMessage, forKey: Key("StatusMessage"))
        }
        if let url = url {
            try container.encode(url, forKey: Key("Url"))
        }
        if let userBucket = userBucket {
            try container.encode(userBucket, forKey: Key("UserBucket"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let descriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .description)
        description = descriptionDecoded
        let deviceNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .deviceName)
        deviceName = deviceNameDecoded
        let diskImageSizeDecoded = try containerValues.decode(Double.self, forKey: .diskImageSize)
        diskImageSize = diskImageSizeDecoded
        let formatDecoded = try containerValues.decodeIfPresent(String.self, forKey: .format)
        format = formatDecoded
        let progressDecoded = try containerValues.decodeIfPresent(String.self, forKey: .progress)
        progress = progressDecoded
        let snapshotIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .snapshotId)
        snapshotId = snapshotIdDecoded
        let statusDecoded = try containerValues.decodeIfPresent(String.self, forKey: .status)
        status = statusDecoded
        let statusMessageDecoded = try containerValues.decodeIfPresent(String.self, forKey: .statusMessage)
        statusMessage = statusMessageDecoded
        let urlDecoded = try containerValues.decodeIfPresent(String.self, forKey: .url)
        url = urlDecoded
        let userBucketDecoded = try containerValues.decodeIfPresent(UserBucketDetails.self, forKey: .userBucket)
        userBucket = userBucketDecoded
    }
}
