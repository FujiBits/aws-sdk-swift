// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AlternatePathHint: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case componentArn = "componentArn"
        case componentId = "componentId"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let componentArn = componentArn {
            try container.encode(componentArn, forKey: Key("ComponentArn"))
        }
        if let componentId = componentId {
            try container.encode(componentId, forKey: Key("ComponentId"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let componentIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .componentId)
        componentId = componentIdDecoded
        let componentArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .componentArn)
        componentArn = componentArnDecoded
    }
}
