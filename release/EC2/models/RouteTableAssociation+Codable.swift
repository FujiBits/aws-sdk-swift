// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RouteTableAssociation: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case associationState = "associationState"
        case gatewayId = "gatewayId"
        case main = "main"
        case routeTableAssociationId = "routeTableAssociationId"
        case routeTableId = "routeTableId"
        case subnetId = "subnetId"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let associationState = associationState {
            try container.encode(associationState, forKey: Key("AssociationState"))
        }
        if let gatewayId = gatewayId {
            try container.encode(gatewayId, forKey: Key("GatewayId"))
        }
        if main != false {
            try container.encode(main, forKey: Key("Main"))
        }
        if let routeTableAssociationId = routeTableAssociationId {
            try container.encode(routeTableAssociationId, forKey: Key("RouteTableAssociationId"))
        }
        if let routeTableId = routeTableId {
            try container.encode(routeTableId, forKey: Key("RouteTableId"))
        }
        if let subnetId = subnetId {
            try container.encode(subnetId, forKey: Key("SubnetId"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let mainDecoded = try containerValues.decode(Bool.self, forKey: .main)
        main = mainDecoded
        let routeTableAssociationIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .routeTableAssociationId)
        routeTableAssociationId = routeTableAssociationIdDecoded
        let routeTableIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .routeTableId)
        routeTableId = routeTableIdDecoded
        let subnetIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .subnetId)
        subnetId = subnetIdDecoded
        let gatewayIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .gatewayId)
        gatewayId = gatewayIdDecoded
        let associationStateDecoded = try containerValues.decodeIfPresent(RouteTableAssociationState.self, forKey: .associationState)
        associationState = associationStateDecoded
    }
}
