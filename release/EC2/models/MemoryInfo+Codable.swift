// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MemoryInfo: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case sizeInMiB = "sizeInMiB"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let sizeInMiB = sizeInMiB {
            try container.encode(sizeInMiB, forKey: Key("SizeInMiB"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sizeInMiBDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .sizeInMiB)
        sizeInMiB = sizeInMiBDecoded
    }
}
