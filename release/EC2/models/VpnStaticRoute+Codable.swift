// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension VpnStaticRoute: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case destinationCidrBlock = "destinationCidrBlock"
        case source = "source"
        case state = "state"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let destinationCidrBlock = destinationCidrBlock {
            try container.encode(destinationCidrBlock, forKey: Key("DestinationCidrBlock"))
        }
        if let source = source {
            try container.encode(source, forKey: Key("Source"))
        }
        if let state = state {
            try container.encode(state, forKey: Key("State"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let destinationCidrBlockDecoded = try containerValues.decodeIfPresent(String.self, forKey: .destinationCidrBlock)
        destinationCidrBlock = destinationCidrBlockDecoded
        let sourceDecoded = try containerValues.decodeIfPresent(VpnStaticRouteSource.self, forKey: .source)
        source = sourceDecoded
        let stateDecoded = try containerValues.decodeIfPresent(VpnState.self, forKey: .state)
        state = stateDecoded
    }
}
