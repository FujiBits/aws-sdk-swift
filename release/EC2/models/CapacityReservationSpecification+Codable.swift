// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CapacityReservationSpecification: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case capacityReservationPreference = "CapacityReservationPreference"
        case capacityReservationTarget = "CapacityReservationTarget"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let capacityReservationPreference = capacityReservationPreference {
            try container.encode(capacityReservationPreference, forKey: Key("CapacityReservationPreference"))
        }
        if let capacityReservationTarget = capacityReservationTarget {
            try container.encode(capacityReservationTarget, forKey: Key("CapacityReservationTarget"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let capacityReservationPreferenceDecoded = try containerValues.decodeIfPresent(CapacityReservationPreference.self, forKey: .capacityReservationPreference)
        capacityReservationPreference = capacityReservationPreferenceDecoded
        let capacityReservationTargetDecoded = try containerValues.decodeIfPresent(CapacityReservationTarget.self, forKey: .capacityReservationTarget)
        capacityReservationTarget = capacityReservationTargetDecoded
    }
}
