// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeCapacityReservationsOutputResponseBody: Equatable {
    public let nextToken: String?
    public let capacityReservations: [CapacityReservation]?
}

extension DescribeCapacityReservationsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case capacityReservations = "capacityReservationSet"
        case nextToken = "nextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        if containerValues.contains(.capacityReservations) {
            struct KeyVal0{struct item{}}
            let capacityReservationsWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .capacityReservations)
            if let capacityReservationsWrappedContainer = capacityReservationsWrappedContainer {
                let capacityReservationsContainer = try capacityReservationsWrappedContainer.decodeIfPresent([CapacityReservation].self, forKey: .member)
                var capacityReservationsBuffer:[CapacityReservation]? = nil
                if let capacityReservationsContainer = capacityReservationsContainer {
                    capacityReservationsBuffer = [CapacityReservation]()
                    for structureContainer0 in capacityReservationsContainer {
                        capacityReservationsBuffer?.append(structureContainer0)
                    }
                }
                capacityReservations = capacityReservationsBuffer
            } else {
                capacityReservations = []
            }
        } else {
            capacityReservations = nil
        }
    }
}
