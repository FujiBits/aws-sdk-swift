// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TransitGatewayMulticastDomainAssociation: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case resourceId = "resourceId"
        case resourceOwnerId = "resourceOwnerId"
        case resourceType = "resourceType"
        case subnet = "subnet"
        case transitGatewayAttachmentId = "transitGatewayAttachmentId"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let resourceId = resourceId {
            try container.encode(resourceId, forKey: Key("ResourceId"))
        }
        if let resourceOwnerId = resourceOwnerId {
            try container.encode(resourceOwnerId, forKey: Key("ResourceOwnerId"))
        }
        if let resourceType = resourceType {
            try container.encode(resourceType, forKey: Key("ResourceType"))
        }
        if let subnet = subnet {
            try container.encode(subnet, forKey: Key("Subnet"))
        }
        if let transitGatewayAttachmentId = transitGatewayAttachmentId {
            try container.encode(transitGatewayAttachmentId, forKey: Key("TransitGatewayAttachmentId"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let transitGatewayAttachmentIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .transitGatewayAttachmentId)
        transitGatewayAttachmentId = transitGatewayAttachmentIdDecoded
        let resourceIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .resourceId)
        resourceId = resourceIdDecoded
        let resourceTypeDecoded = try containerValues.decodeIfPresent(TransitGatewayAttachmentResourceType.self, forKey: .resourceType)
        resourceType = resourceTypeDecoded
        let resourceOwnerIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .resourceOwnerId)
        resourceOwnerId = resourceOwnerIdDecoded
        let subnetDecoded = try containerValues.decodeIfPresent(SubnetAssociation.self, forKey: .subnet)
        subnet = subnetDecoded
    }
}
