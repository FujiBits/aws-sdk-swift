// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct RequestSpotInstancesOutputResponseBody: Equatable {
    public let spotInstanceRequests: [SpotInstanceRequest]?
}

extension RequestSpotInstancesOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case spotInstanceRequests = "spotInstanceRequestSet"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.spotInstanceRequests) {
            struct KeyVal0{struct item{}}
            let spotInstanceRequestsWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .spotInstanceRequests)
            if let spotInstanceRequestsWrappedContainer = spotInstanceRequestsWrappedContainer {
                let spotInstanceRequestsContainer = try spotInstanceRequestsWrappedContainer.decodeIfPresent([SpotInstanceRequest].self, forKey: .member)
                var spotInstanceRequestsBuffer:[SpotInstanceRequest]? = nil
                if let spotInstanceRequestsContainer = spotInstanceRequestsContainer {
                    spotInstanceRequestsBuffer = [SpotInstanceRequest]()
                    for structureContainer0 in spotInstanceRequestsContainer {
                        spotInstanceRequestsBuffer?.append(structureContainer0)
                    }
                }
                spotInstanceRequests = spotInstanceRequestsBuffer
            } else {
                spotInstanceRequests = []
            }
        } else {
            spotInstanceRequests = nil
        }
    }
}
