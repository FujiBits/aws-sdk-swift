// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeBundleTasksOutputResponseBody: Equatable {
    public let bundleTasks: [BundleTask]?
}

extension DescribeBundleTasksOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case bundleTasks = "bundleInstanceTasksSet"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.bundleTasks) {
            struct KeyVal0{struct item{}}
            let bundleTasksWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .bundleTasks)
            if let bundleTasksWrappedContainer = bundleTasksWrappedContainer {
                let bundleTasksContainer = try bundleTasksWrappedContainer.decodeIfPresent([BundleTask].self, forKey: .member)
                var bundleTasksBuffer:[BundleTask]? = nil
                if let bundleTasksContainer = bundleTasksContainer {
                    bundleTasksBuffer = [BundleTask]()
                    for structureContainer0 in bundleTasksContainer {
                        bundleTasksBuffer?.append(structureContainer0)
                    }
                }
                bundleTasks = bundleTasksBuffer
            } else {
                bundleTasks = []
            }
        } else {
            bundleTasks = nil
        }
    }
}
