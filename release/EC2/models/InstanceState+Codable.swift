// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension InstanceState: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case code = "code"
        case name = "name"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if code != 0 {
            try container.encode(code, forKey: Key("Code"))
        }
        if let name = name {
            try container.encode(name, forKey: Key("Name"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let codeDecoded = try containerValues.decode(Int.self, forKey: .code)
        code = codeDecoded
        let nameDecoded = try containerValues.decodeIfPresent(InstanceStateName.self, forKey: .name)
        name = nameDecoded
    }
}
