// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeByoipCidrsOutputResponseBody: Equatable {
    public let byoipCidrs: [ByoipCidr]?
    public let nextToken: String?
}

extension DescribeByoipCidrsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case byoipCidrs = "byoipCidrSet"
        case nextToken = "nextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.byoipCidrs) {
            struct KeyVal0{struct item{}}
            let byoipCidrsWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .byoipCidrs)
            if let byoipCidrsWrappedContainer = byoipCidrsWrappedContainer {
                let byoipCidrsContainer = try byoipCidrsWrappedContainer.decodeIfPresent([ByoipCidr].self, forKey: .member)
                var byoipCidrsBuffer:[ByoipCidr]? = nil
                if let byoipCidrsContainer = byoipCidrsContainer {
                    byoipCidrsBuffer = [ByoipCidr]()
                    for structureContainer0 in byoipCidrsContainer {
                        byoipCidrsBuffer?.append(structureContainer0)
                    }
                }
                byoipCidrs = byoipCidrsBuffer
            } else {
                byoipCidrs = []
            }
        } else {
            byoipCidrs = nil
        }
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
