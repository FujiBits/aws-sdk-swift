// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SpotPlacement: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case availabilityZone = "availabilityZone"
        case groupName = "groupName"
        case tenancy = "tenancy"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let availabilityZone = availabilityZone {
            try container.encode(availabilityZone, forKey: Key("AvailabilityZone"))
        }
        if let groupName = groupName {
            try container.encode(groupName, forKey: Key("GroupName"))
        }
        if let tenancy = tenancy {
            try container.encode(tenancy, forKey: Key("Tenancy"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let availabilityZoneDecoded = try containerValues.decodeIfPresent(String.self, forKey: .availabilityZone)
        availabilityZone = availabilityZoneDecoded
        let groupNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .groupName)
        groupName = groupNameDecoded
        let tenancyDecoded = try containerValues.decodeIfPresent(Tenancy.self, forKey: .tenancy)
        tenancy = tenancyDecoded
    }
}
