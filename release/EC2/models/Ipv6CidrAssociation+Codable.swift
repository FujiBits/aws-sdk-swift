// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Ipv6CidrAssociation: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case associatedResource = "associatedResource"
        case ipv6Cidr = "ipv6Cidr"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let associatedResource = associatedResource {
            try container.encode(associatedResource, forKey: Key("AssociatedResource"))
        }
        if let ipv6Cidr = ipv6Cidr {
            try container.encode(ipv6Cidr, forKey: Key("Ipv6Cidr"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let ipv6CidrDecoded = try containerValues.decodeIfPresent(String.self, forKey: .ipv6Cidr)
        ipv6Cidr = ipv6CidrDecoded
        let associatedResourceDecoded = try containerValues.decodeIfPresent(String.self, forKey: .associatedResource)
        associatedResource = associatedResourceDecoded
    }
}
