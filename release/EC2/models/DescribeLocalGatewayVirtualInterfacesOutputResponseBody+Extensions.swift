// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeLocalGatewayVirtualInterfacesOutputResponseBody: Equatable {
    public let localGatewayVirtualInterfaces: [LocalGatewayVirtualInterface]?
    public let nextToken: String?
}

extension DescribeLocalGatewayVirtualInterfacesOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case localGatewayVirtualInterfaces = "localGatewayVirtualInterfaceSet"
        case nextToken = "nextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.localGatewayVirtualInterfaces) {
            struct KeyVal0{struct item{}}
            let localGatewayVirtualInterfacesWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .localGatewayVirtualInterfaces)
            if let localGatewayVirtualInterfacesWrappedContainer = localGatewayVirtualInterfacesWrappedContainer {
                let localGatewayVirtualInterfacesContainer = try localGatewayVirtualInterfacesWrappedContainer.decodeIfPresent([LocalGatewayVirtualInterface].self, forKey: .member)
                var localGatewayVirtualInterfacesBuffer:[LocalGatewayVirtualInterface]? = nil
                if let localGatewayVirtualInterfacesContainer = localGatewayVirtualInterfacesContainer {
                    localGatewayVirtualInterfacesBuffer = [LocalGatewayVirtualInterface]()
                    for structureContainer0 in localGatewayVirtualInterfacesContainer {
                        localGatewayVirtualInterfacesBuffer?.append(structureContainer0)
                    }
                }
                localGatewayVirtualInterfaces = localGatewayVirtualInterfacesBuffer
            } else {
                localGatewayVirtualInterfaces = []
            }
        } else {
            localGatewayVirtualInterfaces = nil
        }
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
