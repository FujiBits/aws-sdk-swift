// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeElasticGpusOutputResponseBody: Equatable {
    public let elasticGpuSet: [ElasticGpus]?
    public let maxResults: Int
    public let nextToken: String?
}

extension DescribeElasticGpusOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case elasticGpuSet = "elasticGpuSet"
        case maxResults = "maxResults"
        case nextToken = "nextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.elasticGpuSet) {
            struct KeyVal0{struct item{}}
            let elasticGpuSetWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.item>.CodingKeys.self, forKey: .elasticGpuSet)
            if let elasticGpuSetWrappedContainer = elasticGpuSetWrappedContainer {
                let elasticGpuSetContainer = try elasticGpuSetWrappedContainer.decodeIfPresent([ElasticGpus].self, forKey: .member)
                var elasticGpuSetBuffer:[ElasticGpus]? = nil
                if let elasticGpuSetContainer = elasticGpuSetContainer {
                    elasticGpuSetBuffer = [ElasticGpus]()
                    for structureContainer0 in elasticGpuSetContainer {
                        elasticGpuSetBuffer?.append(structureContainer0)
                    }
                }
                elasticGpuSet = elasticGpuSetBuffer
            } else {
                elasticGpuSet = []
            }
        } else {
            elasticGpuSet = nil
        }
        let maxResultsDecoded = try containerValues.decode(Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
