// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetUserDefinedFunctionsOutputResponseBody: Equatable {
    public let userDefinedFunctions: [UserDefinedFunction]?
    public let nextToken: String?
}

extension GetUserDefinedFunctionsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case userDefinedFunctions = "UserDefinedFunctions"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let userDefinedFunctionsContainer = try containerValues.decodeIfPresent([UserDefinedFunction?].self, forKey: .userDefinedFunctions)
        var userDefinedFunctionsDecoded0:[UserDefinedFunction]? = nil
        if let userDefinedFunctionsContainer = userDefinedFunctionsContainer {
            userDefinedFunctionsDecoded0 = [UserDefinedFunction]()
            for structure0 in userDefinedFunctionsContainer {
                if let structure0 = structure0 {
                    userDefinedFunctionsDecoded0?.append(structure0)
                }
            }
        }
        userDefinedFunctions = userDefinedFunctionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
