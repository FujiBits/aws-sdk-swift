// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// Amazon Web Services Snow Device Management documentation.
public protocol SnowDeviceManagementClientProtocol {
    /// Sends a cancel request for a specified task. You can cancel a task only if it's still in a QUEUED state. Tasks that are already running can't be cancelled. A task might still run if it's processed from the queue before the CancelTask operation changes the task's state.
    func cancelTask(input: CancelTaskInput, completion: @escaping (ClientRuntime.SdkResult<CancelTaskOutputResponse, CancelTaskOutputError>) -> Void)
    /// Instructs one or more devices to start a task, such as unlocking or rebooting.
    func createTask(input: CreateTaskInput, completion: @escaping (ClientRuntime.SdkResult<CreateTaskOutputResponse, CreateTaskOutputError>) -> Void)
    /// Checks device-specific information, such as the device type, software version, IP addresses, and lock status.
    func describeDevice(input: DescribeDeviceInput, completion: @escaping (ClientRuntime.SdkResult<DescribeDeviceOutputResponse, DescribeDeviceOutputError>) -> Void)
    /// Checks the current state of the Amazon EC2 instances. The output is similar to describeDevice, but the results are sourced from the device cache in the Amazon Web Services Cloud and include a subset of the available fields.
    func describeDeviceEc2Instances(input: DescribeDeviceEc2InstancesInput, completion: @escaping (ClientRuntime.SdkResult<DescribeDeviceEc2InstancesOutputResponse, DescribeDeviceEc2InstancesOutputError>) -> Void)
    /// Checks the status of a remote task running on one or more target devices.
    func describeExecution(input: DescribeExecutionInput, completion: @escaping (ClientRuntime.SdkResult<DescribeExecutionOutputResponse, DescribeExecutionOutputError>) -> Void)
    /// Checks the metadata for a given task on a device.
    func describeTask(input: DescribeTaskInput, completion: @escaping (ClientRuntime.SdkResult<DescribeTaskOutputResponse, DescribeTaskOutputError>) -> Void)
    /// Returns a list of the Amazon Web Services resources available for a device. Currently, Amazon EC2 instances are the only supported resource type.
    func listDeviceResources(input: ListDeviceResourcesInput, completion: @escaping (ClientRuntime.SdkResult<ListDeviceResourcesOutputResponse, ListDeviceResourcesOutputError>) -> Void)
    /// Returns a list of all devices on your Amazon Web Services account that have Amazon Web Services Snow Device Management enabled in the Amazon Web Services Region where the command is run.
    func listDevices(input: ListDevicesInput, completion: @escaping (ClientRuntime.SdkResult<ListDevicesOutputResponse, ListDevicesOutputError>) -> Void)
    /// Returns the status of tasks for one or more target devices.
    func listExecutions(input: ListExecutionsInput, completion: @escaping (ClientRuntime.SdkResult<ListExecutionsOutputResponse, ListExecutionsOutputError>) -> Void)
    /// Returns a list of tags for a managed device or task.
    func listTagsForResource(input: ListTagsForResourceInput, completion: @escaping (ClientRuntime.SdkResult<ListTagsForResourceOutputResponse, ListTagsForResourceOutputError>) -> Void)
    /// Returns a list of tasks that can be filtered by state.
    func listTasks(input: ListTasksInput, completion: @escaping (ClientRuntime.SdkResult<ListTasksOutputResponse, ListTasksOutputError>) -> Void)
    /// Adds or replaces tags on a device or task.
    func tagResource(input: TagResourceInput, completion: @escaping (ClientRuntime.SdkResult<TagResourceOutputResponse, TagResourceOutputError>) -> Void)
    /// Removes a tag from a device or task.
    func untagResource(input: UntagResourceInput, completion: @escaping (ClientRuntime.SdkResult<UntagResourceOutputResponse, UntagResourceOutputError>) -> Void)
}

public enum SnowDeviceManagementClientTypes {}
