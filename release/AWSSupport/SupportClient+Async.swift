// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

#if swift(>=5.5) && canImport(_Concurrency)
@available(macOS 12.0, iOS 15.0, tvOS 15.0, watchOS 8.0, macCatalyst 15.0, *)
public extension SupportClient {
    /// Adds one or more attachments to an attachment set.
    ///         An attachment set is a temporary container for attachments that you add to a case or
    ///             case communication. The set is available for 1 hour after it's created. The
    ///                 expiryTime returned in the response is when the set expires.
    ///
    ///
    ///
    ///                     You must have a Business or Enterprise Support plan to use the AWS Support
    ///                         API.
    ///
    ///
    ///                     If you call the AWS Support API from an account that does not have a
    ///                         Business or Enterprise Support plan, the
    ///                             SubscriptionRequiredException error message appears. For
    ///                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">AWS Support.
    ///
    ///
    ///
    func addAttachmentsToSet(input: AddAttachmentsToSetInput) async throws -> AddAttachmentsToSetOutputResponse
    {
        typealias addAttachmentsToSetContinuation = CheckedContinuation<AddAttachmentsToSetOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: addAttachmentsToSetContinuation) in
            addAttachmentsToSet(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Adds additional customer communication to an AWS Support case. Use the caseId
    ///             parameter to identify the case to which to add communication. You can list a set of
    ///             email addresses to copy on the communication by using the ccEmailAddresses
    ///             parameter. The communicationBody value contains the text of the
    ///             communication.
    ///
    ///
    ///
    ///
    ///                     You must have a Business or Enterprise Support plan to use the AWS Support
    ///                         API.
    ///
    ///
    ///                     If you call the AWS Support API from an account that does not have a
    ///                         Business or Enterprise Support plan, the
    ///                             SubscriptionRequiredException error message appears. For
    ///                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">AWS Support.
    ///
    ///
    ///
    func addCommunicationToCase(input: AddCommunicationToCaseInput) async throws -> AddCommunicationToCaseOutputResponse
    {
        typealias addCommunicationToCaseContinuation = CheckedContinuation<AddCommunicationToCaseOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: addCommunicationToCaseContinuation) in
            addCommunicationToCase(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Creates a case in the AWS Support Center. This operation is similar to how you create a case
    ///             in the AWS Support Center <a href="https://console.aws.amazon.com/support/home#/case/create">Create
    ///                 Case page.
    ///         The AWS Support API doesn't support requesting service limit increases. You can submit a
    ///             service limit increase in the following ways:
    ///
    ///
    ///                 Submit a request from the AWS Support Center <a href="https://console.aws.amazon.com/support/home#/case/create">Create Case page.
    ///
    ///
    ///                 Use the Service Quotas <a href="https://docs.aws.amazon.com/servicequotas/2019-06-24/apireference/API_RequestServiceQuotaIncrease.html">RequestServiceQuotaIncrease operation.
    ///
    ///
    ///         A successful CreateCase request returns an AWS Support case number. You can use
    ///             the DescribeCases operation and specify the case number to get
    ///             existing AWS Support cases. After you create a case, use the AddCommunicationToCase operation to add additional communication or
    ///             attachments to an existing case.
    ///         The caseId is separate from the displayId that appears in
    ///             the <a href="https://console.aws.amazon.com/support">AWS Support Center. Use the DescribeCases operation to get the displayId.
    ///
    ///
    ///
    ///                     You must have a Business or Enterprise Support plan to use the AWS Support
    ///                         API.
    ///
    ///
    ///                     If you call the AWS Support API from an account that does not have a
    ///                         Business or Enterprise Support plan, the
    ///                             SubscriptionRequiredException error message appears. For
    ///                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">AWS Support.
    ///
    ///
    ///
    func createCase(input: CreateCaseInput) async throws -> CreateCaseOutputResponse
    {
        typealias createCaseContinuation = CheckedContinuation<CreateCaseOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: createCaseContinuation) in
            createCase(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Returns the attachment that has the specified ID. Attachments can include screenshots,
    ///             error logs, or other files that describe your issue. Attachment IDs are generated by the
    ///             case management system when you add an attachment to a case or case communication.
    ///             Attachment IDs are returned in the AttachmentDetails objects that are
    ///             returned by the DescribeCommunications operation.
    ///
    ///
    ///
    ///                     You must have a Business or Enterprise Support plan to use the AWS Support
    ///                         API.
    ///
    ///
    ///                     If you call the AWS Support API from an account that does not have a
    ///                         Business or Enterprise Support plan, the
    ///                             SubscriptionRequiredException error message appears. For
    ///                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">AWS Support.
    ///
    ///
    ///
    func describeAttachment(input: DescribeAttachmentInput) async throws -> DescribeAttachmentOutputResponse
    {
        typealias describeAttachmentContinuation = CheckedContinuation<DescribeAttachmentOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: describeAttachmentContinuation) in
            describeAttachment(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Returns a list of cases that you specify by passing one or more case IDs. You can use
    ///             the afterTime and beforeTime parameters to filter the cases by
    ///             date. You can set values for the includeResolvedCases and
    ///                 includeCommunications parameters to specify how much information to
    ///             return.
    ///         The response returns the following in JSON format:
    ///
    ///
    ///                 One or more <a href="https://docs.aws.amazon.com/awssupport/latest/APIReference/API_CaseDetails.html">CaseDetails data types.
    ///
    ///
    ///                 One or more nextToken values, which specify where to paginate the
    ///                     returned records represented by the CaseDetails objects.
    ///
    ///
    ///         Case data is available for 12 months after creation. If a case was created more than
    ///             12 months ago, a request might return an error.
    ///
    ///
    ///
    ///                     You must have a Business or Enterprise Support plan to use the AWS Support
    ///                         API.
    ///
    ///
    ///                     If you call the AWS Support API from an account that does not have a
    ///                         Business or Enterprise Support plan, the
    ///                             SubscriptionRequiredException error message appears. For
    ///                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">AWS Support.
    ///
    ///
    ///
    func describeCases(input: DescribeCasesInput) async throws -> DescribeCasesOutputResponse
    {
        typealias describeCasesContinuation = CheckedContinuation<DescribeCasesOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: describeCasesContinuation) in
            describeCases(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Returns communications and attachments for one or more support cases. Use the
    ///                 afterTime and beforeTime parameters to filter by date. You
    ///             can use the caseId parameter to restrict the results to a specific
    ///             case.
    ///         Case data is available for 12 months after creation. If a case was created more than
    ///             12 months ago, a request for data might cause an error.
    ///         You can use the maxResults and nextToken parameters to
    ///             control the pagination of the results. Set maxResults to the number of
    ///             cases that you want to display on each page, and use nextToken to specify
    ///             the resumption of pagination.
    ///
    ///
    ///
    ///                     You must have a Business or Enterprise Support plan to use the AWS Support
    ///                         API.
    ///
    ///
    ///                     If you call the AWS Support API from an account that does not have a
    ///                         Business or Enterprise Support plan, the
    ///                             SubscriptionRequiredException error message appears. For
    ///                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">AWS Support.
    ///
    ///
    ///
    func describeCommunications(input: DescribeCommunicationsInput) async throws -> DescribeCommunicationsOutputResponse
    {
        typealias describeCommunicationsContinuation = CheckedContinuation<DescribeCommunicationsOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: describeCommunicationsContinuation) in
            describeCommunications(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Returns the current list of AWS services and a list of service categories for each
    ///             service. You then use service names and categories in your CreateCase
    ///             requests. Each AWS service has its own set of categories.
    ///         The service codes and category codes correspond to the values that appear in the
    ///                 Service and Category lists on the AWS Support Center <a href="https://console.aws.amazon.com/support/home#/case/create">Create Case page. The values in those fields
    ///             don't necessarily match the service codes and categories returned by the
    ///                 DescribeServices operation. Always use the service codes and categories
    ///             that the DescribeServices operation returns, so that you have the most
    ///             recent set of service and category codes.
    ///
    ///
    ///
    ///                     You must have a Business or Enterprise Support plan to use the AWS Support
    ///                         API.
    ///
    ///
    ///                     If you call the AWS Support API from an account that does not have a
    ///                         Business or Enterprise Support plan, the
    ///                             SubscriptionRequiredException error message appears. For
    ///                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">AWS Support.
    ///
    ///
    ///
    func describeServices(input: DescribeServicesInput) async throws -> DescribeServicesOutputResponse
    {
        typealias describeServicesContinuation = CheckedContinuation<DescribeServicesOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: describeServicesContinuation) in
            describeServices(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Returns the list of severity levels that you can assign to a support case. The severity
    ///             level for a case is also a field in the CaseDetails data type that you
    ///             include for a CreateCase request.
    ///
    ///
    ///
    ///                     You must have a Business or Enterprise Support plan to use the AWS Support
    ///                         API.
    ///
    ///
    ///                     If you call the AWS Support API from an account that does not have a
    ///                         Business or Enterprise Support plan, the
    ///                             SubscriptionRequiredException error message appears. For
    ///                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">AWS Support.
    ///
    ///
    ///
    func describeSeverityLevels(input: DescribeSeverityLevelsInput) async throws -> DescribeSeverityLevelsOutputResponse
    {
        typealias describeSeverityLevelsContinuation = CheckedContinuation<DescribeSeverityLevelsOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: describeSeverityLevelsContinuation) in
            describeSeverityLevels(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Returns the refresh status of the AWS Trusted Advisor checks that have the specified check
    ///             IDs. You can get the check IDs by calling the DescribeTrustedAdvisorChecks operation.
    ///         Some checks are refreshed automatically, and you can't return their refresh statuses
    ///             by using the DescribeTrustedAdvisorCheckRefreshStatuses operation. If you
    ///             call this operation for these checks, you might see an
    ///                 InvalidParameterValue error.
    ///
    ///
    ///
    ///                     You must have a Business or Enterprise Support plan to use the AWS Support
    ///                         API.
    ///
    ///
    ///                     If you call the AWS Support API from an account that does not have a
    ///                         Business or Enterprise Support plan, the
    ///                             SubscriptionRequiredException error message appears. For
    ///                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">AWS Support.
    ///
    ///
    ///
    func describeTrustedAdvisorCheckRefreshStatuses(input: DescribeTrustedAdvisorCheckRefreshStatusesInput) async throws -> DescribeTrustedAdvisorCheckRefreshStatusesOutputResponse
    {
        typealias describeTrustedAdvisorCheckRefreshStatusesContinuation = CheckedContinuation<DescribeTrustedAdvisorCheckRefreshStatusesOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: describeTrustedAdvisorCheckRefreshStatusesContinuation) in
            describeTrustedAdvisorCheckRefreshStatuses(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Returns the results of the AWS Trusted Advisor check that has the specified check ID. You
    ///             can get the check IDs by calling the DescribeTrustedAdvisorChecks
    ///             operation.
    ///         The response contains a TrustedAdvisorCheckResult object, which
    ///             contains these three objects:
    ///
    ///
    ///
    ///                     TrustedAdvisorCategorySpecificSummary
    ///
    ///
    ///
    ///
    ///                     TrustedAdvisorResourceDetail
    ///
    ///
    ///
    ///
    ///                     TrustedAdvisorResourcesSummary
    ///
    ///
    ///
    ///         In addition, the response contains these fields:
    ///
    ///
    ///
    ///                     status - The alert status of the check
    ///                     can be ok (green), warning (yellow),
    ///                         error (red), or not_available.
    ///
    ///
    ///
    ///                     timestamp - The time of the last refresh
    ///                     of the check.
    ///
    ///
    ///
    ///                     checkId - The unique identifier for the
    ///                     check.
    ///
    ///
    ///
    ///
    ///
    ///
    ///                     You must have a Business or Enterprise Support plan to use the AWS Support
    ///                         API.
    ///
    ///
    ///                     If you call the AWS Support API from an account that does not have a
    ///                         Business or Enterprise Support plan, the
    ///                             SubscriptionRequiredException error message appears. For
    ///                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">AWS Support.
    ///
    ///
    ///
    func describeTrustedAdvisorCheckResult(input: DescribeTrustedAdvisorCheckResultInput) async throws -> DescribeTrustedAdvisorCheckResultOutputResponse
    {
        typealias describeTrustedAdvisorCheckResultContinuation = CheckedContinuation<DescribeTrustedAdvisorCheckResultOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: describeTrustedAdvisorCheckResultContinuation) in
            describeTrustedAdvisorCheckResult(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Returns the results for the AWS Trusted Advisor check summaries for the check IDs that you
    ///             specified. You can get the check IDs by calling the DescribeTrustedAdvisorChecks operation.
    ///         The response contains an array of TrustedAdvisorCheckSummary
    ///             objects.
    ///
    ///
    ///
    ///                     You must have a Business or Enterprise Support plan to use the AWS Support
    ///                         API.
    ///
    ///
    ///                     If you call the AWS Support API from an account that does not have a
    ///                         Business or Enterprise Support plan, the
    ///                             SubscriptionRequiredException error message appears. For
    ///                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">AWS Support.
    ///
    ///
    ///
    func describeTrustedAdvisorCheckSummaries(input: DescribeTrustedAdvisorCheckSummariesInput) async throws -> DescribeTrustedAdvisorCheckSummariesOutputResponse
    {
        typealias describeTrustedAdvisorCheckSummariesContinuation = CheckedContinuation<DescribeTrustedAdvisorCheckSummariesOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: describeTrustedAdvisorCheckSummariesContinuation) in
            describeTrustedAdvisorCheckSummaries(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Returns information about all available AWS Trusted Advisor checks, including the name, ID,
    ///             category, description, and metadata. You must specify a language code. The AWS Support API
    ///             currently supports English ("en") and Japanese ("ja"). The response contains a TrustedAdvisorCheckDescription object for each check. You must set the
    ///             AWS Region to us-east-1.
    ///
    ///
    ///
    ///
    ///
    ///                     You must have a Business or Enterprise Support plan to use the AWS Support
    ///                         API.
    ///
    ///
    ///                     If you call the AWS Support API from an account that does not have a
    ///                         Business or Enterprise Support plan, the
    ///                         SubscriptionRequiredException error message appears. For
    ///                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">AWS Support.
    ///
    ///
    ///                     The names and descriptions for Trusted Advisor checks are subject to change. We recommend
    ///                         that you specify the check ID in your code to uniquely identify a check.
    ///
    ///
    ///
    func describeTrustedAdvisorChecks(input: DescribeTrustedAdvisorChecksInput) async throws -> DescribeTrustedAdvisorChecksOutputResponse
    {
        typealias describeTrustedAdvisorChecksContinuation = CheckedContinuation<DescribeTrustedAdvisorChecksOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: describeTrustedAdvisorChecksContinuation) in
            describeTrustedAdvisorChecks(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Refreshes the AWS Trusted Advisor check that you specify using the check ID. You can get the
    ///             check IDs by calling the DescribeTrustedAdvisorChecks
    ///             operation.
    ///
    ///             Some checks are refreshed automatically. If you call the
    ///                     RefreshTrustedAdvisorCheck operation to refresh them, you might see
    ///                 the InvalidParameterValue error.
    ///
    ///         The response contains a TrustedAdvisorCheckRefreshStatus
    ///             object.
    ///
    ///
    ///
    ///                     You must have a Business or Enterprise Support plan to use the AWS Support
    ///                         API.
    ///
    ///
    ///                     If you call the AWS Support API from an account that does not have a
    ///                         Business or Enterprise Support plan, the
    ///                             SubscriptionRequiredException error message appears. For
    ///                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">AWS Support.
    ///
    ///
    ///
    func refreshTrustedAdvisorCheck(input: RefreshTrustedAdvisorCheckInput) async throws -> RefreshTrustedAdvisorCheckOutputResponse
    {
        typealias refreshTrustedAdvisorCheckContinuation = CheckedContinuation<RefreshTrustedAdvisorCheckOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: refreshTrustedAdvisorCheckContinuation) in
            refreshTrustedAdvisorCheck(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Resolves a support case. This operation takes a caseId and returns the
    ///             initial and final state of the case.
    ///
    ///
    ///
    ///                     You must have a Business or Enterprise Support plan to use the AWS Support
    ///                         API.
    ///
    ///
    ///                     If you call the AWS Support API from an account that does not have a
    ///                         Business or Enterprise Support plan, the
    ///                             SubscriptionRequiredException error message appears. For
    ///                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">AWS Support.
    ///
    ///
    ///
    func resolveCase(input: ResolveCaseInput) async throws -> ResolveCaseOutputResponse
    {
        typealias resolveCaseContinuation = CheckedContinuation<ResolveCaseOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: resolveCaseContinuation) in
            resolveCase(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

}
#endif
