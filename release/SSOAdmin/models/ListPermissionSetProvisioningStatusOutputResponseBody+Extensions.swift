// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPermissionSetProvisioningStatusOutputResponseBody: Equatable {
    public let permissionSetsProvisioningStatus: [PermissionSetProvisioningStatusMetadata]?
    public let nextToken: String?
}

extension ListPermissionSetProvisioningStatusOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case permissionSetsProvisioningStatus = "PermissionSetsProvisioningStatus"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let permissionSetsProvisioningStatusContainer = try containerValues.decodeIfPresent([PermissionSetProvisioningStatusMetadata?].self, forKey: .permissionSetsProvisioningStatus)
        var permissionSetsProvisioningStatusDecoded0:[PermissionSetProvisioningStatusMetadata]? = nil
        if let permissionSetsProvisioningStatusContainer = permissionSetsProvisioningStatusContainer {
            permissionSetsProvisioningStatusDecoded0 = [PermissionSetProvisioningStatusMetadata]()
            for structure0 in permissionSetsProvisioningStatusContainer {
                if let structure0 = structure0 {
                    permissionSetsProvisioningStatusDecoded0?.append(structure0)
                }
            }
        }
        permissionSetsProvisioningStatus = permissionSetsProvisioningStatusDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
