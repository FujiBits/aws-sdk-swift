// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListRealtimeContactAnalysisSegmentsOutputResponseBody: Equatable {
    public let segments: [RealtimeContactAnalysisSegment]?
    public let nextToken: String?
}

extension ListRealtimeContactAnalysisSegmentsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case segments = "Segments"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let segmentsContainer = try containerValues.decodeIfPresent([RealtimeContactAnalysisSegment?].self, forKey: .segments)
        var segmentsDecoded0:[RealtimeContactAnalysisSegment]? = nil
        if let segmentsContainer = segmentsContainer {
            segmentsDecoded0 = [RealtimeContactAnalysisSegment]()
            for structure0 in segmentsContainer {
                if let structure0 = structure0 {
                    segmentsDecoded0?.append(structure0)
                }
            }
        }
        segments = segmentsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
