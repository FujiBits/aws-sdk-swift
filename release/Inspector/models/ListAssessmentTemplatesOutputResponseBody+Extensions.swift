// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAssessmentTemplatesOutputResponseBody: Equatable {
    public let assessmentTemplateArns: [String]?
    public let nextToken: String?
}

extension ListAssessmentTemplatesOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case assessmentTemplateArns
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let assessmentTemplateArnsContainer = try containerValues.decodeIfPresent([String?].self, forKey: .assessmentTemplateArns)
        var assessmentTemplateArnsDecoded0:[String]? = nil
        if let assessmentTemplateArnsContainer = assessmentTemplateArnsContainer {
            assessmentTemplateArnsDecoded0 = [String]()
            for string0 in assessmentTemplateArnsContainer {
                if let string0 = string0 {
                    assessmentTemplateArnsDecoded0?.append(string0)
                }
            }
        }
        assessmentTemplateArns = assessmentTemplateArnsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
