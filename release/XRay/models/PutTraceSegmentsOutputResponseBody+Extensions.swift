// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutTraceSegmentsOutputResponseBody: Equatable {
    public let unprocessedTraceSegments: [UnprocessedTraceSegment]?
}

extension PutTraceSegmentsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case unprocessedTraceSegments = "UnprocessedTraceSegments"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let unprocessedTraceSegmentsContainer = try containerValues.decodeIfPresent([UnprocessedTraceSegment?].self, forKey: .unprocessedTraceSegments)
        var unprocessedTraceSegmentsDecoded0:[UnprocessedTraceSegment]? = nil
        if let unprocessedTraceSegmentsContainer = unprocessedTraceSegmentsContainer {
            unprocessedTraceSegmentsDecoded0 = [UnprocessedTraceSegment]()
            for structure0 in unprocessedTraceSegmentsContainer {
                if let structure0 = structure0 {
                    unprocessedTraceSegmentsDecoded0?.append(structure0)
                }
            }
        }
        unprocessedTraceSegments = unprocessedTraceSegmentsDecoded0
    }
}
