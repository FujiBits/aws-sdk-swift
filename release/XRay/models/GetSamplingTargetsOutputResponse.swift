// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct GetSamplingTargetsOutputResponse: Equatable {
    /// <p>The last time a user changed the sampling rule configuration. If
    ///          the sampling rule configuration changed since the service last retrieved it, the service
    ///          should call <a>GetSamplingRules</a> to get the latest version.</p>
    public let lastRuleModification: Date?
    /// <p>Updated rules that the service should use to sample requests.</p>
    public let samplingTargetDocuments: [SamplingTargetDocument]?
    /// <p>Information about <a>SamplingStatisticsDocument</a> that X-Ray could not
    ///          process.</p>
    public let unprocessedStatistics: [UnprocessedStatistics]?

    public init (
        lastRuleModification: Date? = nil,
        samplingTargetDocuments: [SamplingTargetDocument]? = nil,
        unprocessedStatistics: [UnprocessedStatistics]? = nil
    )
    {
        self.lastRuleModification = lastRuleModification
        self.samplingTargetDocuments = samplingTargetDocuments
        self.unprocessedStatistics = unprocessedStatistics
    }
}

extension GetSamplingTargetsOutputResponse: CustomDebugStringConvertible {
    public var debugDescription: String {
        "GetSamplingTargetsOutputResponse(lastRuleModification: \(String(describing: lastRuleModification)), samplingTargetDocuments: \(String(describing: samplingTargetDocuments)), unprocessedStatistics: \(String(describing: unprocessedStatistics)))"}
}
