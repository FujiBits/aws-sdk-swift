// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p></p>
public struct TelemetryRecord: Equatable {
    /// <p></p>
    public let backendConnectionErrors: BackendConnectionErrors?
    /// <p></p>
    public let segmentsReceivedCount: Int?
    /// <p></p>
    public let segmentsRejectedCount: Int?
    /// <p></p>
    public let segmentsSentCount: Int?
    /// <p></p>
    public let segmentsSpilloverCount: Int?
    /// <p></p>
    public let timestamp: Date?

    public init (
        backendConnectionErrors: BackendConnectionErrors? = nil,
        segmentsReceivedCount: Int? = nil,
        segmentsRejectedCount: Int? = nil,
        segmentsSentCount: Int? = nil,
        segmentsSpilloverCount: Int? = nil,
        timestamp: Date? = nil
    )
    {
        self.backendConnectionErrors = backendConnectionErrors
        self.segmentsReceivedCount = segmentsReceivedCount
        self.segmentsRejectedCount = segmentsRejectedCount
        self.segmentsSentCount = segmentsSentCount
        self.segmentsSpilloverCount = segmentsSpilloverCount
        self.timestamp = timestamp
    }
}

extension TelemetryRecord: CustomDebugStringConvertible {
    public var debugDescription: String {
        "TelemetryRecord(backendConnectionErrors: \(String(describing: backendConnectionErrors)), segmentsReceivedCount: \(String(describing: segmentsReceivedCount)), segmentsRejectedCount: \(String(describing: segmentsRejectedCount)), segmentsSentCount: \(String(describing: segmentsSentCount)), segmentsSpilloverCount: \(String(describing: segmentsSpilloverCount)), timestamp: \(String(describing: timestamp)))"}
}
