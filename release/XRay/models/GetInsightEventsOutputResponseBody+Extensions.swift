// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetInsightEventsOutputResponseBody: Equatable {
    public let insightEvents: [InsightEvent]?
    public let nextToken: String?
}

extension GetInsightEventsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case insightEvents = "InsightEvents"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let insightEventsContainer = try containerValues.decodeIfPresent([InsightEvent?].self, forKey: .insightEvents)
        var insightEventsDecoded0:[InsightEvent]? = nil
        if let insightEventsContainer = insightEventsContainer {
            insightEventsDecoded0 = [InsightEvent]()
            for structure0 in insightEventsContainer {
                if let structure0 = structure0 {
                    insightEventsDecoded0?.append(structure0)
                }
            }
        }
        insightEvents = insightEventsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
