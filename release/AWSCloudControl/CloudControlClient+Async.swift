// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

#if swift(>=5.5) && canImport(_Concurrency)
@available(macOS 12.0, iOS 15.0, tvOS 15.0, watchOS 8.0, macCatalyst 15.0, *)
public extension CloudControlClient {
    /// Cancels the specified resource operation request. For more information, see [Canceling resource operation requests](https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-manage-requests.html#resource-operations-manage-requests-cancel) in the Amazon Web Services Cloud Control API User Guide. Only resource operations requests with a status of PENDING or IN_PROGRESS can be cancelled.
    func cancelResourceRequest(input: CancelResourceRequestInput) async throws -> CancelResourceRequestOutputResponse
    {
        typealias cancelResourceRequestContinuation = CheckedContinuation<CancelResourceRequestOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: cancelResourceRequestContinuation) in
            cancelResourceRequest(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Creates the specified resource. For more information, see [Creating a resource](https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html) in the Amazon Web Services Cloud Control API User Guide. After you have initiated a resource creation request, you can monitor the progress of your request by calling [GetResourceRequestStatus](https://docs.aws.amazon.com/cloudcontrolapi/latest/APIReference/API_GetResourceRequestStatus.html) using the RequestToken of the ProgressEvent type returned by CreateResource.
    func createResource(input: CreateResourceInput) async throws -> CreateResourceOutputResponse
    {
        typealias createResourceContinuation = CheckedContinuation<CreateResourceOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: createResourceContinuation) in
            createResource(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Deletes the specified resource. For details, see [Deleting a resource](https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-delete.html) in the Amazon Web Services Cloud Control API User Guide. After you have initiated a resource deletion request, you can monitor the progress of your request by calling [GetResourceRequestStatus](https://docs.aws.amazon.com/cloudcontrolapi/latest/APIReference/API_GetResourceRequestStatus.html) using the RequestToken of the ProgressEvent returned by DeleteResource.
    func deleteResource(input: DeleteResourceInput) async throws -> DeleteResourceOutputResponse
    {
        typealias deleteResourceContinuation = CheckedContinuation<DeleteResourceOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: deleteResourceContinuation) in
            deleteResource(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Returns information about the current state of the specified resource. For details, see [Reading a resource's current state](https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-read.html). You can use this action to return information about an existing resource in your account and Amazon Web Services Region, whether or not those resources were provisioned using Cloud Control API.
    func getResource(input: GetResourceInput) async throws -> GetResourceOutputResponse
    {
        typealias getResourceContinuation = CheckedContinuation<GetResourceOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: getResourceContinuation) in
            getResource(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Returns the current status of a resource operation request. For more information, see [Tracking the progress of resource operation requests](https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-manage-requests.html#resource-operations-manage-requests-track) in the Amazon Web Services Cloud Control API User Guide.
    func getResourceRequestStatus(input: GetResourceRequestStatusInput) async throws -> GetResourceRequestStatusOutputResponse
    {
        typealias getResourceRequestStatusContinuation = CheckedContinuation<GetResourceRequestStatusOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: getResourceRequestStatusContinuation) in
            getResourceRequestStatus(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Returns existing resource operation requests. This includes requests of all status types. For more information, see [Listing active resource operation requests](https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-manage-requests.html#resource-operations-manage-requests-list) in the Amazon Web Services Cloud Control API User Guide. Resource operation requests expire after seven days.
    func listResourceRequests(input: ListResourceRequestsInput) async throws -> ListResourceRequestsOutputResponse
    {
        typealias listResourceRequestsContinuation = CheckedContinuation<ListResourceRequestsOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: listResourceRequestsContinuation) in
            listResourceRequests(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Returns information about the specified resources. For more information, see [Discovering resources] in the Amazon Web Services Cloud Control API User Guide. You can use this action to return information about existing resources in your account and Amazon Web Services Region, whether or not those resources were provisioned using Cloud Control API.
    func listResources(input: ListResourcesInput) async throws -> ListResourcesOutputResponse
    {
        typealias listResourcesContinuation = CheckedContinuation<ListResourcesOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: listResourcesContinuation) in
            listResources(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Updates the specified property values in the resource. You specify your resource property updates as a list of patch operations contained in a JSON patch document that adheres to the [ RFC 6902 - JavaScript Object Notation (JSON) Patch ](https://datatracker.ietf.org/doc/html/rfc6902) standard. For details on how Cloud Control API performs resource update operations, see [Updating a resource](https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-update.html) in the Amazon Web Services Cloud Control API User Guide. After you have initiated a resource update request, you can monitor the progress of your request by calling [GetResourceRequestStatus](https://docs.aws.amazon.com/cloudcontrolapi/latest/APIReference/API_GetResourceRequestStatus.html) using the RequestToken of the ProgressEvent returned by UpdateResource. For more information about the properties of a specific resource, refer to the related topic for the resource in the [Resource and property types reference](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html) in the Amazon Web Services CloudFormation Users Guide.
    func updateResource(input: UpdateResourceInput) async throws -> UpdateResourceOutputResponse
    {
        typealias updateResourceContinuation = CheckedContinuation<UpdateResourceOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: updateResourceContinuation) in
            updateResource(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

}
#endif
