// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// Amazon Web Services Outposts is a fully managed service that extends Amazon Web Services infrastructure, APIs, and tools to customer premises. By providing local access to Amazon Web Services managed infrastructure, Amazon Web Services Outposts enables customers to build and run applications on premises using the same programming interfaces as in Amazon Web Services Regions, while using local compute and storage resources for lower latency and local data processing needs.
public protocol OutpostsClientProtocol {
    /// Cancels an order for an Outpost.
    func cancelOrder(input: CancelOrderInput, completion: @escaping (ClientRuntime.SdkResult<CancelOrderOutputResponse, CancelOrderOutputError>) -> Void)
    /// Creates an order for an Outpost.
    func createOrder(input: CreateOrderInput, completion: @escaping (ClientRuntime.SdkResult<CreateOrderOutputResponse, CreateOrderOutputError>) -> Void)
    /// Creates an Outpost. You can specify AvailabilityZone or AvailabilityZoneId.
    func createOutpost(input: CreateOutpostInput, completion: @escaping (ClientRuntime.SdkResult<CreateOutpostOutputResponse, CreateOutpostOutputError>) -> Void)
    /// Creates a site for an Outpost.
    func createSite(input: CreateSiteInput, completion: @escaping (ClientRuntime.SdkResult<CreateSiteOutputResponse, CreateSiteOutputError>) -> Void)
    /// Deletes the Outpost.
    func deleteOutpost(input: DeleteOutpostInput, completion: @escaping (ClientRuntime.SdkResult<DeleteOutpostOutputResponse, DeleteOutpostOutputError>) -> Void)
    /// Deletes the site.
    func deleteSite(input: DeleteSiteInput, completion: @escaping (ClientRuntime.SdkResult<DeleteSiteOutputResponse, DeleteSiteOutputError>) -> Void)
    /// Gets information about a catalog item.
    func getCatalogItem(input: GetCatalogItemInput, completion: @escaping (ClientRuntime.SdkResult<GetCatalogItemOutputResponse, GetCatalogItemOutputError>) -> Void)
    /// Gets an order.
    func getOrder(input: GetOrderInput, completion: @escaping (ClientRuntime.SdkResult<GetOrderOutputResponse, GetOrderOutputError>) -> Void)
    /// Gets information about the specified Outpost.
    func getOutpost(input: GetOutpostInput, completion: @escaping (ClientRuntime.SdkResult<GetOutpostOutputResponse, GetOutpostOutputError>) -> Void)
    /// Lists the instance types for the specified Outpost.
    func getOutpostInstanceTypes(input: GetOutpostInstanceTypesInput, completion: @escaping (ClientRuntime.SdkResult<GetOutpostInstanceTypesOutputResponse, GetOutpostInstanceTypesOutputError>) -> Void)
    /// Gets information about the specified Outpost site.
    func getSite(input: GetSiteInput, completion: @escaping (ClientRuntime.SdkResult<GetSiteOutputResponse, GetSiteOutputError>) -> Void)
    /// Gets the site address.
    func getSiteAddress(input: GetSiteAddressInput, completion: @escaping (ClientRuntime.SdkResult<GetSiteAddressOutputResponse, GetSiteAddressOutputError>) -> Void)
    /// Use to create a list of every item in the catalog. Add filters to your request to return a more specific list of results. Use filters to match an item class, storage option, or EC2 family. If you specify multiple filters, the filters are joined with an AND, and the request returns only results that match all of the specified filters.
    func listCatalogItems(input: ListCatalogItemsInput, completion: @escaping (ClientRuntime.SdkResult<ListCatalogItemsOutputResponse, ListCatalogItemsOutputError>) -> Void)
    /// Create a list of the Outpost orders for your Amazon Web Services account. You can filter your request by Outpost to return a more specific list of results.
    func listOrders(input: ListOrdersInput, completion: @escaping (ClientRuntime.SdkResult<ListOrdersOutputResponse, ListOrdersOutputError>) -> Void)
    /// Create a list of the Outposts for your Amazon Web Services account. Add filters to your request to return a more specific list of results. Use filters to match an Outpost lifecycle status, Availability Zone (us-east-1a), and AZ ID (use1-az1). If you specify multiple filters, the filters are joined with an AND, and the request returns only results that match all of the specified filters.
    func listOutposts(input: ListOutpostsInput, completion: @escaping (ClientRuntime.SdkResult<ListOutpostsOutputResponse, ListOutpostsOutputError>) -> Void)
    /// Lists the sites for your Amazon Web Services account.
    func listSites(input: ListSitesInput, completion: @escaping (ClientRuntime.SdkResult<ListSitesOutputResponse, ListSitesOutputError>) -> Void)
    /// Lists the tags for the specified resource.
    func listTagsForResource(input: ListTagsForResourceInput, completion: @escaping (ClientRuntime.SdkResult<ListTagsForResourceOutputResponse, ListTagsForResourceOutputError>) -> Void)
    /// Adds tags to the specified resource.
    func tagResource(input: TagResourceInput, completion: @escaping (ClientRuntime.SdkResult<TagResourceOutputResponse, TagResourceOutputError>) -> Void)
    /// Removes tags from the specified resource.
    func untagResource(input: UntagResourceInput, completion: @escaping (ClientRuntime.SdkResult<UntagResourceOutputResponse, UntagResourceOutputError>) -> Void)
    /// Updates an Outpost.
    func updateOutpost(input: UpdateOutpostInput, completion: @escaping (ClientRuntime.SdkResult<UpdateOutpostOutputResponse, UpdateOutpostOutputError>) -> Void)
    /// Updates the site.
    func updateSite(input: UpdateSiteInput, completion: @escaping (ClientRuntime.SdkResult<UpdateSiteOutputResponse, UpdateSiteOutputError>) -> Void)
    /// Updates the site address. To update a site address with an order IN_PROGRESS, you must wait for the order to complete or cancel the order. You can update the operating address before you place an order at the site, or after all Outposts that belong to the site have been deactivated.
    func updateSiteAddress(input: UpdateSiteAddressInput, completion: @escaping (ClientRuntime.SdkResult<UpdateSiteAddressOutputResponse, UpdateSiteAddressOutputError>) -> Void)
    /// Update the physical and logistical details for a rack at a site. For more information about hardware requirements for racks, see [Network readiness checklist](https://docs.aws.amazon.com/outposts/latest/userguide/outposts-requirements.html#checklist) in the Amazon Web Services Outposts User Guide. To update a rack at a site with an order of IN_PROGRESS, you must wait for the order to complete or cancel the order.
    func updateSiteRackPhysicalProperties(input: UpdateSiteRackPhysicalPropertiesInput, completion: @escaping (ClientRuntime.SdkResult<UpdateSiteRackPhysicalPropertiesOutputResponse, UpdateSiteRackPhysicalPropertiesOutputError>) -> Void)
}

public enum OutpostsClientTypes {}
