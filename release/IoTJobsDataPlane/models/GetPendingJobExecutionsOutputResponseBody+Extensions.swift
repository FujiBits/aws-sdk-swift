// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetPendingJobExecutionsOutputResponseBody: Equatable {
    public let inProgressJobs: [JobExecutionSummary]?
    public let queuedJobs: [JobExecutionSummary]?
}

extension GetPendingJobExecutionsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case inProgressJobs
        case queuedJobs
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let inProgressJobsContainer = try containerValues.decodeIfPresent([JobExecutionSummary?].self, forKey: .inProgressJobs)
        var inProgressJobsDecoded0:[JobExecutionSummary]? = nil
        if let inProgressJobsContainer = inProgressJobsContainer {
            inProgressJobsDecoded0 = [JobExecutionSummary]()
            for structure0 in inProgressJobsContainer {
                if let structure0 = structure0 {
                    inProgressJobsDecoded0?.append(structure0)
                }
            }
        }
        inProgressJobs = inProgressJobsDecoded0
        let queuedJobsContainer = try containerValues.decodeIfPresent([JobExecutionSummary?].self, forKey: .queuedJobs)
        var queuedJobsDecoded0:[JobExecutionSummary]? = nil
        if let queuedJobsContainer = queuedJobsContainer {
            queuedJobsDecoded0 = [JobExecutionSummary]()
            for structure0 in queuedJobsContainer {
                if let structure0 = structure0 {
                    queuedJobsDecoded0?.append(structure0)
                }
            }
        }
        queuedJobs = queuedJobsDecoded0
    }
}
