// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListProxySessionsOutputResponseBody: Equatable {
    public let proxySessions: [ProxySession]?
    public let nextToken: String?
}

extension ListProxySessionsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case proxySessions = "ProxySessions"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let proxySessionsContainer = try containerValues.decodeIfPresent([ProxySession?].self, forKey: .proxySessions)
        var proxySessionsDecoded0:[ProxySession]? = nil
        if let proxySessionsContainer = proxySessionsContainer {
            proxySessionsDecoded0 = [ProxySession]()
            for structure0 in proxySessionsContainer {
                if let structure0 = structure0 {
                    proxySessionsDecoded0?.append(structure0)
                }
            }
        }
        proxySessions = proxySessionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
