// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListBotsOutputResponseBody: Equatable {
    public let bots: [Bot]?
    public let nextToken: String?
}

extension ListBotsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case bots = "Bots"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let botsContainer = try containerValues.decodeIfPresent([Bot?].self, forKey: .bots)
        var botsDecoded0:[Bot]? = nil
        if let botsContainer = botsContainer {
            botsDecoded0 = [Bot]()
            for structure0 in botsContainer {
                if let structure0 = structure0 {
                    botsDecoded0?.append(structure0)
                }
            }
        }
        bots = botsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
