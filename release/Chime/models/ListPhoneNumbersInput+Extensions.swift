// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct ListPhoneNumbersInputHeadersMiddleware: Middleware {
    public let id: String = "ListPhoneNumbersInputHeadersMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<ListPhoneNumbersInput>,
                  next: H) -> Swift.Result<OperationOutput<ListPhoneNumbersOutputResponse>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<ListPhoneNumbersInput>
    public typealias MOutput = OperationOutput<ListPhoneNumbersOutputResponse>
    public typealias Context = ClientRuntime.HttpContext
    public typealias MError = SdkError<ListPhoneNumbersOutputError>
}

public struct ListPhoneNumbersInputQueryItemMiddleware: Middleware {
    public let id: String = "ListPhoneNumbersInputQueryItemMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<ListPhoneNumbersInput>,
                  next: H) -> Swift.Result<OperationOutput<ListPhoneNumbersOutputResponse>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        if let status = input.operationInput.status {
            let statusQueryItem = URLQueryItem(name: "status".urlPercentEncoding(), value: String(status.rawValue).urlPercentEncoding())
            input.builder.withQueryItem(statusQueryItem)
        }
        if let nextToken = input.operationInput.nextToken {
            let nextTokenQueryItem = URLQueryItem(name: "next-token".urlPercentEncoding(), value: String(nextToken).urlPercentEncoding())
            input.builder.withQueryItem(nextTokenQueryItem)
        }
        if let maxResults = input.operationInput.maxResults {
            let maxResultsQueryItem = URLQueryItem(name: "max-results".urlPercentEncoding(), value: String(maxResults).urlPercentEncoding())
            input.builder.withQueryItem(maxResultsQueryItem)
        }
        if let productType = input.operationInput.productType {
            let productTypeQueryItem = URLQueryItem(name: "product-type".urlPercentEncoding(), value: String(productType.rawValue).urlPercentEncoding())
            input.builder.withQueryItem(productTypeQueryItem)
        }
        if let filterName = input.operationInput.filterName {
            let filterNameQueryItem = URLQueryItem(name: "filter-name".urlPercentEncoding(), value: String(filterName.rawValue).urlPercentEncoding())
            input.builder.withQueryItem(filterNameQueryItem)
        }
        if let filterValue = input.operationInput.filterValue {
            let filterValueQueryItem = URLQueryItem(name: "filter-value".urlPercentEncoding(), value: String(filterValue).urlPercentEncoding())
            input.builder.withQueryItem(filterValueQueryItem)
        }
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<ListPhoneNumbersInput>
    public typealias MOutput = OperationOutput<ListPhoneNumbersOutputResponse>
    public typealias Context = ClientRuntime.HttpContext
    public typealias MError = SdkError<ListPhoneNumbersOutputError>
}

extension ListPhoneNumbersInput: Encodable, Reflection {

    public func encode(to encoder: Encoder) throws {
    }
}
