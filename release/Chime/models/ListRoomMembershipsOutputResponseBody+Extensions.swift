// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListRoomMembershipsOutputResponseBody: Equatable {
    public let roomMemberships: [RoomMembership]?
    public let nextToken: String?
}

extension ListRoomMembershipsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case roomMemberships = "RoomMemberships"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let roomMembershipsContainer = try containerValues.decodeIfPresent([RoomMembership?].self, forKey: .roomMemberships)
        var roomMembershipsDecoded0:[RoomMembership]? = nil
        if let roomMembershipsContainer = roomMembershipsContainer {
            roomMembershipsDecoded0 = [RoomMembership]()
            for structure0 in roomMembershipsContainer {
                if let structure0 = structure0 {
                    roomMembershipsDecoded0?.append(structure0)
                }
            }
        }
        roomMemberships = roomMembershipsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
