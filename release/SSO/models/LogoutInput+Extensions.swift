// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct LogoutInputHeadersMiddleware: Middleware {
    public let id: String = "LogoutInputHeadersMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<LogoutInput>,
                  next: H) -> Swift.Result<OperationOutput<LogoutOutputResponse>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        if let accessToken = input.operationInput.accessToken {
            input.builder.withHeader(name: "x-amz-sso_bearer_token", value: String(accessToken))
        }
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<LogoutInput>
    public typealias MOutput = OperationOutput<LogoutOutputResponse>
    public typealias Context = ClientRuntime.HttpContext
    public typealias MError = SdkError<LogoutOutputError>
}

public struct LogoutInputQueryItemMiddleware: Middleware {
    public let id: String = "LogoutInputQueryItemMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<LogoutInput>,
                  next: H) -> Swift.Result<OperationOutput<LogoutOutputResponse>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<LogoutInput>
    public typealias MOutput = OperationOutput<LogoutOutputResponse>
    public typealias Context = ClientRuntime.HttpContext
    public typealias MError = SdkError<LogoutOutputError>
}

extension LogoutInput: Encodable, Reflection {

    public func encode(to encoder: Encoder) throws {
    }
}
