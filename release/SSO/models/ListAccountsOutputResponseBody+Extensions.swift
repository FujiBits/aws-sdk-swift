// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAccountsOutputResponseBody: Equatable {
    public let nextToken: String?
    public let accountList: [AccountInfo]?
}

extension ListAccountsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case accountList
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let accountListContainer = try containerValues.decodeIfPresent([AccountInfo?].self, forKey: .accountList)
        var accountListDecoded0:[AccountInfo]? = nil
        if let accountListContainer = accountListContainer {
            accountListDecoded0 = [AccountInfo]()
            for structure0 in accountListContainer {
                if let structure0 = structure0 {
                    accountListDecoded0?.append(structure0)
                }
            }
        }
        accountList = accountListDecoded0
    }
}
