// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ResolveComponentCandidatesOutputResponseBody: Equatable {
    public let resolvedComponentVersions: [ResolvedComponentVersion]?
}

extension ResolveComponentCandidatesOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case resolvedComponentVersions
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resolvedComponentVersionsContainer = try containerValues.decodeIfPresent([ResolvedComponentVersion?].self, forKey: .resolvedComponentVersions)
        var resolvedComponentVersionsDecoded0:[ResolvedComponentVersion]? = nil
        if let resolvedComponentVersionsContainer = resolvedComponentVersionsContainer {
            resolvedComponentVersionsDecoded0 = [ResolvedComponentVersion]()
            for structure0 in resolvedComponentVersionsContainer {
                if let structure0 = structure0 {
                    resolvedComponentVersionsDecoded0?.append(structure0)
                }
            }
        }
        resolvedComponentVersions = resolvedComponentVersionsDecoded0
    }
}
