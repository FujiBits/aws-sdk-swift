// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListEffectiveDeploymentsOutputResponseBody: Equatable {
    public let effectiveDeployments: [EffectiveDeployment]?
    public let nextToken: String?
}

extension ListEffectiveDeploymentsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case effectiveDeployments
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let effectiveDeploymentsContainer = try containerValues.decodeIfPresent([EffectiveDeployment?].self, forKey: .effectiveDeployments)
        var effectiveDeploymentsDecoded0:[EffectiveDeployment]? = nil
        if let effectiveDeploymentsContainer = effectiveDeploymentsContainer {
            effectiveDeploymentsDecoded0 = [EffectiveDeployment]()
            for structure0 in effectiveDeploymentsContainer {
                if let structure0 = structure0 {
                    effectiveDeploymentsDecoded0?.append(structure0)
                }
            }
        }
        effectiveDeployments = effectiveDeploymentsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
