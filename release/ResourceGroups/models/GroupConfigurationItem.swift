// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>An item in a group configuration. A group service configuration can have one or more
///             items. For details about group service configuration syntax, see <a href="https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html">Service configurations for
///                 resource groups</a>.</p>
public struct GroupConfigurationItem: Equatable {
    /// <p>A collection of parameters for this group configuration item. For the list of
    ///             parameters that you can use with each configuration item type, see <a href="https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html#about-slg-types">Supported
    ///                 resource types and parameters</a>.</p>
    public let parameters: [GroupConfigurationParameter]?
    /// <p>Specifies the type of group configuration item. Each item must have a unique value for
    ///                 <code>type</code>. For the list of types that you can specify for a configuration
    ///             item, see <a href="https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html#about-slg-types">Supported resource types and
    ///                 parameters</a>.</p>
    public let type: String?

    public init (
        parameters: [GroupConfigurationParameter]? = nil,
        type: String? = nil
    )
    {
        self.parameters = parameters
        self.type = type
    }
}

extension GroupConfigurationItem: CustomDebugStringConvertible {
    public var debugDescription: String {
        "GroupConfigurationItem(parameters: \(String(describing: parameters)), type: \(String(describing: type)))"}
}
