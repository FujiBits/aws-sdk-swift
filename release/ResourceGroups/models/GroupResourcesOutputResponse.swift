// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct GroupResourcesOutputResponse: Equatable {
    /// <p>A list of ARNs of any resources that failed to be added to the group by this
    ///             operation.</p>
    public let failed: [FailedResource]?
    /// <p>A list of ARNs of any resources that are still in the process of being added to the
    ///             group by this operation. These pending additions continue asynchronously. You can check
    ///             the status of pending additions by using the <code>
    ///                <a>ListGroupResources</a>
    ///             </code> operation, and checking the <code>Resources</code> array in the response
    ///             and the <code>Status</code> field of each object in that array. </p>
    public let pending: [PendingResource]?
    /// <p>A list of ARNs of resources that were successfully added to the group by this
    ///             operation.</p>
    public let succeeded: [String]?

    public init (
        failed: [FailedResource]? = nil,
        pending: [PendingResource]? = nil,
        succeeded: [String]? = nil
    )
    {
        self.failed = failed
        self.pending = pending
        self.succeeded = succeeded
    }
}

extension GroupResourcesOutputResponse: CustomDebugStringConvertible {
    public var debugDescription: String {
        "GroupResourcesOutputResponse(failed: \(String(describing: failed)), pending: \(String(describing: pending)), succeeded: \(String(describing: succeeded)))"}
}
