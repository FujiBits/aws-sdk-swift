// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

#if swift(>=5.5)
@available(macOS 12.0, iOS 15.0, tvOS 15.0, watchOS 8.0, macCatalyst 15.0, *)
public extension SupportClient {
    /// <p>Adds one or more attachments to an attachment set. </p>
    ///         <p>An attachment set is a temporary container for attachments that you add to a case or
    ///             case communication. The set is available for 1 hour after it's created. The
    ///                 <code>expiryTime</code> returned in the response is when the set expires. </p>
    ///         <note>
    ///             <ul>
    ///                <li>
    ///                     <p>You must have a Business or Enterprise Support plan to use the AWS Support
    ///                         API. </p>
    ///                 </li>
    ///                <li>
    ///                     <p>If you call the AWS Support API from an account that does not have a
    ///                         Business or Enterprise Support plan, the
    ///                             <code>SubscriptionRequiredException</code> error message appears. For
    ///                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">AWS Support</a>.</p>
    ///                 </li>
    ///             </ul>
    ///         </note>
    func addAttachmentsToSet(input: AddAttachmentsToSetInput) async throws -> AddAttachmentsToSetOutputResponse
    {
        typealias addAttachmentsToSetContinuation = CheckedContinuation<AddAttachmentsToSetOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: addAttachmentsToSetContinuation) in
            addAttachmentsToSet(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// <p>Adds additional customer communication to an AWS Support case. Use the <code>caseId</code>
    ///             parameter to identify the case to which to add communication. You can list a set of
    ///             email addresses to copy on the communication by using the <code>ccEmailAddresses</code>
    ///             parameter. The <code>communicationBody</code> value contains the text of the
    ///             communication.</p>
    ///
    ///         <note>
    ///             <ul>
    ///                <li>
    ///                     <p>You must have a Business or Enterprise Support plan to use the AWS Support
    ///                         API. </p>
    ///                 </li>
    ///                <li>
    ///                     <p>If you call the AWS Support API from an account that does not have a
    ///                         Business or Enterprise Support plan, the
    ///                             <code>SubscriptionRequiredException</code> error message appears. For
    ///                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">AWS Support</a>.</p>
    ///                 </li>
    ///             </ul>
    ///         </note>
    func addCommunicationToCase(input: AddCommunicationToCaseInput) async throws -> AddCommunicationToCaseOutputResponse
    {
        typealias addCommunicationToCaseContinuation = CheckedContinuation<AddCommunicationToCaseOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: addCommunicationToCaseContinuation) in
            addCommunicationToCase(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// <p>Creates a case in the AWS Support Center. This operation is similar to how you create a case
    ///             in the AWS Support Center <a href="https://console.aws.amazon.com/support/home#/case/create">Create
    ///                 Case</a> page.</p>
    ///         <p>The AWS Support API doesn't support requesting service limit increases. You can submit a
    ///             service limit increase in the following ways: </p>
    ///         <ul>
    ///             <li>
    ///                 <p>Submit a request from the AWS Support Center <a href="https://console.aws.amazon.com/support/home#/case/create">Create Case</a> page.</p>
    ///             </li>
    ///             <li>
    ///                 <p>Use the Service Quotas <a href="https://docs.aws.amazon.com/servicequotas/2019-06-24/apireference/API_RequestServiceQuotaIncrease.html">RequestServiceQuotaIncrease</a> operation.</p>
    ///             </li>
    ///          </ul>
    ///         <p>A successful <code>CreateCase</code> request returns an AWS Support case number. You can use
    ///             the <a>DescribeCases</a> operation and specify the case number to get
    ///             existing AWS Support cases. After you create a case, use the <a>AddCommunicationToCase</a> operation to add additional communication or
    ///             attachments to an existing case.</p>
    ///         <p>The <code>caseId</code> is separate from the <code>displayId</code> that appears in
    ///             the <a href="https://console.aws.amazon.com/support">AWS Support Center</a>. Use the <a>DescribeCases</a> operation to get the <code>displayId</code>.</p>
    ///         <note>
    ///             <ul>
    ///                <li>
    ///                     <p>You must have a Business or Enterprise Support plan to use the AWS Support
    ///                         API. </p>
    ///                 </li>
    ///                <li>
    ///                     <p>If you call the AWS Support API from an account that does not have a
    ///                         Business or Enterprise Support plan, the
    ///                             <code>SubscriptionRequiredException</code> error message appears. For
    ///                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">AWS Support</a>.</p>
    ///                 </li>
    ///             </ul>
    ///         </note>
    func createCase(input: CreateCaseInput) async throws -> CreateCaseOutputResponse
    {
        typealias createCaseContinuation = CheckedContinuation<CreateCaseOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: createCaseContinuation) in
            createCase(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// <p>Returns the attachment that has the specified ID. Attachments can include screenshots,
    ///             error logs, or other files that describe your issue. Attachment IDs are generated by the
    ///             case management system when you add an attachment to a case or case communication.
    ///             Attachment IDs are returned in the <a>AttachmentDetails</a> objects that are
    ///             returned by the <a>DescribeCommunications</a> operation.</p>
    ///         <note>
    ///             <ul>
    ///                <li>
    ///                     <p>You must have a Business or Enterprise Support plan to use the AWS Support
    ///                         API. </p>
    ///                 </li>
    ///                <li>
    ///                     <p>If you call the AWS Support API from an account that does not have a
    ///                         Business or Enterprise Support plan, the
    ///                             <code>SubscriptionRequiredException</code> error message appears. For
    ///                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">AWS Support</a>.</p>
    ///                 </li>
    ///             </ul>
    ///         </note>
    func describeAttachment(input: DescribeAttachmentInput) async throws -> DescribeAttachmentOutputResponse
    {
        typealias describeAttachmentContinuation = CheckedContinuation<DescribeAttachmentOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: describeAttachmentContinuation) in
            describeAttachment(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// <p>Returns a list of cases that you specify by passing one or more case IDs. You can use
    ///             the <code>afterTime</code> and <code>beforeTime</code> parameters to filter the cases by
    ///             date. You can set values for the <code>includeResolvedCases</code> and
    ///                 <code>includeCommunications</code> parameters to specify how much information to
    ///             return.</p>
    ///         <p>The response returns the following in JSON format:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>One or more <a href="https://docs.aws.amazon.com/awssupport/latest/APIReference/API_CaseDetails.html">CaseDetails</a> data types.</p>
    ///             </li>
    ///             <li>
    ///                 <p>One or more <code>nextToken</code> values, which specify where to paginate the
    ///                     returned records represented by the <code>CaseDetails</code> objects.</p>
    ///             </li>
    ///          </ul>
    ///         <p>Case data is available for 12 months after creation. If a case was created more than
    ///             12 months ago, a request might return an error.</p>
    ///         <note>
    ///             <ul>
    ///                <li>
    ///                     <p>You must have a Business or Enterprise Support plan to use the AWS Support
    ///                         API. </p>
    ///                 </li>
    ///                <li>
    ///                     <p>If you call the AWS Support API from an account that does not have a
    ///                         Business or Enterprise Support plan, the
    ///                             <code>SubscriptionRequiredException</code> error message appears. For
    ///                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">AWS Support</a>.</p>
    ///                 </li>
    ///             </ul>
    ///         </note>
    func describeCases(input: DescribeCasesInput) async throws -> DescribeCasesOutputResponse
    {
        typealias describeCasesContinuation = CheckedContinuation<DescribeCasesOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: describeCasesContinuation) in
            describeCases(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// <p>Returns communications and attachments for one or more support cases. Use the
    ///                 <code>afterTime</code> and <code>beforeTime</code> parameters to filter by date. You
    ///             can use the <code>caseId</code> parameter to restrict the results to a specific
    ///             case.</p>
    ///         <p>Case data is available for 12 months after creation. If a case was created more than
    ///             12 months ago, a request for data might cause an error.</p>
    ///         <p>You can use the <code>maxResults</code> and <code>nextToken</code> parameters to
    ///             control the pagination of the results. Set <code>maxResults</code> to the number of
    ///             cases that you want to display on each page, and use <code>nextToken</code> to specify
    ///             the resumption of pagination.</p>
    ///         <note>
    ///             <ul>
    ///                <li>
    ///                     <p>You must have a Business or Enterprise Support plan to use the AWS Support
    ///                         API. </p>
    ///                 </li>
    ///                <li>
    ///                     <p>If you call the AWS Support API from an account that does not have a
    ///                         Business or Enterprise Support plan, the
    ///                             <code>SubscriptionRequiredException</code> error message appears. For
    ///                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">AWS Support</a>.</p>
    ///                 </li>
    ///             </ul>
    ///         </note>
    func describeCommunications(input: DescribeCommunicationsInput) async throws -> DescribeCommunicationsOutputResponse
    {
        typealias describeCommunicationsContinuation = CheckedContinuation<DescribeCommunicationsOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: describeCommunicationsContinuation) in
            describeCommunications(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// <p>Returns the current list of AWS services and a list of service categories for each
    ///             service. You then use service names and categories in your <a>CreateCase</a>
    ///             requests. Each AWS service has its own set of categories.</p>
    ///         <p>The service codes and category codes correspond to the values that appear in the
    ///                 <b>Service</b> and <b>Category</b> lists on the AWS Support Center <a href="https://console.aws.amazon.com/support/home#/case/create">Create Case</a> page. The values in those fields
    ///             don't necessarily match the service codes and categories returned by the
    ///                 <code>DescribeServices</code> operation. Always use the service codes and categories
    ///             that the <code>DescribeServices</code> operation returns, so that you have the most
    ///             recent set of service and category codes.</p>
    ///         <note>
    ///             <ul>
    ///                <li>
    ///                     <p>You must have a Business or Enterprise Support plan to use the AWS Support
    ///                         API. </p>
    ///                 </li>
    ///                <li>
    ///                     <p>If you call the AWS Support API from an account that does not have a
    ///                         Business or Enterprise Support plan, the
    ///                             <code>SubscriptionRequiredException</code> error message appears. For
    ///                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">AWS Support</a>.</p>
    ///                 </li>
    ///             </ul>
    ///         </note>
    func describeServices(input: DescribeServicesInput) async throws -> DescribeServicesOutputResponse
    {
        typealias describeServicesContinuation = CheckedContinuation<DescribeServicesOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: describeServicesContinuation) in
            describeServices(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// <p>Returns the list of severity levels that you can assign to a support case. The severity
    ///             level for a case is also a field in the <a>CaseDetails</a> data type that you
    ///             include for a <a>CreateCase</a> request.</p>
    ///         <note>
    ///             <ul>
    ///                <li>
    ///                     <p>You must have a Business or Enterprise Support plan to use the AWS Support
    ///                         API. </p>
    ///                 </li>
    ///                <li>
    ///                     <p>If you call the AWS Support API from an account that does not have a
    ///                         Business or Enterprise Support plan, the
    ///                             <code>SubscriptionRequiredException</code> error message appears. For
    ///                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">AWS Support</a>.</p>
    ///                 </li>
    ///             </ul>
    ///         </note>
    func describeSeverityLevels(input: DescribeSeverityLevelsInput) async throws -> DescribeSeverityLevelsOutputResponse
    {
        typealias describeSeverityLevelsContinuation = CheckedContinuation<DescribeSeverityLevelsOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: describeSeverityLevelsContinuation) in
            describeSeverityLevels(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// <p>Returns the refresh status of the AWS Trusted Advisor checks that have the specified check
    ///             IDs. You can get the check IDs by calling the <a>DescribeTrustedAdvisorChecks</a> operation.</p>
    ///         <p>Some checks are refreshed automatically, and you can't return their refresh statuses
    ///             by using the <code>DescribeTrustedAdvisorCheckRefreshStatuses</code> operation. If you
    ///             call this operation for these checks, you might see an
    ///                 <code>InvalidParameterValue</code> error.</p>
    ///         <note>
    ///             <ul>
    ///                <li>
    ///                     <p>You must have a Business or Enterprise Support plan to use the AWS Support
    ///                         API. </p>
    ///                 </li>
    ///                <li>
    ///                     <p>If you call the AWS Support API from an account that does not have a
    ///                         Business or Enterprise Support plan, the
    ///                             <code>SubscriptionRequiredException</code> error message appears. For
    ///                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">AWS Support</a>.</p>
    ///                 </li>
    ///             </ul>
    ///         </note>
    func describeTrustedAdvisorCheckRefreshStatuses(input: DescribeTrustedAdvisorCheckRefreshStatusesInput) async throws -> DescribeTrustedAdvisorCheckRefreshStatusesOutputResponse
    {
        typealias describeTrustedAdvisorCheckRefreshStatusesContinuation = CheckedContinuation<DescribeTrustedAdvisorCheckRefreshStatusesOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: describeTrustedAdvisorCheckRefreshStatusesContinuation) in
            describeTrustedAdvisorCheckRefreshStatuses(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// <p>Returns the results of the AWS Trusted Advisor check that has the specified check ID. You
    ///             can get the check IDs by calling the <a>DescribeTrustedAdvisorChecks</a>
    ///             operation.</p>
    ///         <p>The response contains a <a>TrustedAdvisorCheckResult</a> object, which
    ///             contains these three objects:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>
    ///                     <a>TrustedAdvisorCategorySpecificSummary</a>
    ///                 </p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                     <a>TrustedAdvisorResourceDetail</a>
    ///                 </p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                     <a>TrustedAdvisorResourcesSummary</a>
    ///                 </p>
    ///             </li>
    ///          </ul>
    ///         <p>In addition, the response contains these fields:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>
    ///                     <b>status</b> - The alert status of the check
    ///                     can be <code>ok</code> (green), <code>warning</code> (yellow),
    ///                         <code>error</code> (red), or <code>not_available</code>.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                     <b>timestamp</b> - The time of the last refresh
    ///                     of the check.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                     <b>checkId</b> - The unique identifier for the
    ///                     check.</p>
    ///             </li>
    ///          </ul>
    ///
    ///         <note>
    ///             <ul>
    ///                <li>
    ///                     <p>You must have a Business or Enterprise Support plan to use the AWS Support
    ///                         API. </p>
    ///                 </li>
    ///                <li>
    ///                     <p>If you call the AWS Support API from an account that does not have a
    ///                         Business or Enterprise Support plan, the
    ///                             <code>SubscriptionRequiredException</code> error message appears. For
    ///                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">AWS Support</a>.</p>
    ///                 </li>
    ///             </ul>
    ///         </note>
    func describeTrustedAdvisorCheckResult(input: DescribeTrustedAdvisorCheckResultInput) async throws -> DescribeTrustedAdvisorCheckResultOutputResponse
    {
        typealias describeTrustedAdvisorCheckResultContinuation = CheckedContinuation<DescribeTrustedAdvisorCheckResultOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: describeTrustedAdvisorCheckResultContinuation) in
            describeTrustedAdvisorCheckResult(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// <p>Returns the results for the AWS Trusted Advisor check summaries for the check IDs that you
    ///             specified. You can get the check IDs by calling the <a>DescribeTrustedAdvisorChecks</a> operation.</p>
    ///         <p>The response contains an array of <a>TrustedAdvisorCheckSummary</a>
    ///             objects.</p>
    ///         <note>
    ///             <ul>
    ///                <li>
    ///                     <p>You must have a Business or Enterprise Support plan to use the AWS Support
    ///                         API. </p>
    ///                 </li>
    ///                <li>
    ///                     <p>If you call the AWS Support API from an account that does not have a
    ///                         Business or Enterprise Support plan, the
    ///                             <code>SubscriptionRequiredException</code> error message appears. For
    ///                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">AWS Support</a>.</p>
    ///                 </li>
    ///             </ul>
    ///         </note>
    func describeTrustedAdvisorCheckSummaries(input: DescribeTrustedAdvisorCheckSummariesInput) async throws -> DescribeTrustedAdvisorCheckSummariesOutputResponse
    {
        typealias describeTrustedAdvisorCheckSummariesContinuation = CheckedContinuation<DescribeTrustedAdvisorCheckSummariesOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: describeTrustedAdvisorCheckSummariesContinuation) in
            describeTrustedAdvisorCheckSummaries(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// <p>Returns information about all available AWS Trusted Advisor checks, including the name, ID,
    ///             category, description, and metadata. You must specify a language code. The AWS Support API
    ///             currently supports English ("en") and Japanese ("ja"). The response contains a <a>TrustedAdvisorCheckDescription</a> object for each check. You must set the
    ///             AWS Region to us-east-1.</p>
    ///
    ///
    ///         <note>
    ///             <ul>
    ///                <li>
    ///                     <p>You must have a Business or Enterprise Support plan to use the AWS Support
    ///                         API. </p>
    ///                 </li>
    ///                <li>
    ///                     <p>If you call the AWS Support API from an account that does not have a
    ///                         Business or Enterprise Support plan, the
    ///                         <code>SubscriptionRequiredException</code> error message appears. For
    ///                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">AWS Support</a>.</p>
    ///                 </li>
    ///                <li>
    ///                     <p>The names and descriptions for Trusted Advisor checks are subject to change. We recommend
    ///                         that you specify the check ID in your code to uniquely identify a check.</p>
    ///                 </li>
    ///             </ul>
    ///         </note>
    func describeTrustedAdvisorChecks(input: DescribeTrustedAdvisorChecksInput) async throws -> DescribeTrustedAdvisorChecksOutputResponse
    {
        typealias describeTrustedAdvisorChecksContinuation = CheckedContinuation<DescribeTrustedAdvisorChecksOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: describeTrustedAdvisorChecksContinuation) in
            describeTrustedAdvisorChecks(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// <p>Refreshes the AWS Trusted Advisor check that you specify using the check ID. You can get the
    ///             check IDs by calling the <a>DescribeTrustedAdvisorChecks</a>
    ///             operation.</p>
    ///         <note>
    ///             <p>Some checks are refreshed automatically. If you call the
    ///                     <code>RefreshTrustedAdvisorCheck</code> operation to refresh them, you might see
    ///                 the <code>InvalidParameterValue</code> error.</p>
    ///         </note>
    ///         <p>The response contains a <a>TrustedAdvisorCheckRefreshStatus</a>
    ///             object.</p>
    ///         <note>
    ///             <ul>
    ///                <li>
    ///                     <p>You must have a Business or Enterprise Support plan to use the AWS Support
    ///                         API. </p>
    ///                 </li>
    ///                <li>
    ///                     <p>If you call the AWS Support API from an account that does not have a
    ///                         Business or Enterprise Support plan, the
    ///                             <code>SubscriptionRequiredException</code> error message appears. For
    ///                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">AWS Support</a>.</p>
    ///                 </li>
    ///             </ul>
    ///         </note>
    func refreshTrustedAdvisorCheck(input: RefreshTrustedAdvisorCheckInput) async throws -> RefreshTrustedAdvisorCheckOutputResponse
    {
        typealias refreshTrustedAdvisorCheckContinuation = CheckedContinuation<RefreshTrustedAdvisorCheckOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: refreshTrustedAdvisorCheckContinuation) in
            refreshTrustedAdvisorCheck(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// <p>Resolves a support case. This operation takes a <code>caseId</code> and returns the
    ///             initial and final state of the case.</p>
    ///         <note>
    ///             <ul>
    ///                <li>
    ///                     <p>You must have a Business or Enterprise Support plan to use the AWS Support
    ///                         API. </p>
    ///                 </li>
    ///                <li>
    ///                     <p>If you call the AWS Support API from an account that does not have a
    ///                         Business or Enterprise Support plan, the
    ///                             <code>SubscriptionRequiredException</code> error message appears. For
    ///                         information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">AWS Support</a>.</p>
    ///                 </li>
    ///             </ul>
    ///         </note>
    func resolveCase(input: ResolveCaseInput) async throws -> ResolveCaseOutputResponse
    {
        typealias resolveCaseContinuation = CheckedContinuation<ResolveCaseOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: resolveCaseContinuation) in
            resolveCase(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

}
#endif
