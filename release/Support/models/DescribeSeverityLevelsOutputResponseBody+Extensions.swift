// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeSeverityLevelsOutputResponseBody: Equatable {
    public let severityLevels: [SeverityLevel]?
}

extension DescribeSeverityLevelsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case severityLevels
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let severityLevelsContainer = try containerValues.decodeIfPresent([SeverityLevel?].self, forKey: .severityLevels)
        var severityLevelsDecoded0:[SeverityLevel]? = nil
        if let severityLevelsContainer = severityLevelsContainer {
            severityLevelsDecoded0 = [SeverityLevel]()
            for structure0 in severityLevelsContainer {
                if let structure0 = structure0 {
                    severityLevelsDecoded0?.append(structure0)
                }
            }
        }
        severityLevels = severityLevelsDecoded0
    }
}
