// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// This section provides documentation for the AWS RoboMaker API operations.
public protocol RoboMakerClientProtocol {
    /// Deletes one or more worlds in a batch operation.
    func batchDeleteWorlds(input: BatchDeleteWorldsInput, completion: @escaping (ClientRuntime.SdkResult<BatchDeleteWorldsOutputResponse, BatchDeleteWorldsOutputError>) -> Void)
    /// Describes one or more simulation jobs.
    func batchDescribeSimulationJob(input: BatchDescribeSimulationJobInput, completion: @escaping (ClientRuntime.SdkResult<BatchDescribeSimulationJobOutputResponse, BatchDescribeSimulationJobOutputError>) -> Void)
    /// Cancels the specified deployment job.
    func cancelDeploymentJob(input: CancelDeploymentJobInput, completion: @escaping (ClientRuntime.SdkResult<CancelDeploymentJobOutputResponse, CancelDeploymentJobOutputError>) -> Void)
    /// Cancels the specified simulation job.
    func cancelSimulationJob(input: CancelSimulationJobInput, completion: @escaping (ClientRuntime.SdkResult<CancelSimulationJobOutputResponse, CancelSimulationJobOutputError>) -> Void)
    /// Cancels a simulation job batch. When you cancel a simulation job batch, you are also cancelling all of the active simulation jobs created as part of the batch.
    func cancelSimulationJobBatch(input: CancelSimulationJobBatchInput, completion: @escaping (ClientRuntime.SdkResult<CancelSimulationJobBatchOutputResponse, CancelSimulationJobBatchOutputError>) -> Void)
    /// Cancels the specified export job.
    func cancelWorldExportJob(input: CancelWorldExportJobInput, completion: @escaping (ClientRuntime.SdkResult<CancelWorldExportJobOutputResponse, CancelWorldExportJobOutputError>) -> Void)
    /// Cancels the specified world generator job.
    func cancelWorldGenerationJob(input: CancelWorldGenerationJobInput, completion: @escaping (ClientRuntime.SdkResult<CancelWorldGenerationJobOutputResponse, CancelWorldGenerationJobOutputError>) -> Void)
    /// Deploys a specific version of a robot application to robots in a fleet. The robot application must have a numbered applicationVersion for consistency reasons. To create a new version, use CreateRobotApplicationVersion or see [Creating a Robot Application Version](https://docs.aws.amazon.com/robomaker/latest/dg/create-robot-application-version.html). After 90 days, deployment jobs expire and will be deleted. They will no longer be accessible.
    func createDeploymentJob(input: CreateDeploymentJobInput, completion: @escaping (ClientRuntime.SdkResult<CreateDeploymentJobOutputResponse, CreateDeploymentJobOutputError>) -> Void)
    /// Creates a fleet, a logical group of robots running the same robot application.
    func createFleet(input: CreateFleetInput, completion: @escaping (ClientRuntime.SdkResult<CreateFleetOutputResponse, CreateFleetOutputError>) -> Void)
    /// Creates a robot.
    func createRobot(input: CreateRobotInput, completion: @escaping (ClientRuntime.SdkResult<CreateRobotOutputResponse, CreateRobotOutputError>) -> Void)
    /// Creates a robot application.
    func createRobotApplication(input: CreateRobotApplicationInput, completion: @escaping (ClientRuntime.SdkResult<CreateRobotApplicationOutputResponse, CreateRobotApplicationOutputError>) -> Void)
    /// Creates a version of a robot application.
    func createRobotApplicationVersion(input: CreateRobotApplicationVersionInput, completion: @escaping (ClientRuntime.SdkResult<CreateRobotApplicationVersionOutputResponse, CreateRobotApplicationVersionOutputError>) -> Void)
    /// Creates a simulation application.
    func createSimulationApplication(input: CreateSimulationApplicationInput, completion: @escaping (ClientRuntime.SdkResult<CreateSimulationApplicationOutputResponse, CreateSimulationApplicationOutputError>) -> Void)
    /// Creates a simulation application with a specific revision id.
    func createSimulationApplicationVersion(input: CreateSimulationApplicationVersionInput, completion: @escaping (ClientRuntime.SdkResult<CreateSimulationApplicationVersionOutputResponse, CreateSimulationApplicationVersionOutputError>) -> Void)
    /// Creates a simulation job. After 90 days, simulation jobs expire and will be deleted. They will no longer be accessible.
    func createSimulationJob(input: CreateSimulationJobInput, completion: @escaping (ClientRuntime.SdkResult<CreateSimulationJobOutputResponse, CreateSimulationJobOutputError>) -> Void)
    /// Creates a world export job.
    func createWorldExportJob(input: CreateWorldExportJobInput, completion: @escaping (ClientRuntime.SdkResult<CreateWorldExportJobOutputResponse, CreateWorldExportJobOutputError>) -> Void)
    /// Creates worlds using the specified template.
    func createWorldGenerationJob(input: CreateWorldGenerationJobInput, completion: @escaping (ClientRuntime.SdkResult<CreateWorldGenerationJobOutputResponse, CreateWorldGenerationJobOutputError>) -> Void)
    /// Creates a world template.
    func createWorldTemplate(input: CreateWorldTemplateInput, completion: @escaping (ClientRuntime.SdkResult<CreateWorldTemplateOutputResponse, CreateWorldTemplateOutputError>) -> Void)
    /// Deletes a fleet.
    func deleteFleet(input: DeleteFleetInput, completion: @escaping (ClientRuntime.SdkResult<DeleteFleetOutputResponse, DeleteFleetOutputError>) -> Void)
    /// Deletes a robot.
    func deleteRobot(input: DeleteRobotInput, completion: @escaping (ClientRuntime.SdkResult<DeleteRobotOutputResponse, DeleteRobotOutputError>) -> Void)
    /// Deletes a robot application.
    func deleteRobotApplication(input: DeleteRobotApplicationInput, completion: @escaping (ClientRuntime.SdkResult<DeleteRobotApplicationOutputResponse, DeleteRobotApplicationOutputError>) -> Void)
    /// Deletes a simulation application.
    func deleteSimulationApplication(input: DeleteSimulationApplicationInput, completion: @escaping (ClientRuntime.SdkResult<DeleteSimulationApplicationOutputResponse, DeleteSimulationApplicationOutputError>) -> Void)
    /// Deletes a world template.
    func deleteWorldTemplate(input: DeleteWorldTemplateInput, completion: @escaping (ClientRuntime.SdkResult<DeleteWorldTemplateOutputResponse, DeleteWorldTemplateOutputError>) -> Void)
    /// Deregisters a robot.
    func deregisterRobot(input: DeregisterRobotInput, completion: @escaping (ClientRuntime.SdkResult<DeregisterRobotOutputResponse, DeregisterRobotOutputError>) -> Void)
    /// Describes a deployment job.
    func describeDeploymentJob(input: DescribeDeploymentJobInput, completion: @escaping (ClientRuntime.SdkResult<DescribeDeploymentJobOutputResponse, DescribeDeploymentJobOutputError>) -> Void)
    /// Describes a fleet.
    func describeFleet(input: DescribeFleetInput, completion: @escaping (ClientRuntime.SdkResult<DescribeFleetOutputResponse, DescribeFleetOutputError>) -> Void)
    /// Describes a robot.
    func describeRobot(input: DescribeRobotInput, completion: @escaping (ClientRuntime.SdkResult<DescribeRobotOutputResponse, DescribeRobotOutputError>) -> Void)
    /// Describes a robot application.
    func describeRobotApplication(input: DescribeRobotApplicationInput, completion: @escaping (ClientRuntime.SdkResult<DescribeRobotApplicationOutputResponse, DescribeRobotApplicationOutputError>) -> Void)
    /// Describes a simulation application.
    func describeSimulationApplication(input: DescribeSimulationApplicationInput, completion: @escaping (ClientRuntime.SdkResult<DescribeSimulationApplicationOutputResponse, DescribeSimulationApplicationOutputError>) -> Void)
    /// Describes a simulation job.
    func describeSimulationJob(input: DescribeSimulationJobInput, completion: @escaping (ClientRuntime.SdkResult<DescribeSimulationJobOutputResponse, DescribeSimulationJobOutputError>) -> Void)
    /// Describes a simulation job batch.
    func describeSimulationJobBatch(input: DescribeSimulationJobBatchInput, completion: @escaping (ClientRuntime.SdkResult<DescribeSimulationJobBatchOutputResponse, DescribeSimulationJobBatchOutputError>) -> Void)
    /// Describes a world.
    func describeWorld(input: DescribeWorldInput, completion: @escaping (ClientRuntime.SdkResult<DescribeWorldOutputResponse, DescribeWorldOutputError>) -> Void)
    /// Describes a world export job.
    func describeWorldExportJob(input: DescribeWorldExportJobInput, completion: @escaping (ClientRuntime.SdkResult<DescribeWorldExportJobOutputResponse, DescribeWorldExportJobOutputError>) -> Void)
    /// Describes a world generation job.
    func describeWorldGenerationJob(input: DescribeWorldGenerationJobInput, completion: @escaping (ClientRuntime.SdkResult<DescribeWorldGenerationJobOutputResponse, DescribeWorldGenerationJobOutputError>) -> Void)
    /// Describes a world template.
    func describeWorldTemplate(input: DescribeWorldTemplateInput, completion: @escaping (ClientRuntime.SdkResult<DescribeWorldTemplateOutputResponse, DescribeWorldTemplateOutputError>) -> Void)
    /// Gets the world template body.
    func getWorldTemplateBody(input: GetWorldTemplateBodyInput, completion: @escaping (ClientRuntime.SdkResult<GetWorldTemplateBodyOutputResponse, GetWorldTemplateBodyOutputError>) -> Void)
    /// Returns a list of deployment jobs for a fleet. You can optionally provide filters to retrieve specific deployment jobs.
    func listDeploymentJobs(input: ListDeploymentJobsInput, completion: @escaping (ClientRuntime.SdkResult<ListDeploymentJobsOutputResponse, ListDeploymentJobsOutputError>) -> Void)
    /// Returns a list of fleets. You can optionally provide filters to retrieve specific fleets.
    func listFleets(input: ListFleetsInput, completion: @escaping (ClientRuntime.SdkResult<ListFleetsOutputResponse, ListFleetsOutputError>) -> Void)
    /// Returns a list of robot application. You can optionally provide filters to retrieve specific robot applications.
    func listRobotApplications(input: ListRobotApplicationsInput, completion: @escaping (ClientRuntime.SdkResult<ListRobotApplicationsOutputResponse, ListRobotApplicationsOutputError>) -> Void)
    /// Returns a list of robots. You can optionally provide filters to retrieve specific robots.
    func listRobots(input: ListRobotsInput, completion: @escaping (ClientRuntime.SdkResult<ListRobotsOutputResponse, ListRobotsOutputError>) -> Void)
    /// Returns a list of simulation applications. You can optionally provide filters to retrieve specific simulation applications.
    func listSimulationApplications(input: ListSimulationApplicationsInput, completion: @escaping (ClientRuntime.SdkResult<ListSimulationApplicationsOutputResponse, ListSimulationApplicationsOutputError>) -> Void)
    /// Returns a list simulation job batches. You can optionally provide filters to retrieve specific simulation batch jobs.
    func listSimulationJobBatches(input: ListSimulationJobBatchesInput, completion: @escaping (ClientRuntime.SdkResult<ListSimulationJobBatchesOutputResponse, ListSimulationJobBatchesOutputError>) -> Void)
    /// Returns a list of simulation jobs. You can optionally provide filters to retrieve specific simulation jobs.
    func listSimulationJobs(input: ListSimulationJobsInput, completion: @escaping (ClientRuntime.SdkResult<ListSimulationJobsOutputResponse, ListSimulationJobsOutputError>) -> Void)
    /// Lists all tags on a AWS RoboMaker resource.
    func listTagsForResource(input: ListTagsForResourceInput, completion: @escaping (ClientRuntime.SdkResult<ListTagsForResourceOutputResponse, ListTagsForResourceOutputError>) -> Void)
    /// Lists world export jobs.
    func listWorldExportJobs(input: ListWorldExportJobsInput, completion: @escaping (ClientRuntime.SdkResult<ListWorldExportJobsOutputResponse, ListWorldExportJobsOutputError>) -> Void)
    /// Lists world generator jobs.
    func listWorldGenerationJobs(input: ListWorldGenerationJobsInput, completion: @escaping (ClientRuntime.SdkResult<ListWorldGenerationJobsOutputResponse, ListWorldGenerationJobsOutputError>) -> Void)
    /// Lists worlds.
    func listWorlds(input: ListWorldsInput, completion: @escaping (ClientRuntime.SdkResult<ListWorldsOutputResponse, ListWorldsOutputError>) -> Void)
    /// Lists world templates.
    func listWorldTemplates(input: ListWorldTemplatesInput, completion: @escaping (ClientRuntime.SdkResult<ListWorldTemplatesOutputResponse, ListWorldTemplatesOutputError>) -> Void)
    /// Registers a robot with a fleet.
    func registerRobot(input: RegisterRobotInput, completion: @escaping (ClientRuntime.SdkResult<RegisterRobotOutputResponse, RegisterRobotOutputError>) -> Void)
    /// Restarts a running simulation job.
    func restartSimulationJob(input: RestartSimulationJobInput, completion: @escaping (ClientRuntime.SdkResult<RestartSimulationJobOutputResponse, RestartSimulationJobOutputError>) -> Void)
    /// Starts a new simulation job batch. The batch is defined using one or more SimulationJobRequest objects.
    func startSimulationJobBatch(input: StartSimulationJobBatchInput, completion: @escaping (ClientRuntime.SdkResult<StartSimulationJobBatchOutputResponse, StartSimulationJobBatchOutputError>) -> Void)
    /// Syncrhonizes robots in a fleet to the latest deployment. This is helpful if robots were added after a deployment.
    func syncDeploymentJob(input: SyncDeploymentJobInput, completion: @escaping (ClientRuntime.SdkResult<SyncDeploymentJobOutputResponse, SyncDeploymentJobOutputError>) -> Void)
    /// Adds or edits tags for a AWS RoboMaker resource. Each tag consists of a tag key and a tag value. Tag keys and tag values are both required, but tag values can be empty strings. For information about the rules that apply to tag keys and tag values, see [User-Defined Tag Restrictions](https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/allocation-tag-restrictions.html) in the AWS Billing and Cost Management User Guide.
    func tagResource(input: TagResourceInput, completion: @escaping (ClientRuntime.SdkResult<TagResourceOutputResponse, TagResourceOutputError>) -> Void)
    /// Removes the specified tags from the specified AWS RoboMaker resource. To remove a tag, specify the tag key. To change the tag value of an existing tag key, use [TagResource](https://docs.aws.amazon.com/robomaker/latest/dg/API_TagResource.html).
    func untagResource(input: UntagResourceInput, completion: @escaping (ClientRuntime.SdkResult<UntagResourceOutputResponse, UntagResourceOutputError>) -> Void)
    /// Updates a robot application.
    func updateRobotApplication(input: UpdateRobotApplicationInput, completion: @escaping (ClientRuntime.SdkResult<UpdateRobotApplicationOutputResponse, UpdateRobotApplicationOutputError>) -> Void)
    /// Updates a simulation application.
    func updateSimulationApplication(input: UpdateSimulationApplicationInput, completion: @escaping (ClientRuntime.SdkResult<UpdateSimulationApplicationOutputResponse, UpdateSimulationApplicationOutputError>) -> Void)
    /// Updates a world template.
    func updateWorldTemplate(input: UpdateWorldTemplateInput, completion: @escaping (ClientRuntime.SdkResult<UpdateWorldTemplateOutputResponse, UpdateWorldTemplateOutputError>) -> Void)
}

public enum RoboMakerClientTypes {}
