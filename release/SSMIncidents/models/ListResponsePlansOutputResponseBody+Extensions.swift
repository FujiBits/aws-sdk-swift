// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListResponsePlansOutputResponseBody: Equatable {
    public let responsePlanSummaries: [ResponsePlanSummary]?
    public let nextToken: String?
}

extension ListResponsePlansOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case responsePlanSummaries
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let responsePlanSummariesContainer = try containerValues.decodeIfPresent([ResponsePlanSummary?].self, forKey: .responsePlanSummaries)
        var responsePlanSummariesDecoded0:[ResponsePlanSummary]? = nil
        if let responsePlanSummariesContainer = responsePlanSummariesContainer {
            responsePlanSummariesDecoded0 = [ResponsePlanSummary]()
            for structure0 in responsePlanSummariesContainer {
                if let structure0 = structure0 {
                    responsePlanSummariesDecoded0?.append(structure0)
                }
            }
        }
        responsePlanSummaries = responsePlanSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
