// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListBootstrapActionsOutputResponseBody: Equatable {
    public let bootstrapActions: [Command]?
    public let marker: String?
}

extension ListBootstrapActionsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case bootstrapActions = "BootstrapActions"
        case marker = "Marker"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let bootstrapActionsContainer = try containerValues.decodeIfPresent([Command?].self, forKey: .bootstrapActions)
        var bootstrapActionsDecoded0:[Command]? = nil
        if let bootstrapActionsContainer = bootstrapActionsContainer {
            bootstrapActionsDecoded0 = [Command]()
            for structure0 in bootstrapActionsContainer {
                if let structure0 = structure0 {
                    bootstrapActionsDecoded0?.append(structure0)
                }
            }
        }
        bootstrapActions = bootstrapActionsDecoded0
        let markerDecoded = try containerValues.decodeIfPresent(String.self, forKey: .marker)
        marker = markerDecoded
    }
}
