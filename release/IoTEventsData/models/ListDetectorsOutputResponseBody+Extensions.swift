// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDetectorsOutputResponseBody: Equatable {
    public let detectorSummaries: [DetectorSummary]?
    public let nextToken: String?
}

extension ListDetectorsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case detectorSummaries
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let detectorSummariesContainer = try containerValues.decodeIfPresent([DetectorSummary?].self, forKey: .detectorSummaries)
        var detectorSummariesDecoded0:[DetectorSummary]? = nil
        if let detectorSummariesContainer = detectorSummariesContainer {
            detectorSummariesDecoded0 = [DetectorSummary]()
            for structure0 in detectorSummariesContainer {
                if let structure0 = structure0 {
                    detectorSummariesDecoded0?.append(structure0)
                }
            }
        }
        detectorSummaries = detectorSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
