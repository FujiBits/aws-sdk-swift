// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>An object that determines whether any HTTP headers (and if so, which headers) are included
/// 			in requests that CloudFront sends to the origin.</p>
public struct OriginRequestPolicyHeadersConfig: Equatable {
    /// <p>Determines whether any HTTP headers are included in requests that CloudFront sends to the origin.
    /// 			Valid values are:</p>
    /// 		       <ul>
    ///             <li>
    /// 				           <p>
    ///                   <code>none</code> – HTTP headers are not included in requests that CloudFront sends to the
    /// 					origin. Even when this field is set to <code>none</code>, any headers that are
    /// 					listed in a <code>CachePolicy</code>
    ///                   <i>are</i> included in origin
    /// 					requests.</p>
    /// 			         </li>
    ///             <li>
    /// 				           <p>
    ///                   <code>whitelist</code> – The HTTP headers that are listed in the <code>Headers</code> type
    /// 					are included in requests that CloudFront sends to the origin.</p>
    /// 			         </li>
    ///             <li>
    /// 				           <p>
    ///                   <code>allViewer</code> – All HTTP headers in viewer requests are included in requests that
    /// 					CloudFront sends to the origin.</p>
    /// 			         </li>
    ///             <li>
    /// 				           <p>
    ///                   <code>allViewerAndWhitelistCloudFront</code> – All HTTP headers in viewer requests and the
    /// 					additional CloudFront headers that are listed in the <code>Headers</code> type are
    /// 					included in requests that CloudFront sends to the origin. The additional headers are
    /// 					added by CloudFront.</p>
    /// 			         </li>
    ///          </ul>
    public let headerBehavior: OriginRequestPolicyHeaderBehavior?
    /// <p>Contains a list of HTTP header names.</p>
    public let headers: Headers?

    public init (
        headerBehavior: OriginRequestPolicyHeaderBehavior? = nil,
        headers: Headers? = nil
    )
    {
        self.headerBehavior = headerBehavior
        self.headers = headers
    }
}

extension OriginRequestPolicyHeadersConfig: CustomDebugStringConvertible {
    public var debugDescription: String {
        "OriginRequestPolicyHeadersConfig(headerBehavior: \(String(describing: headerBehavior)), headers: \(String(describing: headers)))"}
}
