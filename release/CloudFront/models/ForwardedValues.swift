// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>This field is deprecated. We recommend that you use a cache policy or an origin
/// 			request policy instead of this field.</p>
/// 		       <p>If you want to include values in the cache key, use a cache policy. For more information,
/// 			see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy">Creating cache policies</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>
/// 		       <p>If you want to send values to the origin but not include them in the cache key, use an
/// 			origin request policy. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy">Creating origin request policies</a> in the
/// 			<i>Amazon CloudFront Developer Guide</i>.</p>
/// 		       <p>A complex type that specifies how CloudFront handles query strings, cookies, and HTTP headers.</p>
public struct ForwardedValues: Equatable {
    /// <p>This field is deprecated. We recommend that you use a cache policy or an origin
    /// 			request policy instead of this field.</p>
    /// 		       <p>If you want to include cookies in the cache key, use a cache policy. For more
    /// 			information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy">Creating cache policies</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>
    /// 		       <p>If you want to send cookies to the origin but not include them in the cache key, use an
    /// 			origin request policy. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy">Creating origin request policies</a> in the
    /// 			<i>Amazon CloudFront Developer Guide</i>.</p>
    /// 		       <p>A complex type that specifies whether you want CloudFront to forward cookies to the origin
    /// 			and, if so, which ones. For more information about forwarding cookies to the origin, see
    /// 			<a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Cookies.html">How CloudFront Forwards, Caches, and Logs Cookies</a> in the
    /// 			<i>Amazon CloudFront Developer Guide</i>.</p>
    public let cookies: CookiePreference?
    /// <p>This field is deprecated. We recommend that you use a cache policy or an origin
    /// 			request policy instead of this field.</p>
    /// 		       <p>If you want to include headers in the cache key, use a cache policy. For more information,
    /// 			see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy">Creating cache policies</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>
    /// 		       <p>If you want to send headers to the origin but not include them in the cache key, use an
    /// 			origin request policy. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy">Creating origin request policies</a> in the
    /// 			<i>Amazon CloudFront Developer Guide</i>.</p>
    /// 		       <p>A complex type that specifies the <code>Headers</code>, if any, that you want CloudFront to forward to the
    /// 			origin for this cache behavior (whitelisted headers). For the headers that you specify, CloudFront also caches
    /// 			separate versions of a specified object that is based on the header values in viewer requests.</p>
    /// 		       <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/header-caching.html">
    /// 			Caching Content Based on Request Headers</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>
    public let headers: Headers?
    /// <p>This field is deprecated. We recommend that you use a cache policy or an origin
    /// 			request policy instead of this field.</p>
    /// 		       <p>If you want to include query strings in the cache key, use a cache policy. For more
    /// 			information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy">Creating cache policies</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>
    /// 		       <p>If you want to send query strings to the origin but not include them in the cache key, use
    /// 			an origin request policy. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy">Creating origin request policies</a> in the
    /// 			<i>Amazon CloudFront Developer Guide</i>.</p>
    /// 		       <p>Indicates whether you want CloudFront to forward query strings to the origin that is
    /// 			associated with this cache behavior and cache based on the query string parameters. CloudFront
    /// 			behavior depends on the value of <code>QueryString</code> and on the values that you specify
    /// 			for <code>QueryStringCacheKeys</code>, if any:</p>
    /// 		       <p>If you specify true for <code>QueryString</code> and you don't specify any values for
    /// 				<code>QueryStringCacheKeys</code>, CloudFront forwards all query string parameters to the origin
    /// 			and caches based on all query string parameters. Depending on how many query string parameters
    /// 			and values you have, this can adversely affect performance because CloudFront must forward more
    /// 			requests to the origin.</p>
    /// 		       <p>If you specify true for <code>QueryString</code> and you specify one or more values for
    /// 				<code>QueryStringCacheKeys</code>, CloudFront forwards all query string parameters to the origin,
    /// 			but it only caches based on the query string parameters that you specify.</p>
    /// 		       <p>If you specify false for <code>QueryString</code>, CloudFront doesn't forward any query
    /// 			string parameters to the origin, and doesn't cache based on query string parameters.</p>
    /// 		       <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/QueryStringParameters.html">Configuring CloudFront to Cache Based on Query String Parameters</a> in the
    /// 				<i>Amazon CloudFront Developer Guide</i>.</p>
    public let queryString: Bool?
    /// <p>This field is deprecated. We recommend that you use a cache policy or an origin
    /// 			request policy instead of this field.</p>
    /// 		       <p>If you want to include query strings in the cache key, use a cache policy. For more
    /// 			information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy">Creating cache policies</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>
    /// 		       <p>If you want to send query strings to the origin but not include them in the cache key, use
    /// 			an origin request policy. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy">Creating origin request policies</a> in the
    /// 			<i>Amazon CloudFront Developer Guide</i>.</p>
    /// 		       <p>A complex type that contains information about the query string parameters that you
    /// 			want CloudFront to use for caching for this cache behavior.</p>
    public let queryStringCacheKeys: QueryStringCacheKeys?

    public init (
        cookies: CookiePreference? = nil,
        headers: Headers? = nil,
        queryString: Bool? = nil,
        queryStringCacheKeys: QueryStringCacheKeys? = nil
    )
    {
        self.cookies = cookies
        self.headers = headers
        self.queryString = queryString
        self.queryStringCacheKeys = queryStringCacheKeys
    }
}

extension ForwardedValues: CustomDebugStringConvertible {
    public var debugDescription: String {
        "ForwardedValues(cookies: \(String(describing: cookies)), headers: \(String(describing: headers)), queryString: \(String(describing: queryString)), queryStringCacheKeys: \(String(describing: queryStringCacheKeys)))"}
}
