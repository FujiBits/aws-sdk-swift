// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>A complex data type that includes the profile configurations specified for field-level encryption. </p>
public struct FieldLevelEncryptionConfig: Equatable {
    /// <p>A unique number that ensures the request can't be replayed.</p>
    public let callerReference: String?
    /// <p>An optional comment about the configuration. The comment cannot be longer than 128
    /// 			characters.</p>
    public let comment: String?
    /// <p>A complex data type that specifies when to forward content if a content type isn't recognized and profiles to use as by default
    /// 			in a request if a query argument doesn't specify a profile to use.</p>
    public let contentTypeProfileConfig: ContentTypeProfileConfig?
    /// <p>A complex data type that specifies when to forward content if a profile isn't found and the profile that can be provided as a
    /// 			query argument in a request.</p>
    public let queryArgProfileConfig: QueryArgProfileConfig?

    public init (
        callerReference: String? = nil,
        comment: String? = nil,
        contentTypeProfileConfig: ContentTypeProfileConfig? = nil,
        queryArgProfileConfig: QueryArgProfileConfig? = nil
    )
    {
        self.callerReference = callerReference
        self.comment = comment
        self.contentTypeProfileConfig = contentTypeProfileConfig
        self.queryArgProfileConfig = queryArgProfileConfig
    }
}

extension FieldLevelEncryptionConfig: CustomDebugStringConvertible {
    public var debugDescription: String {
        "FieldLevelEncryptionConfig(callerReference: \(String(describing: callerReference)), comment: \(String(describing: comment)), contentTypeProfileConfig: \(String(describing: contentTypeProfileConfig)), queryArgProfileConfig: \(String(describing: queryArgProfileConfig)))"}
}
