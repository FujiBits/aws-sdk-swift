// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ListFunctionsInput: Equatable {
    /// <p>Use this field when paginating results to indicate where to begin in your list of
    /// 			functions. The response includes functions in the list that occur after the marker. To
    /// 			get the next page of the list, set this field’s value to the value of
    /// 			<code>NextMarker</code> from the current page’s response.</p>
    public let marker: String?
    /// <p>The maximum number of functions that you want in the response.</p>
    public let maxItems: Int?
    /// <p>An optional filter to return only the functions that are in the specified stage,
    /// 			either <code>DEVELOPMENT</code> or <code>LIVE</code>.</p>
    public let stage: FunctionStage?

    public init (
        marker: String? = nil,
        maxItems: Int? = nil,
        stage: FunctionStage? = nil
    )
    {
        self.marker = marker
        self.maxItems = maxItems
        self.stage = stage
    }
}

extension ListFunctionsInput: CustomDebugStringConvertible {
    public var debugDescription: String {
        "ListFunctionsInput(marker: \(String(describing: marker)), maxItems: \(String(describing: maxItems)), stage: \(String(describing: stage)))"}
}
