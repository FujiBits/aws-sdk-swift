// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CachePolicyHeadersConfig: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case headerBehavior = "HeaderBehavior"
        case headers = "Headers"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if encoder.codingPath.isEmpty {
            try container.encode("http://cloudfront.amazonaws.com/doc/2020-05-31/", forKey: Key("xmlns"))
        }
        if let headerBehavior = headerBehavior {
            try container.encode(headerBehavior, forKey: Key("headerBehavior"))
        }
        if let headers = headers {
            try container.encode(headers, forKey: Key("headers"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let headerBehaviorDecoded = try containerValues.decodeIfPresent(CachePolicyHeaderBehavior.self, forKey: .headerBehavior)
        headerBehavior = headerBehaviorDecoded
        let headersDecoded = try containerValues.decodeIfPresent(Headers.self, forKey: .headers)
        headers = headersDecoded
    }
}
