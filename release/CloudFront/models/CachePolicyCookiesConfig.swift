// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>An object that determines whether any cookies in viewer requests (and if so, which cookies)
/// 			are included in the cache key and automatically included in requests that CloudFront sends to
/// 			the origin.</p>
public struct CachePolicyCookiesConfig: Equatable {
    /// <p>Determines whether any cookies in viewer requests are included in the cache key and
    /// 			automatically included in requests that CloudFront sends to the origin. Valid values
    /// 			are:</p>
    /// 		       <ul>
    ///             <li>
    /// 				           <p>
    ///                   <code>none</code> – Cookies in viewer requests are not included in the cache key and are
    /// 					not automatically included in requests that CloudFront sends to the origin. Even when
    /// 					this field is set to <code>none</code>, any cookies that are listed in an
    /// 					<code>OriginRequestPolicy</code>
    ///                   <i>are</i> included in origin
    /// 					requests.</p>
    /// 			         </li>
    ///             <li>
    /// 				           <p>
    ///                   <code>whitelist</code> – The cookies in viewer requests that are listed in the
    /// 					<code>CookieNames</code> type are included in the cache key and automatically
    /// 					included in requests that CloudFront sends to the origin.</p>
    /// 			         </li>
    ///             <li>
    /// 				           <p>
    ///                   <code>allExcept</code> – All cookies in viewer requests that are <i>
    ///                      <b>not</b>
    ///                   </i> listed in the <code>CookieNames</code>
    /// 					type are included in the cache key and automatically included in requests that
    /// 					CloudFront sends to the origin.</p>
    /// 			         </li>
    ///             <li>
    /// 				           <p>
    ///                   <code>all</code> – All cookies in viewer requests are included in the cache key and are
    /// 					automatically included in requests that CloudFront sends to the origin.</p>
    /// 			         </li>
    ///          </ul>
    public let cookieBehavior: CachePolicyCookieBehavior?
    /// <p>Contains a list of cookie names.</p>
    public let cookies: CookieNames?

    public init (
        cookieBehavior: CachePolicyCookieBehavior? = nil,
        cookies: CookieNames? = nil
    )
    {
        self.cookieBehavior = cookieBehavior
        self.cookies = cookies
    }
}

extension CachePolicyCookiesConfig: CustomDebugStringConvertible {
    public var debugDescription: String {
        "CachePolicyCookiesConfig(cookieBehavior: \(String(describing: cookieBehavior)), cookies: \(String(describing: cookies)))"}
}
