// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>An origin.</p>
/// 		       <p>An origin is the location where content is stored, and from which CloudFront gets content to
/// 			serve to viewers. To specify an origin:</p>
/// 		       <ul>
///             <li>
///                 <p>Use <code>S3OriginConfig</code> to specify an Amazon S3 bucket that is not
/// 					configured with static website hosting.</p>
/// 			         </li>
///             <li>
/// 				           <p>Use <code>CustomOriginConfig</code> to specify all other kinds of origins,
/// 					including:</p>
/// 				           <ul>
///                   <li>
/// 						               <p>An Amazon S3 bucket that is configured with static website hosting</p>
/// 					             </li>
///                   <li>
/// 						               <p>An Elastic Load Balancing load balancer</p>
/// 					             </li>
///                   <li>
/// 						               <p>An AWS Elemental MediaPackage endpoint</p>
/// 					             </li>
///                   <li>
/// 						               <p>An AWS Elemental MediaStore container</p>
/// 					             </li>
///                   <li>
/// 						               <p>Any other HTTP server, running on an Amazon EC2 instance or any other
/// 							kind of host</p>
/// 					             </li>
///                </ul>
/// 			         </li>
///          </ul>
/// 		       <p>For the current maximum number of origins that you can specify per distribution, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cloudfront-limits.html#limits-web-distributions">General Quotas on Web Distributions</a> in the <i>Amazon CloudFront Developer Guide</i>
/// 			(quotas were formerly referred to as limits).</p>
public struct Origin: Equatable {
    /// <p>The number of times that CloudFront attempts to connect to the origin. The minimum number
    ///             is 1, the maximum is 3, and the default (if you don’t specify otherwise) is 3.</p>
    ///         <p>For a custom origin (including an Amazon S3 bucket that’s configured with static
    ///             website hosting), this value also specifies the number of times that CloudFront attempts to
    ///             get a response from the origin, in the case of an <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesOriginResponseTimeout">Origin Response Timeout</a>.</p>
    ///         <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#origin-connection-attempts">Origin Connection Attempts</a> in the
    /// 			<i>Amazon CloudFront Developer Guide</i>.</p>
    public let connectionAttempts: Int?
    /// <p>The number of seconds that CloudFront waits when trying to establish a connection to the origin.
    /// 			The minimum timeout is 1 second, the maximum is 10 seconds, and the default (if you
    /// 			don’t specify otherwise) is 10 seconds.</p>
    /// 		       <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#origin-connection-timeout">Origin Connection Timeout</a> in the
    /// 			<i>Amazon CloudFront Developer Guide</i>.</p>
    public let connectionTimeout: Int?
    /// <p>A list of HTTP header names and values that CloudFront adds to the requests that it sends to
    ///             the origin.</p>
    /// 		       <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/add-origin-custom-headers.html">Adding Custom Headers to Origin Requests</a> in the
    /// 			<i>Amazon CloudFront Developer Guide</i>.</p>
    public let customHeaders: CustomHeaders?
    /// <p>Use this type to specify an origin that is not an Amazon S3 bucket, with one exception. If the
    /// 			Amazon S3 bucket is configured with static website hosting, use this type. If the Amazon S3 bucket
    /// 			is not configured with static website hosting, use the <code>S3OriginConfig</code> type
    /// 			instead.</p>
    public let customOriginConfig: CustomOriginConfig?
    /// <p>The domain name for the origin.</p>
    /// 		       <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesDomainName">Origin Domain Name</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>
    public let domainName: String?
    /// <p>A unique identifier for the origin. This value must be unique within the
    /// 			distribution.</p>
    ///         <p>Use this value to specify the <code>TargetOriginId</code> in a
    ///             <code>CacheBehavior</code> or <code>DefaultCacheBehavior</code>.</p>
    public let id: String?
    /// <p>An optional path that CloudFront appends to the origin domain name when CloudFront requests content from
    /// 			the origin.</p>
    /// 		       <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesOriginPath">Origin Path</a> in the
    /// 			<i>Amazon CloudFront Developer Guide</i>.</p>
    public let originPath: String?
    /// <p>CloudFront Origin Shield. Using Origin Shield can help reduce the load on your
    ///             origin.</p>
    /// 		       <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/origin-shield.html">Using Origin Shield</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>
    public let originShield: OriginShield?
    /// <p>Use this type to specify an origin that is an Amazon S3 bucket that is not configured with static
    /// 			website hosting. To specify any other type of origin, including an Amazon S3 bucket that is
    /// 			configured with static website hosting, use the <code>CustomOriginConfig</code> type
    /// 			instead.</p>
    public let s3OriginConfig: S3OriginConfig?

    public init (
        connectionAttempts: Int? = nil,
        connectionTimeout: Int? = nil,
        customHeaders: CustomHeaders? = nil,
        customOriginConfig: CustomOriginConfig? = nil,
        domainName: String? = nil,
        id: String? = nil,
        originPath: String? = nil,
        originShield: OriginShield? = nil,
        s3OriginConfig: S3OriginConfig? = nil
    )
    {
        self.connectionAttempts = connectionAttempts
        self.connectionTimeout = connectionTimeout
        self.customHeaders = customHeaders
        self.customOriginConfig = customOriginConfig
        self.domainName = domainName
        self.id = id
        self.originPath = originPath
        self.originShield = originShield
        self.s3OriginConfig = s3OriginConfig
    }
}

extension Origin: CustomDebugStringConvertible {
    public var debugDescription: String {
        "Origin(connectionAttempts: \(String(describing: connectionAttempts)), connectionTimeout: \(String(describing: connectionTimeout)), customHeaders: \(String(describing: customHeaders)), customOriginConfig: \(String(describing: customOriginConfig)), domainName: \(String(describing: domainName)), id: \(String(describing: id)), originPath: \(String(describing: originPath)), originShield: \(String(describing: originShield)), s3OriginConfig: \(String(describing: s3OriginConfig)))"}
}
