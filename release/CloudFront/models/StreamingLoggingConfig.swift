// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>A complex type that controls whether access logs are written for this streaming distribution.</p>
public struct StreamingLoggingConfig: Equatable {
    /// <p>The Amazon S3 bucket to store the access logs in, for example, <code>myawslogbucket.s3.amazonaws.com</code>.</p>
    public let bucket: String?
    /// <p>Specifies whether you want CloudFront to save access logs to an Amazon S3 bucket. If you don't
    /// 			want to enable logging when you create a streaming distribution or if you want to disable
    /// 			logging for an existing streaming distribution, specify <code>false</code> for
    /// 				<code>Enabled</code>, and specify <code>empty Bucket</code> and <code>Prefix</code>
    /// 			elements. If you specify <code>false</code> for <code>Enabled</code> but you specify values
    /// 			for <code>Bucket</code> and <code>Prefix</code>, the values are automatically deleted.
    /// 		</p>
    public let enabled: Bool?
    /// <p>An optional string that you want CloudFront to prefix to the access log filenames for this streaming distribution, for example,
    /// 			<code>myprefix/</code>. If you want to enable logging, but you don't want to specify a prefix, you still must include
    /// 			an empty <code>Prefix</code> element in the <code>Logging</code> element.</p>
    public let prefix: String?

    public init (
        bucket: String? = nil,
        enabled: Bool? = nil,
        prefix: String? = nil
    )
    {
        self.bucket = bucket
        self.enabled = enabled
        self.prefix = prefix
    }
}

extension StreamingLoggingConfig: CustomDebugStringConvertible {
    public var debugDescription: String {
        "StreamingLoggingConfig(bucket: \(String(describing: bucket)), enabled: \(String(describing: enabled)), prefix: \(String(describing: prefix)))"}
}
