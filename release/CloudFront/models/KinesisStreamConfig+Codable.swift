// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension KinesisStreamConfig: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case roleARN = "RoleARN"
        case streamARN = "StreamARN"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if encoder.codingPath.isEmpty {
            try container.encode("http://cloudfront.amazonaws.com/doc/2020-05-31/", forKey: Key("xmlns"))
        }
        if let roleARN = roleARN {
            try container.encode(roleARN, forKey: Key("roleARN"))
        }
        if let streamARN = streamARN {
            try container.encode(streamARN, forKey: Key("streamARN"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let roleARNDecoded = try containerValues.decodeIfPresent(String.self, forKey: .roleARN)
        roleARN = roleARNDecoded
        let streamARNDecoded = try containerValues.decodeIfPresent(String.self, forKey: .streamARN)
        streamARN = streamARNDecoded
    }
}
