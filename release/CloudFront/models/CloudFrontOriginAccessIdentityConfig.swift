// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Origin access identity configuration. Send a <code>GET</code> request to the
/// 					<code>/<i>CloudFront API version</i>/CloudFront/identity ID/config</code> resource.
/// 		</p>
public struct CloudFrontOriginAccessIdentityConfig: Equatable {
    /// <p>A unique value (for example, a date-time stamp) that ensures that the request can't be replayed.</p>
    /// 		       <p>If the value of <code>CallerReference</code> is new (regardless of the content of the
    /// 			<code>CloudFrontOriginAccessIdentityConfig</code> object), a new origin access identity is
    /// 			created.</p>
    /// 		       <p>If the <code>CallerReference</code> is a value already sent in a previous identity
    /// 			request, and the content of the <code>CloudFrontOriginAccessIdentityConfig</code> is identical
    /// 			to the original request (ignoring white space), the response includes the same information
    /// 			returned to the original request. </p>
    /// 		       <p>If the <code>CallerReference</code> is a value you already sent in a previous request
    /// 			to create an identity, but the content of the
    /// 			<code>CloudFrontOriginAccessIdentityConfig</code> is different from the original request,
    /// 			CloudFront returns a <code>CloudFrontOriginAccessIdentityAlreadyExists</code> error. </p>
    public let callerReference: String?
    /// <p>A comment to describe the origin access identity. The comment cannot be longer
    /// 			than 128 characters.</p>
    public let comment: String?

    public init (
        callerReference: String? = nil,
        comment: String? = nil
    )
    {
        self.callerReference = callerReference
        self.comment = comment
    }
}

extension CloudFrontOriginAccessIdentityConfig: CustomDebugStringConvertible {
    public var debugDescription: String {
        "CloudFrontOriginAccessIdentityConfig(callerReference: \(String(describing: callerReference)), comment: \(String(describing: comment)))"}
}
