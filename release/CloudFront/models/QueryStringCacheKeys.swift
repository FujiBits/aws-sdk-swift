// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>This field is deprecated. We recommend that you use a cache policy or an origin
/// 			request policy instead of this field.</p>
/// 		       <p>If you want to include query strings in the cache key, use
/// 			<code>QueryStringsConfig</code> in a cache policy. See
/// 			<code>CachePolicy</code>.</p>
/// 		       <p>If you want to send query strings to the origin but not include them in the cache key,
/// 			use <code>QueryStringsConfig</code> in an origin request policy. See
/// 			<code>OriginRequestPolicy</code>.</p>
/// 		       <p>A complex type that contains information about the query string parameters that you want
/// 			CloudFront to use for caching for a cache behavior.
/// 		</p>
public struct QueryStringCacheKeys: Equatable {
    /// <p>A list that contains the query string parameters that you want CloudFront to use
    /// 			as a basis for caching for a cache behavior. If <code>Quantity</code> is 0, you can omit
    /// 			<code>Items</code>. </p>
    public let items: [String]?
    /// <p>The number of <code>whitelisted</code> query string parameters for a cache
    /// 			behavior.</p>
    public let quantity: Int?

    public init (
        items: [String]? = nil,
        quantity: Int? = nil
    )
    {
        self.items = items
        self.quantity = quantity
    }
}

extension QueryStringCacheKeys: CustomDebugStringConvertible {
    public var debugDescription: String {
        "QueryStringCacheKeys(items: \(String(describing: items)), quantity: \(String(describing: quantity)))"}
}
