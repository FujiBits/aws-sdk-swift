// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension OriginGroup: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case failoverCriteria = "FailoverCriteria"
        case id = "Id"
        case members = "Members"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if encoder.codingPath.isEmpty {
            try container.encode("http://cloudfront.amazonaws.com/doc/2020-05-31/", forKey: Key("xmlns"))
        }
        if let failoverCriteria = failoverCriteria {
            try container.encode(failoverCriteria, forKey: Key("failoverCriteria"))
        }
        if let id = id {
            try container.encode(id, forKey: Key("id"))
        }
        if let members = members {
            try container.encode(members, forKey: Key("members"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let idDecoded = try containerValues.decodeIfPresent(String.self, forKey: .id)
        id = idDecoded
        let failoverCriteriaDecoded = try containerValues.decodeIfPresent(OriginGroupFailoverCriteria.self, forKey: .failoverCriteria)
        failoverCriteria = failoverCriteriaDecoded
        let membersDecoded = try containerValues.decodeIfPresent(OriginGroupMembers.self, forKey: .members)
        members = membersDecoded
    }
}
