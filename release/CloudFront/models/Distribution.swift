// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>A distribution tells CloudFront where you want content to be delivered from, and the details about how to
/// 			track and manage content delivery.</p>
public struct Distribution: Equatable {
    /// <p>The ARN (Amazon Resource Name) for the distribution. For example:
    /// 				<code>arn:aws:cloudfront::123456789012:distribution/EDFDVBD632BHDS5</code>, where
    /// 				<code>123456789012</code> is your AWS account ID.</p>
    public let aRN: String?
    /// <p>CloudFront automatically adds this field to the response if you’ve configured a cache
    /// 			behavior in this distribution to serve private content using key groups. This field
    /// 			contains a list of key groups and the public keys in each key group that CloudFront can use to
    /// 			verify the signatures of signed URLs or signed cookies.</p>
    public let activeTrustedKeyGroups: ActiveTrustedKeyGroups?
    /// <important>
    /// 			         <p>We recommend using <code>TrustedKeyGroups</code> instead of
    /// 				<code>TrustedSigners</code>.</p>
    /// 		       </important>
    /// 		       <p>CloudFront automatically adds this field to the response if you’ve configured a cache behavior in
    /// 			this distribution to serve private content using trusted signers. This field contains a
    /// 			list of AWS account IDs and the active CloudFront key pairs in each account that CloudFront can use
    /// 			to verify the signatures of signed URLs or signed cookies.</p>
    public let activeTrustedSigners: ActiveTrustedSigners?
    /// <p>AWS services in China customers must file for an Internet Content Provider (ICP) recordal if they want to serve content
    /// 			publicly on an alternate domain name, also known as a CNAME, that they've added to CloudFront. AliasICPRecordal provides the ICP
    /// 			recordal status for CNAMEs associated with distributions.</p>
    /// 		       <p>For more information about ICP recordals, see  <a href="https://docs.amazonaws.cn/en_us/aws/latest/userguide/accounts-and-credentials.html">
    /// 			Signup, Accounts, and Credentials</a> in <i>Getting Started with AWS services in China</i>.</p>
    public let aliasICPRecordals: [AliasICPRecordal]?
    /// <p>The current configuration information for the distribution. Send a <code>GET</code>
    /// 			request to the <code>/<i>CloudFront API version</i>/distribution ID/config</code>
    /// 			resource.</p>
    public let distributionConfig: DistributionConfig?
    /// <p>The domain name corresponding to the distribution, for example, <code>d111111abcdef8.cloudfront.net</code>. </p>
    public let domainName: String?
    /// <p>The identifier for the distribution. For example: <code>EDFDVBD632BHDS5</code>.
    /// 		</p>
    public let id: String?
    /// <p>The number of invalidation batches currently in progress. </p>
    public let inProgressInvalidationBatches: Int?
    /// <p>The date and time the distribution was last modified. </p>
    public let lastModifiedTime: Date?
    /// <p>This response element indicates the current status of the distribution. When the status
    /// 			is <code>Deployed</code>, the distribution's information is fully propagated to all CloudFront edge
    /// 			locations. </p>
    public let status: String?

    public init (
        aRN: String? = nil,
        activeTrustedKeyGroups: ActiveTrustedKeyGroups? = nil,
        activeTrustedSigners: ActiveTrustedSigners? = nil,
        aliasICPRecordals: [AliasICPRecordal]? = nil,
        distributionConfig: DistributionConfig? = nil,
        domainName: String? = nil,
        id: String? = nil,
        inProgressInvalidationBatches: Int? = nil,
        lastModifiedTime: Date? = nil,
        status: String? = nil
    )
    {
        self.aRN = aRN
        self.activeTrustedKeyGroups = activeTrustedKeyGroups
        self.activeTrustedSigners = activeTrustedSigners
        self.aliasICPRecordals = aliasICPRecordals
        self.distributionConfig = distributionConfig
        self.domainName = domainName
        self.id = id
        self.inProgressInvalidationBatches = inProgressInvalidationBatches
        self.lastModifiedTime = lastModifiedTime
        self.status = status
    }
}

extension Distribution: CustomDebugStringConvertible {
    public var debugDescription: String {
        "Distribution(aRN: \(String(describing: aRN)), activeTrustedKeyGroups: \(String(describing: activeTrustedKeyGroups)), activeTrustedSigners: \(String(describing: activeTrustedSigners)), aliasICPRecordals: \(String(describing: aliasICPRecordals)), distributionConfig: \(String(describing: distributionConfig)), domainName: \(String(describing: domainName)), id: \(String(describing: id)), inProgressInvalidationBatches: \(String(describing: inProgressInvalidationBatches)), lastModifiedTime: \(String(describing: lastModifiedTime)), status: \(String(describing: status)))"}
}
