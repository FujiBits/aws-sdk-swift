// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>A streaming distribution list. </p>
public struct StreamingDistributionList: Equatable {
    /// <p>A flag that indicates whether more streaming distributions remain to be listed. If your
    /// 			results were truncated, you can make a follow-up pagination request using the
    /// 				<code>Marker</code> request parameter to retrieve more distributions in the list. </p>
    public let isTruncated: Bool?
    /// <p>A complex type that contains one <code>StreamingDistributionSummary</code> element for
    /// 			each distribution that was created by the current AWS account.</p>
    public let items: [StreamingDistributionSummary]?
    /// <p>The value you provided for the <code>Marker</code> request parameter. </p>
    public let marker: String?
    /// <p>The value you provided for the <code>MaxItems</code> request parameter. </p>
    public let maxItems: Int?
    /// <p>If <code>IsTruncated</code> is <code>true</code>, this element is present and contains
    /// 			the value you can use for the <code>Marker</code> request parameter to continue listing your
    /// 			RTMP distributions where they left off. </p>
    public let nextMarker: String?
    /// <p>The number of streaming distributions that were created by the current AWS account.
    /// 		</p>
    public let quantity: Int?

    public init (
        isTruncated: Bool? = nil,
        items: [StreamingDistributionSummary]? = nil,
        marker: String? = nil,
        maxItems: Int? = nil,
        nextMarker: String? = nil,
        quantity: Int? = nil
    )
    {
        self.isTruncated = isTruncated
        self.items = items
        self.marker = marker
        self.maxItems = maxItems
        self.nextMarker = nextMarker
        self.quantity = quantity
    }
}

extension StreamingDistributionList: CustomDebugStringConvertible {
    public var debugDescription: String {
        "StreamingDistributionList(isTruncated: \(String(describing: isTruncated)), items: \(String(describing: items)), marker: \(String(describing: marker)), maxItems: \(String(describing: maxItems)), nextMarker: \(String(describing: nextMarker)), quantity: \(String(describing: quantity)))"}
}
