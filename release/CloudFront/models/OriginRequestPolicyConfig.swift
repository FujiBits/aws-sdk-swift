// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>An origin request policy configuration.</p>
/// 		       <p>This configuration determines the values that CloudFront includes in requests that it sends to the
/// 			origin. Each request that CloudFront sends to the origin includes the following:</p>
/// 		       <ul>
///             <li>
/// 				           <p>The request body and the URL path (without the domain name) from the viewer
/// 					request.</p>
/// 			         </li>
///             <li>
/// 				           <p>The headers that CloudFront automatically includes in every origin request, including
/// 					<code>Host</code>, <code>User-Agent</code>, and <code>X-Amz-Cf-Id</code>.</p>
/// 			         </li>
///             <li>
/// 				           <p>All HTTP headers, cookies, and URL query strings that are specified in the
/// 					cache policy or the origin request policy. These can include items from the
/// 					viewer request and, in the case of headers, additional ones that are added by
/// 					CloudFront.</p>
/// 			         </li>
///          </ul>
/// 		       <p>CloudFront sends a request when it canâ€™t find an object in its cache that matches the request. If
/// 			you want to send values to the origin and also include them in the cache key, use
/// 			<code>CachePolicy</code>.</p>
public struct OriginRequestPolicyConfig: Equatable {
    /// <p>A comment to describe the origin request policy. The comment cannot be longer than 128
    /// 			characters.</p>
    public let comment: String?
    /// <p>The cookies from viewer requests to include in origin requests.</p>
    public let cookiesConfig: OriginRequestPolicyCookiesConfig?
    /// <p>The HTTP headers to include in origin requests. These can include headers from viewer
    /// 			requests and additional headers added by CloudFront.</p>
    public let headersConfig: OriginRequestPolicyHeadersConfig?
    /// <p>A unique name to identify the origin request policy.</p>
    public let name: String?
    /// <p>The URL query strings from viewer requests to include in origin requests.</p>
    public let queryStringsConfig: OriginRequestPolicyQueryStringsConfig?

    public init (
        comment: String? = nil,
        cookiesConfig: OriginRequestPolicyCookiesConfig? = nil,
        headersConfig: OriginRequestPolicyHeadersConfig? = nil,
        name: String? = nil,
        queryStringsConfig: OriginRequestPolicyQueryStringsConfig? = nil
    )
    {
        self.comment = comment
        self.cookiesConfig = cookiesConfig
        self.headersConfig = headersConfig
        self.name = name
        self.queryStringsConfig = queryStringsConfig
    }
}

extension OriginRequestPolicyConfig: CustomDebugStringConvertible {
    public var debugDescription: String {
        "OriginRequestPolicyConfig(comment: \(String(describing: comment)), cookiesConfig: \(String(describing: cookiesConfig)), headersConfig: \(String(describing: headersConfig)), name: \(String(describing: name)), queryStringsConfig: \(String(describing: queryStringsConfig)))"}
}
