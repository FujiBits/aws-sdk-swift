// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ListCachePoliciesInput: Equatable {
    /// <p>Use this field when paginating results to indicate where to begin in your list of
    /// 			cache policies. The response includes cache policies in the list that occur after the
    /// 			marker. To get the next page of the list, set this field’s value to the value of
    /// 			<code>NextMarker</code> from the current page’s response.</p>
    public let marker: String?
    /// <p>The maximum number of cache policies that you want in the response.</p>
    public let maxItems: Int?
    /// <p>A filter to return only the specified kinds of cache policies. Valid values
    /// 			are:</p>
    /// 		       <ul>
    ///             <li>
    /// 				           <p>
    ///                   <code>managed</code> – Returns only the managed policies created by AWS.</p>
    /// 			         </li>
    ///             <li>
    /// 				           <p>
    ///                   <code>custom</code> – Returns only the custom policies created in your AWS
    /// 					account.</p>
    /// 			         </li>
    ///          </ul>
    public let type: CachePolicyType?

    public init (
        marker: String? = nil,
        maxItems: Int? = nil,
        type: CachePolicyType? = nil
    )
    {
        self.marker = marker
        self.maxItems = maxItems
        self.type = type
    }
}

extension ListCachePoliciesInput: CustomDebugStringConvertible {
    public var debugDescription: String {
        "ListCachePoliciesInput(marker: \(String(describing: marker)), maxItems: \(String(describing: maxItems)), type: \(String(describing: type)))"}
}
