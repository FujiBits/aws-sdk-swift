// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>A list of distribution IDs.</p>
public struct DistributionIdList: Equatable {
    /// <p>A flag that indicates whether more distribution IDs remain to be listed. If your
    /// 			results were truncated, you can make a subsequent request using the <code>Marker</code>
    /// 			request field to retrieve more distribution IDs in the list.</p>
    public let isTruncated: Bool?
    /// <p>Contains the distribution IDs in the list.</p>
    public let items: [String]?
    /// <p>The value provided in the <code>Marker</code> request field.</p>
    public let marker: String?
    /// <p>The maximum number of distribution IDs requested.</p>
    public let maxItems: Int?
    /// <p>Contains the value that you should use in the <code>Marker</code> field of a
    /// 			subsequent request to continue listing distribution IDs where you left off.</p>
    public let nextMarker: String?
    /// <p>The total number of distribution IDs returned in the response.</p>
    public let quantity: Int?

    public init (
        isTruncated: Bool? = nil,
        items: [String]? = nil,
        marker: String? = nil,
        maxItems: Int? = nil,
        nextMarker: String? = nil,
        quantity: Int? = nil
    )
    {
        self.isTruncated = isTruncated
        self.items = items
        self.marker = marker
        self.maxItems = maxItems
        self.nextMarker = nextMarker
        self.quantity = quantity
    }
}

extension DistributionIdList: CustomDebugStringConvertible {
    public var debugDescription: String {
        "DistributionIdList(isTruncated: \(String(describing: isTruncated)), items: \(String(describing: items)), marker: \(String(describing: marker)), maxItems: \(String(describing: maxItems)), nextMarker: \(String(describing: nextMarker)), quantity: \(String(describing: quantity)))"}
}
