// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>A list of real-time log configurations.</p>
public struct RealtimeLogConfigs: Equatable {
    /// <p>A flag that indicates whether there are more real-time log configurations than are contained
    /// 			in this list.</p>
    public let isTruncated: Bool?
    /// <p>Contains the list of real-time log configurations.</p>
    public let items: [RealtimeLogConfig]?
    /// <p>This parameter indicates where this list of real-time log configurations begins. This list
    /// 			includes real-time log configurations that occur after the marker.</p>
    public let marker: String?
    /// <p>The maximum number of real-time log configurations requested.</p>
    public let maxItems: Int?
    /// <p>If there are more items in the list than are in this response, this element is present. It
    /// 			contains the value that you should use in the <code>Marker</code> field of a subsequent
    /// 			request to continue listing real-time log configurations where you left off. </p>
    public let nextMarker: String?

    public init (
        isTruncated: Bool? = nil,
        items: [RealtimeLogConfig]? = nil,
        marker: String? = nil,
        maxItems: Int? = nil,
        nextMarker: String? = nil
    )
    {
        self.isTruncated = isTruncated
        self.items = items
        self.marker = marker
        self.maxItems = maxItems
        self.nextMarker = nextMarker
    }
}

extension RealtimeLogConfigs: CustomDebugStringConvertible {
    public var debugDescription: String {
        "RealtimeLogConfigs(isTruncated: \(String(describing: isTruncated)), items: \(String(describing: items)), marker: \(String(describing: marker)), maxItems: \(String(describing: maxItems)), nextMarker: \(String(describing: nextMarker)))"}
}
