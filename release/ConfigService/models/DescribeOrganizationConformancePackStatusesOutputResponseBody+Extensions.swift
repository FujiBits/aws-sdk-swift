// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeOrganizationConformancePackStatusesOutputResponseBody: Equatable {
    public let organizationConformancePackStatuses: [OrganizationConformancePackStatus]?
    public let nextToken: String?
}

extension DescribeOrganizationConformancePackStatusesOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case organizationConformancePackStatuses = "OrganizationConformancePackStatuses"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let organizationConformancePackStatusesContainer = try containerValues.decodeIfPresent([OrganizationConformancePackStatus?].self, forKey: .organizationConformancePackStatuses)
        var organizationConformancePackStatusesDecoded0:[OrganizationConformancePackStatus]? = nil
        if let organizationConformancePackStatusesContainer = organizationConformancePackStatusesContainer {
            organizationConformancePackStatusesDecoded0 = [OrganizationConformancePackStatus]()
            for structure0 in organizationConformancePackStatusesContainer {
                if let structure0 = structure0 {
                    organizationConformancePackStatusesDecoded0?.append(structure0)
                }
            }
        }
        organizationConformancePackStatuses = organizationConformancePackStatusesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
