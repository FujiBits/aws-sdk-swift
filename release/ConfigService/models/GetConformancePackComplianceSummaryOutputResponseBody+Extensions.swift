// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetConformancePackComplianceSummaryOutputResponseBody: Equatable {
    public let conformancePackComplianceSummaryList: [ConformancePackComplianceSummary]?
    public let nextToken: String?
}

extension GetConformancePackComplianceSummaryOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case conformancePackComplianceSummaryList = "ConformancePackComplianceSummaryList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let conformancePackComplianceSummaryListContainer = try containerValues.decodeIfPresent([ConformancePackComplianceSummary?].self, forKey: .conformancePackComplianceSummaryList)
        var conformancePackComplianceSummaryListDecoded0:[ConformancePackComplianceSummary]? = nil
        if let conformancePackComplianceSummaryListContainer = conformancePackComplianceSummaryListContainer {
            conformancePackComplianceSummaryListDecoded0 = [ConformancePackComplianceSummary]()
            for structure0 in conformancePackComplianceSummaryListContainer {
                if let structure0 = structure0 {
                    conformancePackComplianceSummaryListDecoded0?.append(structure0)
                }
            }
        }
        conformancePackComplianceSummaryList = conformancePackComplianceSummaryListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
