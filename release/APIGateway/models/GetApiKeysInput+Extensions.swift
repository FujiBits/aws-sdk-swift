// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct GetApiKeysInputHeadersMiddleware: Middleware {
    public let id: String = "GetApiKeysInputHeadersMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<GetApiKeysInput>,
                  next: H) -> Swift.Result<OperationOutput<GetApiKeysOutputResponse>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<GetApiKeysInput>
    public typealias MOutput = OperationOutput<GetApiKeysOutputResponse>
    public typealias Context = ClientRuntime.HttpContext
    public typealias MError = SdkError<GetApiKeysOutputError>
}

public struct GetApiKeysInputQueryItemMiddleware: Middleware {
    public let id: String = "GetApiKeysInputQueryItemMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<GetApiKeysInput>,
                  next: H) -> Swift.Result<OperationOutput<GetApiKeysOutputResponse>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        if let includeValues = input.operationInput.includeValues {
            let includeValuesQueryItem = URLQueryItem(name: "includeValues".urlPercentEncoding(), value: String(includeValues).urlPercentEncoding())
            input.builder.withQueryItem(includeValuesQueryItem)
        }
        if let limit = input.operationInput.limit {
            let limitQueryItem = URLQueryItem(name: "limit".urlPercentEncoding(), value: String(limit).urlPercentEncoding())
            input.builder.withQueryItem(limitQueryItem)
        }
        if let customerId = input.operationInput.customerId {
            let customerIdQueryItem = URLQueryItem(name: "customerId".urlPercentEncoding(), value: String(customerId).urlPercentEncoding())
            input.builder.withQueryItem(customerIdQueryItem)
        }
        if let position = input.operationInput.position {
            let positionQueryItem = URLQueryItem(name: "position".urlPercentEncoding(), value: String(position).urlPercentEncoding())
            input.builder.withQueryItem(positionQueryItem)
        }
        if let nameQuery = input.operationInput.nameQuery {
            let nameQueryQueryItem = URLQueryItem(name: "name".urlPercentEncoding(), value: String(nameQuery).urlPercentEncoding())
            input.builder.withQueryItem(nameQueryQueryItem)
        }
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<GetApiKeysInput>
    public typealias MOutput = OperationOutput<GetApiKeysOutputResponse>
    public typealias Context = ClientRuntime.HttpContext
    public typealias MError = SdkError<GetApiKeysOutputError>
}

extension GetApiKeysInput: Encodable, Reflection {

    public func encode(to encoder: Encoder) throws {
    }
}
