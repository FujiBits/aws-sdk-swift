// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Represents a client certificate used to configure client-side SSL authentication while sending requests to the integration endpoint.</p>
///         <div class="remarks">Client certificates are used to authenticate an API by the backend server. To authenticate an API client (or user), use IAM roles and policies, a custom <a>Authorizer</a> or an Amazon Cognito user pool.</div>
///       <div class="seeAlso">
///         <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/getting-started-client-side-ssl-authentication.html">Use Client-Side Certificate</a>
///       </div>
public struct GetClientCertificateOutputResponse: Equatable {
    /// <p>The identifier of the client certificate.</p>
    public let clientCertificateId: String?
    /// <p>The timestamp when the client certificate was created.</p>
    public let createdDate: Date?
    /// <p>The description of the client certificate.</p>
    public let description: String?
    /// <p>The timestamp when the client certificate will expire.</p>
    public let expirationDate: Date?
    /// <p>The PEM-encoded public key of the client certificate, which can be used to configure certificate authentication in the integration endpoint .</p>
    public let pemEncodedCertificate: String?
    /// <p>The collection of tags. Each tag element is associated with a given resource.</p>
    public let tags: [String:String]?

    public init (
        clientCertificateId: String? = nil,
        createdDate: Date? = nil,
        description: String? = nil,
        expirationDate: Date? = nil,
        pemEncodedCertificate: String? = nil,
        tags: [String:String]? = nil
    )
    {
        self.clientCertificateId = clientCertificateId
        self.createdDate = createdDate
        self.description = description
        self.expirationDate = expirationDate
        self.pemEncodedCertificate = pemEncodedCertificate
        self.tags = tags
    }
}

extension GetClientCertificateOutputResponse: CustomDebugStringConvertible {
    public var debugDescription: String {
        "GetClientCertificateOutputResponse(clientCertificateId: \(String(describing: clientCertificateId)), createdDate: \(String(describing: createdDate)), description: \(String(describing: description)), expirationDate: \(String(describing: expirationDate)), pemEncodedCertificate: \(String(describing: pemEncodedCertificate)), tags: \(String(describing: tags)))"}
}
