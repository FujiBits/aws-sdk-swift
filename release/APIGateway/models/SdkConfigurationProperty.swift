// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>A configuration property of an SDK type.</p>
public struct SdkConfigurationProperty: Equatable {
    /// <p>A boolean flag of an <a>SdkType</a> configuration property to indicate if the associated SDK configuration property is required (<code>true</code>) or not (<code>false</code>).</p>
    public let `required`: Bool
    /// <p>The default value of an <a>SdkType</a> configuration property.</p>
    public let defaultValue: String?
    /// <p>The description of an <a>SdkType</a> configuration property.</p>
    public let description: String?
    /// <p>The user-friendly name of an <a>SdkType</a> configuration property.</p>
    public let friendlyName: String?
    /// <p>The name of a an <a>SdkType</a> configuration property.</p>
    public let name: String?

    public init (
        `required`: Bool = false,
        defaultValue: String? = nil,
        description: String? = nil,
        friendlyName: String? = nil,
        name: String? = nil
    )
    {
        self.`required` = `required`
        self.defaultValue = defaultValue
        self.description = description
        self.friendlyName = friendlyName
        self.name = name
    }
}

extension SdkConfigurationProperty: CustomDebugStringConvertible {
    public var debugDescription: String {
        "SdkConfigurationProperty(defaultValue: \(String(describing: defaultValue)), description: \(String(describing: description)), friendlyName: \(String(describing: friendlyName)), name: \(String(describing: name)), required: \(String(describing: `required`)))"}
}
