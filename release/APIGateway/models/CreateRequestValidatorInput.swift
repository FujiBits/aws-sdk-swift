// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Creates a <a>RequestValidator</a> of a given <a>RestApi</a>.</p>
public struct CreateRequestValidatorInput: Equatable {
    /// <p>The name of the to-be-created <a>RequestValidator</a>.</p>
    public let name: String?
    /// <p>[Required] The string identifier of the associated <a>RestApi</a>.</p>
    public let restApiId: String?
    /// <p>A Boolean flag to indicate whether to validate request body according to the configured model schema for the method (<code>true</code>) or not (<code>false</code>).</p>
    public let validateRequestBody: Bool
    /// <p>A Boolean flag to indicate whether to validate request parameters, <code>true</code>, or not <code>false</code>.</p>
    public let validateRequestParameters: Bool

    public init (
        name: String? = nil,
        restApiId: String? = nil,
        validateRequestBody: Bool = false,
        validateRequestParameters: Bool = false
    )
    {
        self.name = name
        self.restApiId = restApiId
        self.validateRequestBody = validateRequestBody
        self.validateRequestParameters = validateRequestParameters
    }
}

extension CreateRequestValidatorInput: CustomDebugStringConvertible {
    public var debugDescription: String {
        "CreateRequestValidatorInput(name: \(String(describing: name)), restApiId: \(String(describing: restApiId)), validateRequestBody: \(String(describing: validateRequestBody)), validateRequestParameters: \(String(describing: validateRequestParameters)))"}
}
