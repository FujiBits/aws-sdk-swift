// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Represents a custom domain name as a user-friendly host name of an API (<a>RestApi</a>).</p>
///         <div class="Remarks">
///             <p>When you deploy an API, API Gateway creates a default host name for the API. This default API host name is of the <code>{restapi-id}.execute-api.{region}.amazonaws.com</code> format. With the default host name, you can access the API's root resource with the URL of <code>https://{restapi-id}.execute-api.{region}.amazonaws.com/{stage}/</code>. When you set up a custom domain name of <code>apis.example.com</code> for this API, you can then access the same resource using the URL of the <code>https://apis.examples.com/myApi</code>, where <code>myApi</code> is the base path mapping (<a>BasePathMapping</a>) of your API under the custom domain name.
///             </p>
///         </div>
///       <div class="seeAlso">
///         <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-custom-domains.html">Set a Custom Host Name for an API</a>
///       </div>
public struct DomainName: Equatable {
    /// <p>The reference to an AWS-managed certificate that will be used by edge-optimized endpoint for this domain name. AWS Certificate Manager is the only supported source.</p>
    public let certificateArn: String?
    /// <p>The name of the certificate that will be used by edge-optimized endpoint for this domain name.</p>
    public let certificateName: String?
    /// <p>The timestamp when the certificate that was used by edge-optimized endpoint for this domain name was uploaded.</p>
    public let certificateUploadDate: Date?
    /// <p>The domain name of the Amazon CloudFront distribution associated with this custom domain name for an edge-optimized endpoint. You set up this association when adding a DNS record pointing the custom domain name to this distribution name. For more information about CloudFront distributions, see the <a target="_blank" href="https://aws.amazon.com/documentation/cloudfront/">Amazon CloudFront documentation</a>.</p>
    public let distributionDomainName: String?
    /// <p>The region-agnostic Amazon Route 53 Hosted Zone ID of the edge-optimized endpoint. The valid value is <code>Z2FDTNDATAQYW2</code> for all the regions. For more information, see <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-regional-api-custom-domain-create.html">Set up a Regional Custom Domain Name</a> and <a href="https://docs.aws.amazon.com/general/latest/gr/rande.html#apigateway_region">AWS Regions and Endpoints for API Gateway</a>. </p>
    public let distributionHostedZoneId: String?
    /// <p>The custom domain name as an API host name, for example, <code>my-api.example.com</code>.</p>
    public let domainName: String?
    /// <p>The status of the <a>DomainName</a> migration. The valid values are <code>AVAILABLE</code> and <code>UPDATING</code>. If the status is <code>UPDATING</code>, the domain cannot be modified further until the existing operation is complete. If it is <code>AVAILABLE</code>, the domain can be updated.</p>
    public let domainNameStatus: DomainNameStatus?
    /// <p>An optional text message containing detailed information about status of the <a>DomainName</a> migration.</p>
    public let domainNameStatusMessage: String?
    /// <p>The endpoint configuration of this <a>DomainName</a> showing the endpoint types of the domain name.</p>
    public let endpointConfiguration: EndpointConfiguration?
    /// <p>The mutual TLS authentication configuration for a custom domain name. If specified, API Gateway performs two-way authentication between the client and the server. Clients must present a trusted certificate to access your API.</p>
    public let mutualTlsAuthentication: MutualTlsAuthentication?
    /// <p>The reference to an AWS-managed certificate that will be used for validating the regional domain name. AWS Certificate Manager is the only supported source.</p>
    public let regionalCertificateArn: String?
    /// <p>The name of the certificate that will be used for validating the regional domain name.</p>
    public let regionalCertificateName: String?
    /// <p>The domain name associated with the regional endpoint for this custom domain name. You set up this association by adding a DNS record that points the custom domain name to this regional domain name. The regional domain name is returned by API Gateway when you create a regional endpoint.</p>
    public let regionalDomainName: String?
    /// <p>The region-specific Amazon Route 53 Hosted Zone ID of the regional endpoint. For more information, see <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-regional-api-custom-domain-create.html">Set up a Regional Custom Domain Name</a> and  <a href="https://docs.aws.amazon.com/general/latest/gr/rande.html#apigateway_region">AWS Regions and Endpoints for API Gateway</a>. </p>
    public let regionalHostedZoneId: String?
    /// <p>The Transport Layer Security (TLS) version + cipher suite for this <a>DomainName</a>. The valid values are <code>TLS_1_0</code> and <code>TLS_1_2</code>.</p>
    public let securityPolicy: SecurityPolicy?
    /// <p>The collection of tags. Each tag element is associated with a given resource.</p>
    public let tags: [String:String]?

    public init (
        certificateArn: String? = nil,
        certificateName: String? = nil,
        certificateUploadDate: Date? = nil,
        distributionDomainName: String? = nil,
        distributionHostedZoneId: String? = nil,
        domainName: String? = nil,
        domainNameStatus: DomainNameStatus? = nil,
        domainNameStatusMessage: String? = nil,
        endpointConfiguration: EndpointConfiguration? = nil,
        mutualTlsAuthentication: MutualTlsAuthentication? = nil,
        regionalCertificateArn: String? = nil,
        regionalCertificateName: String? = nil,
        regionalDomainName: String? = nil,
        regionalHostedZoneId: String? = nil,
        securityPolicy: SecurityPolicy? = nil,
        tags: [String:String]? = nil
    )
    {
        self.certificateArn = certificateArn
        self.certificateName = certificateName
        self.certificateUploadDate = certificateUploadDate
        self.distributionDomainName = distributionDomainName
        self.distributionHostedZoneId = distributionHostedZoneId
        self.domainName = domainName
        self.domainNameStatus = domainNameStatus
        self.domainNameStatusMessage = domainNameStatusMessage
        self.endpointConfiguration = endpointConfiguration
        self.mutualTlsAuthentication = mutualTlsAuthentication
        self.regionalCertificateArn = regionalCertificateArn
        self.regionalCertificateName = regionalCertificateName
        self.regionalDomainName = regionalDomainName
        self.regionalHostedZoneId = regionalHostedZoneId
        self.securityPolicy = securityPolicy
        self.tags = tags
    }
}

extension DomainName: CustomDebugStringConvertible {
    public var debugDescription: String {
        "DomainName(certificateArn: \(String(describing: certificateArn)), certificateName: \(String(describing: certificateName)), certificateUploadDate: \(String(describing: certificateUploadDate)), distributionDomainName: \(String(describing: distributionDomainName)), distributionHostedZoneId: \(String(describing: distributionHostedZoneId)), domainName: \(String(describing: domainName)), domainNameStatus: \(String(describing: domainNameStatus)), domainNameStatusMessage: \(String(describing: domainNameStatusMessage)), endpointConfiguration: \(String(describing: endpointConfiguration)), mutualTlsAuthentication: \(String(describing: mutualTlsAuthentication)), regionalCertificateArn: \(String(describing: regionalCertificateArn)), regionalCertificateName: \(String(describing: regionalCertificateName)), regionalDomainName: \(String(describing: regionalDomainName)), regionalHostedZoneId: \(String(describing: regionalHostedZoneId)), securityPolicy: \(String(describing: securityPolicy)), tags: \(String(describing: tags)))"}
}
