// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Request to create an <a>ApiKey</a> resource.</p>
public struct CreateApiKeyInput: Equatable {
    /// <p>An AWS Marketplace customer identifier , when integrating with the AWS SaaS Marketplace.</p>
    public let customerId: String?
    /// <p>The description of the <a>ApiKey</a>.</p>
    public let description: String?
    /// <p>Specifies whether the <a>ApiKey</a> can be used by callers.</p>
    public let enabled: Bool
    /// <p>Specifies whether (<code>true</code>) or not (<code>false</code>) the key identifier is distinct from the created API key value. This parameter is deprecated and should not be used.</p>
    public let generateDistinctId: Bool
    /// <p>The name of the <a>ApiKey</a>.</p>
    public let name: String?
    /// <p>DEPRECATED FOR USAGE PLANS - Specifies stages associated with the API key.</p>
    public let stageKeys: [StageKey]?
    /// <p>The key-value map of strings. The valid character set is [a-zA-Z+-=._:/]. The tag key can be up to 128 characters and must not start with <code>aws:</code>. The tag value can be up to 256 characters.</p>
    public let tags: [String:String]?
    /// <p>Specifies a value of the API key.</p> <!-- Why is this declared as the input to create an API key? As a form of copying an existing key value into a new API key? -->
    public let value: String?

    public init (
        customerId: String? = nil,
        description: String? = nil,
        enabled: Bool = false,
        generateDistinctId: Bool = false,
        name: String? = nil,
        stageKeys: [StageKey]? = nil,
        tags: [String:String]? = nil,
        value: String? = nil
    )
    {
        self.customerId = customerId
        self.description = description
        self.enabled = enabled
        self.generateDistinctId = generateDistinctId
        self.name = name
        self.stageKeys = stageKeys
        self.tags = tags
        self.value = value
    }
}

extension CreateApiKeyInput: CustomDebugStringConvertible {
    public var debugDescription: String {
        "CreateApiKeyInput(customerId: \(String(describing: customerId)), description: \(String(describing: description)), enabled: \(String(describing: enabled)), generateDistinctId: \(String(describing: generateDistinctId)), name: \(String(describing: name)), stageKeys: \(String(describing: stageKeys)), tags: \(String(describing: tags)), value: \(String(describing: value)))"}
}
