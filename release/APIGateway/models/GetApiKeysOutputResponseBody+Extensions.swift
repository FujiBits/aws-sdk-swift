// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetApiKeysOutputResponseBody: Equatable {
    public let warnings: [String]?
    public let items: [ApiKey]?
}

extension GetApiKeysOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case items = "item"
        case warnings
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let warningsContainer = try containerValues.decodeIfPresent([String?].self, forKey: .warnings)
        var warningsDecoded0:[String]? = nil
        if let warningsContainer = warningsContainer {
            warningsDecoded0 = [String]()
            for string0 in warningsContainer {
                if let string0 = string0 {
                    warningsDecoded0?.append(string0)
                }
            }
        }
        warnings = warningsDecoded0
        let itemsContainer = try containerValues.decodeIfPresent([ApiKey?].self, forKey: .items)
        var itemsDecoded0:[ApiKey]? = nil
        if let itemsContainer = itemsContainer {
            itemsDecoded0 = [ApiKey]()
            for structure0 in itemsContainer {
                if let structure0 = structure0 {
                    itemsDecoded0?.append(structure0)
                }
            }
        }
        items = itemsDecoded0
    }
}
