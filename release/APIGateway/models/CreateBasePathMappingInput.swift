// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Requests API Gateway to create a new <a>BasePathMapping</a> resource.</p>
public struct CreateBasePathMappingInput: Equatable {
    /// <p>The base path name that callers of the API must provide as part of the URL after the domain name. This value must be unique for all of the mappings across a single API. Specify '(none)' if you do not want callers to specify a base path name after the domain name.</p>
    public let basePath: String?
    /// <p>[Required] The domain name of the <a>BasePathMapping</a> resource to create.</p>
    public let domainName: String?
    /// <p>[Required] The string identifier of the associated <a>RestApi</a>.</p>
    public let restApiId: String?
    /// <p>The name of the API's stage that you want to use for this mapping. Specify '(none)' if you want callers to explicitly specify the stage name after any base path name.</p>
    public let stage: String?

    public init (
        basePath: String? = nil,
        domainName: String? = nil,
        restApiId: String? = nil,
        stage: String? = nil
    )
    {
        self.basePath = basePath
        self.domainName = domainName
        self.restApiId = restApiId
        self.stage = stage
    }
}

extension CreateBasePathMappingInput: CustomDebugStringConvertible {
    public var debugDescription: String {
        "CreateBasePathMappingInput(basePath: \(String(describing: basePath)), domainName: \(String(describing: domainName)), restApiId: \(String(describing: restApiId)), stage: \(String(describing: stage)))"}
}
