// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Represents a unique identifier for a version of a deployed <a>RestApi</a> that is callable by users.</p>
///       <div class="seeAlso">
///         <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-deploy-api.html">Deploy an API</a>
///       </div>
public struct Stage: Equatable {
    /// <p>Settings for logging access in this stage.</p>
    public let accessLogSettings: AccessLogSettings?
    /// <p>Specifies whether a cache cluster is enabled for the stage.</p>
    public let cacheClusterEnabled: Bool
    /// <p>The size of the cache cluster for the stage, if enabled.</p>
    public let cacheClusterSize: CacheClusterSize?
    /// <p>The status of the cache cluster for the stage, if enabled.</p>
    public let cacheClusterStatus: CacheClusterStatus?
    /// <p>Settings for the canary deployment in this stage.</p>
    public let canarySettings: CanarySettings?
    /// <p>The identifier of a client certificate for an API stage.</p>
    public let clientCertificateId: String?
    /// <p>The timestamp when the stage was created.</p>
    public let createdDate: Date?
    /// <p>The identifier of the <a>Deployment</a> that the stage points to.</p>
    public let deploymentId: String?
    /// <p>The stage's description.</p>
    public let description: String?
    /// <p>The version of the associated API documentation.</p>
    public let documentationVersion: String?
    /// <p>The timestamp when the stage last updated.</p>
    public let lastUpdatedDate: Date?
    /// <p>A map that defines the method settings for a <a>Stage</a> resource. Keys (designated as <code>/{method_setting_key</code> below) are method paths defined as <code>{resource_path}/{http_method}</code> for an individual method override, or <code>/\*/\*</code> for overriding all methods in the stage.  <!-- Any forward slash ("/") characters in the <code>resource_path</code> part must be encoded as "~1" as in, for example, <code>~1resource~1sub-resource/GET</code>.--></p>
    public let methodSettings: [String:MethodSetting]?
    /// <p>The name of the stage is the first path segment in the Uniform Resource Identifier (URI) of a call to API Gateway. Stage names can only contain alphanumeric characters, hyphens, and underscores. Maximum length is 128 characters.</p>
    public let stageName: String?
    /// <p>The collection of tags. Each tag element is associated with a given resource.</p>
    public let tags: [String:String]?
    /// <p>Specifies whether active tracing with X-ray is enabled for the <a>Stage</a>.</p>
    public let tracingEnabled: Bool
    /// <p>A map that defines the stage variables for a <a>Stage</a> resource. Variable names can
    ///           have alphanumeric and underscore characters, and the values must match <code>[A-Za-z0-9-._~:/?#&=,]+</code>.</p>
    public let variables: [String:String]?
    /// <p>The ARN of the WebAcl associated with the <a>Stage</a>.</p>
    public let webAclArn: String?

    public init (
        accessLogSettings: AccessLogSettings? = nil,
        cacheClusterEnabled: Bool = false,
        cacheClusterSize: CacheClusterSize? = nil,
        cacheClusterStatus: CacheClusterStatus? = nil,
        canarySettings: CanarySettings? = nil,
        clientCertificateId: String? = nil,
        createdDate: Date? = nil,
        deploymentId: String? = nil,
        description: String? = nil,
        documentationVersion: String? = nil,
        lastUpdatedDate: Date? = nil,
        methodSettings: [String:MethodSetting]? = nil,
        stageName: String? = nil,
        tags: [String:String]? = nil,
        tracingEnabled: Bool = false,
        variables: [String:String]? = nil,
        webAclArn: String? = nil
    )
    {
        self.accessLogSettings = accessLogSettings
        self.cacheClusterEnabled = cacheClusterEnabled
        self.cacheClusterSize = cacheClusterSize
        self.cacheClusterStatus = cacheClusterStatus
        self.canarySettings = canarySettings
        self.clientCertificateId = clientCertificateId
        self.createdDate = createdDate
        self.deploymentId = deploymentId
        self.description = description
        self.documentationVersion = documentationVersion
        self.lastUpdatedDate = lastUpdatedDate
        self.methodSettings = methodSettings
        self.stageName = stageName
        self.tags = tags
        self.tracingEnabled = tracingEnabled
        self.variables = variables
        self.webAclArn = webAclArn
    }
}

extension Stage: CustomDebugStringConvertible {
    public var debugDescription: String {
        "Stage(accessLogSettings: \(String(describing: accessLogSettings)), cacheClusterEnabled: \(String(describing: cacheClusterEnabled)), cacheClusterSize: \(String(describing: cacheClusterSize)), cacheClusterStatus: \(String(describing: cacheClusterStatus)), canarySettings: \(String(describing: canarySettings)), clientCertificateId: \(String(describing: clientCertificateId)), createdDate: \(String(describing: createdDate)), deploymentId: \(String(describing: deploymentId)), description: \(String(describing: description)), documentationVersion: \(String(describing: documentationVersion)), lastUpdatedDate: \(String(describing: lastUpdatedDate)), methodSettings: \(String(describing: methodSettings)), stageName: \(String(describing: stageName)), tags: \(String(describing: tags)), tracingEnabled: \(String(describing: tracingEnabled)), variables: \(String(describing: variables)), webAclArn: \(String(describing: webAclArn)))"}
}
