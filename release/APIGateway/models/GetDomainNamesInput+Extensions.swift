// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct GetDomainNamesInputHeadersMiddleware: Middleware {
    public let id: String = "GetDomainNamesInputHeadersMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<GetDomainNamesInput>,
                  next: H) -> Swift.Result<OperationOutput<GetDomainNamesOutputResponse>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<GetDomainNamesInput>
    public typealias MOutput = OperationOutput<GetDomainNamesOutputResponse>
    public typealias Context = ClientRuntime.HttpContext
    public typealias MError = SdkError<GetDomainNamesOutputError>
}

public struct GetDomainNamesInputQueryItemMiddleware: Middleware {
    public let id: String = "GetDomainNamesInputQueryItemMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<GetDomainNamesInput>,
                  next: H) -> Swift.Result<OperationOutput<GetDomainNamesOutputResponse>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        if let limit = input.operationInput.limit {
            let limitQueryItem = URLQueryItem(name: "limit".urlPercentEncoding(), value: String(limit).urlPercentEncoding())
            input.builder.withQueryItem(limitQueryItem)
        }
        if let position = input.operationInput.position {
            let positionQueryItem = URLQueryItem(name: "position".urlPercentEncoding(), value: String(position).urlPercentEncoding())
            input.builder.withQueryItem(positionQueryItem)
        }
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<GetDomainNamesInput>
    public typealias MOutput = OperationOutput<GetDomainNamesOutputResponse>
    public typealias Context = ClientRuntime.HttpContext
    public typealias MError = SdkError<GetDomainNamesOutputError>
}

extension GetDomainNamesInput: Encodable, Reflection {

    public func encode(to encoder: Encoder) throws {
    }
}
