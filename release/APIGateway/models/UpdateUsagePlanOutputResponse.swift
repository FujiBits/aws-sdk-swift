// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Represents a usage plan than can specify who can assess associated API stages with specified request limits and quotas.</p>
///       <div class="remarks">
///         <p>In a usage plan, you associate an API by specifying the API's Id and a stage name of the specified API. You add plan customers by adding API keys to the plan. </p>
///       </div>
///       <div class="seeAlso">
///         <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-api-usage-plans.html">Create and Use Usage Plans</a>
///       </div>
public struct UpdateUsagePlanOutputResponse: Equatable {
    /// <p>The associated API stages of a usage plan.</p>
    public let apiStages: [ApiStage]?
    /// <p>The description of a usage plan.</p>
    public let description: String?
    /// <p>The identifier of a <a>UsagePlan</a> resource.</p>
    public let id: String?
    /// <p>The name of a usage plan.</p>
    public let name: String?
    /// <p>The AWS Markeplace product identifier to associate with the usage plan as a SaaS product on AWS Marketplace.</p>
    public let productCode: String?
    /// <p>The maximum number of permitted requests per a given unit time interval.</p>
    public let quota: QuotaSettings?
    /// <p>The collection of tags. Each tag element is associated with a given resource.</p>
    public let tags: [String:String]?
    /// <p>The request throttle limits of a usage plan.</p>
    public let throttle: ThrottleSettings?

    public init (
        apiStages: [ApiStage]? = nil,
        description: String? = nil,
        id: String? = nil,
        name: String? = nil,
        productCode: String? = nil,
        quota: QuotaSettings? = nil,
        tags: [String:String]? = nil,
        throttle: ThrottleSettings? = nil
    )
    {
        self.apiStages = apiStages
        self.description = description
        self.id = id
        self.name = name
        self.productCode = productCode
        self.quota = quota
        self.tags = tags
        self.throttle = throttle
    }
}

extension UpdateUsagePlanOutputResponse: CustomDebugStringConvertible {
    public var debugDescription: String {
        "UpdateUsagePlanOutputResponse(apiStages: \(String(describing: apiStages)), description: \(String(describing: description)), id: \(String(describing: id)), name: \(String(describing: name)), productCode: \(String(describing: productCode)), quota: \(String(describing: quota)), tags: \(String(describing: tags)), throttle: \(String(describing: throttle)))"}
}
