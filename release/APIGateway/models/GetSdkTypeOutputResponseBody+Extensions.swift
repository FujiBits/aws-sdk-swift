// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetSdkTypeOutputResponseBody: Equatable {
    public let id: String?
    public let friendlyName: String?
    public let description: String?
    public let configurationProperties: [SdkConfigurationProperty]?
}

extension GetSdkTypeOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case configurationProperties
        case description
        case friendlyName
        case id
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let idDecoded = try containerValues.decodeIfPresent(String.self, forKey: .id)
        id = idDecoded
        let friendlyNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .friendlyName)
        friendlyName = friendlyNameDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .description)
        description = descriptionDecoded
        let configurationPropertiesContainer = try containerValues.decodeIfPresent([SdkConfigurationProperty?].self, forKey: .configurationProperties)
        var configurationPropertiesDecoded0:[SdkConfigurationProperty]? = nil
        if let configurationPropertiesContainer = configurationPropertiesContainer {
            configurationPropertiesDecoded0 = [SdkConfigurationProperty]()
            for structure0 in configurationPropertiesContainer {
                if let structure0 = structure0 {
                    configurationPropertiesDecoded0?.append(structure0)
                }
            }
        }
        configurationProperties = configurationPropertiesDecoded0
    }
}
