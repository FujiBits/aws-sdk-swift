// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Represents a method response of a given HTTP status code returned to the client. The method response is passed from the back end through the associated integration response that can be transformed using a mapping template. <!-- API Gateway sends back the status code to the caller as the HTTP status code. Parameters and models can be used to transform the response from the method's integration.--></p>
///         <div class="remarks">
///           <p></p>
///           <h4>Example: A <b>MethodResponse</b> instance of an API</h4>
///           <h5>Request</h5>
///           <p>The example request retrieves a <b>MethodResponse</b> of the 200 status code.</p>
///           <pre><code>GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200 HTTP/1.1
/// Content-Type: application/json
/// Host: apigateway.us-east-1.amazonaws.com
/// X-Amz-Date: 20160603T222952Z
/// Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160603/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}</code></pre>
///           <h5>Response</h5>
///           <p>The successful response returns <code>200 OK</code> status and a payload as follows:</p>
///           <pre><code>{
///   "_links": {
///     "curies": {
///       "href": "https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html",
///       "name": "methodresponse",
///       "templated": true
///     },
///     "self": {
///       "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200",
///       "title": "200"
///     },
///     "methodresponse:delete": {
///       "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200"
///     },
///     "methodresponse:update": {
///       "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200"
///     }
///   },
///   "responseModels": {
///     "application/json": "Empty"
///   },
///   "responseParameters": {
///     "method.response.header.Content-Type": false
///   },
///   "statusCode": "200"
/// }</code></pre>
///           <p></p>
///       </div>
///       <div class="seeAlso">
///         <a>Method</a>, <a>IntegrationResponse</a>, <a>Integration</a>
///         <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-create-api.html">Creating an API</a>
///       </div>
public struct PutMethodResponseOutputResponse: Equatable {
    /// <p>Specifies the <a>Model</a> resources used for the response's content-type. Response models are represented as a key/value map, with a content-type as the key and a <a>Model</a> name as the value.</p>
    public let responseModels: [String:String]?
    /// <p>A key-value map specifying required or optional response parameters that API Gateway can send back to the caller. A key defines a method response header and the value specifies whether the associated method response header is required or not. The expression of the key must match the pattern <code>method.response.header.{name}</code>, where <code>name</code> is a valid and unique header name. API Gateway passes certain integration response data to the method response headers specified here according to the mapping you prescribe in the API's <a>IntegrationResponse</a>. The integration response data that can be mapped include an integration response header expressed in <code>integration.response.header.{name}</code>, a static value enclosed within a pair of single quotes (e.g., <code>'application/json'</code>), or a JSON expression from the back-end response payload in the form of <code>integration.response.body.{JSON-expression}</code>, where <code>JSON-expression</code> is a valid JSON expression without the <code>$</code> prefix.)</p>
    public let responseParameters: [String:Bool]?
    /// <p>The method response's status code.</p>
    public let statusCode: String?

    public init (
        responseModels: [String:String]? = nil,
        responseParameters: [String:Bool]? = nil,
        statusCode: String? = nil
    )
    {
        self.responseModels = responseModels
        self.responseParameters = responseParameters
        self.statusCode = statusCode
    }
}

extension PutMethodResponseOutputResponse: CustomDebugStringConvertible {
    public var debugDescription: String {
        "PutMethodResponseOutputResponse(responseModels: \(String(describing: responseModels)), responseParameters: \(String(describing: responseParameters)), statusCode: \(String(describing: statusCode)))"}
}
