// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Make a request to simulate the execution of a <a>Method</a>.</p>
public struct TestInvokeMethodInput: Equatable {
    /// <p>The simulated request body of an incoming invocation request.</p>
    public let body: String?
    /// <p>A <a>ClientCertificate</a> identifier to use in the test invocation. API Gateway will use the certificate when making the HTTPS request to the defined back-end endpoint.</p>
    public let clientCertificateId: String?
    /// <p>A key-value map of headers to simulate an incoming invocation request.</p>
    public let headers: [String:String]?
    /// <p>[Required] Specifies a test invoke method request's HTTP method.</p>
    public let httpMethod: String?
    /// <p>The headers as a map from string to list of values to simulate an incoming invocation request.</p>
    public let multiValueHeaders: [String:[String]]?
    /// <p>The URI path, including query string, of the simulated invocation request. Use this to specify path parameters and query string parameters.</p>
    public let pathWithQueryString: String?
    /// <p>[Required] Specifies a test invoke method request's resource ID.</p>
    public let resourceId: String?
    /// <p>[Required] The string identifier of the associated <a>RestApi</a>.</p>
    public let restApiId: String?
    /// <p>A key-value map of stage variables to simulate an invocation on a deployed <a>Stage</a>.</p>
    public let stageVariables: [String:String]?

    public init (
        body: String? = nil,
        clientCertificateId: String? = nil,
        headers: [String:String]? = nil,
        httpMethod: String? = nil,
        multiValueHeaders: [String:[String]]? = nil,
        pathWithQueryString: String? = nil,
        resourceId: String? = nil,
        restApiId: String? = nil,
        stageVariables: [String:String]? = nil
    )
    {
        self.body = body
        self.clientCertificateId = clientCertificateId
        self.headers = headers
        self.httpMethod = httpMethod
        self.multiValueHeaders = multiValueHeaders
        self.pathWithQueryString = pathWithQueryString
        self.resourceId = resourceId
        self.restApiId = restApiId
        self.stageVariables = stageVariables
    }
}

extension TestInvokeMethodInput: CustomDebugStringConvertible {
    public var debugDescription: String {
        "TestInvokeMethodInput(body: \(String(describing: body)), clientCertificateId: \(String(describing: clientCertificateId)), headers: \(String(describing: headers)), httpMethod: \(String(describing: httpMethod)), multiValueHeaders: \(String(describing: multiValueHeaders)), pathWithQueryString: \(String(describing: pathWithQueryString)), resourceId: \(String(describing: resourceId)), restApiId: \(String(describing: restApiId)), stageVariables: \(String(describing: stageVariables)))"}
}
