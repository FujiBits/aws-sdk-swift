// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum UnauthorizedCacheControlHeaderStrategy {
    case failWith403
    case succeedWithoutResponseHeader
    case succeedWithResponseHeader
    case sdkUnknown(String)
}

extension UnauthorizedCacheControlHeaderStrategy : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [UnauthorizedCacheControlHeaderStrategy] {
        return [
            .failWith403,
            .succeedWithoutResponseHeader,
            .succeedWithResponseHeader,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .failWith403: return "FAIL_WITH_403"
        case .succeedWithoutResponseHeader: return "SUCCEED_WITHOUT_RESPONSE_HEADER"
        case .succeedWithResponseHeader: return "SUCCEED_WITH_RESPONSE_HEADER"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = UnauthorizedCacheControlHeaderStrategy(rawValue: rawValue) ?? UnauthorizedCacheControlHeaderStrategy.sdkUnknown(rawValue)
    }
}
