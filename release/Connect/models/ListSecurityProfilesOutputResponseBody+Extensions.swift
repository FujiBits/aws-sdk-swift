// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSecurityProfilesOutputResponseBody: Equatable {
    public let securityProfileSummaryList: [SecurityProfileSummary]?
    public let nextToken: String?
}

extension ListSecurityProfilesOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case securityProfileSummaryList = "SecurityProfileSummaryList"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let securityProfileSummaryListContainer = try containerValues.decodeIfPresent([SecurityProfileSummary?].self, forKey: .securityProfileSummaryList)
        var securityProfileSummaryListDecoded0:[SecurityProfileSummary]? = nil
        if let securityProfileSummaryListContainer = securityProfileSummaryListContainer {
            securityProfileSummaryListDecoded0 = [SecurityProfileSummary]()
            for structure0 in securityProfileSummaryListContainer {
                if let structure0 = structure0 {
                    securityProfileSummaryListDecoded0?.append(structure0)
                }
            }
        }
        securityProfileSummaryList = securityProfileSummaryListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
