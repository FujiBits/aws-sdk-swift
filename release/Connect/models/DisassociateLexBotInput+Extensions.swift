// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DisassociateLexBotInputHeadersMiddleware: Middleware {
    public let id: String = "DisassociateLexBotInputHeadersMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<DisassociateLexBotInput>,
                  next: H) -> Swift.Result<OperationOutput<DisassociateLexBotOutputResponse>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<DisassociateLexBotInput>
    public typealias MOutput = OperationOutput<DisassociateLexBotOutputResponse>
    public typealias Context = ClientRuntime.HttpContext
    public typealias MError = SdkError<DisassociateLexBotOutputError>
}

public struct DisassociateLexBotInputQueryItemMiddleware: Middleware {
    public let id: String = "DisassociateLexBotInputQueryItemMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<DisassociateLexBotInput>,
                  next: H) -> Swift.Result<OperationOutput<DisassociateLexBotOutputResponse>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        if let lexRegion = input.operationInput.lexRegion {
            let lexRegionQueryItem = URLQueryItem(name: "lexRegion".urlPercentEncoding(), value: String(lexRegion).urlPercentEncoding())
            input.builder.withQueryItem(lexRegionQueryItem)
        }
        if let botName = input.operationInput.botName {
            let botNameQueryItem = URLQueryItem(name: "botName".urlPercentEncoding(), value: String(botName).urlPercentEncoding())
            input.builder.withQueryItem(botNameQueryItem)
        }
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<DisassociateLexBotInput>
    public typealias MOutput = OperationOutput<DisassociateLexBotOutputResponse>
    public typealias Context = ClientRuntime.HttpContext
    public typealias MError = SdkError<DisassociateLexBotOutputError>
}

extension DisassociateLexBotInput: Encodable, Reflection {

    public func encode(to encoder: Encoder) throws {
    }
}
