// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListHoursOfOperationsOutputResponseBody: Equatable {
    public let hoursOfOperationSummaryList: [HoursOfOperationSummary]?
    public let nextToken: String?
}

extension ListHoursOfOperationsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case hoursOfOperationSummaryList = "HoursOfOperationSummaryList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let hoursOfOperationSummaryListContainer = try containerValues.decodeIfPresent([HoursOfOperationSummary?].self, forKey: .hoursOfOperationSummaryList)
        var hoursOfOperationSummaryListDecoded0:[HoursOfOperationSummary]? = nil
        if let hoursOfOperationSummaryListContainer = hoursOfOperationSummaryListContainer {
            hoursOfOperationSummaryListDecoded0 = [HoursOfOperationSummary]()
            for structure0 in hoursOfOperationSummaryListContainer {
                if let structure0 = structure0 {
                    hoursOfOperationSummaryListDecoded0?.append(structure0)
                }
            }
        }
        hoursOfOperationSummaryList = hoursOfOperationSummaryListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
