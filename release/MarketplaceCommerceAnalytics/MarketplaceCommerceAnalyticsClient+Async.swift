// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

#if swift(>=5.5)
@available(macOS 12.0, iOS 15.0, tvOS 15.0, watchOS 8.0, macCatalyst 15.0, *)
public extension MarketplaceCommerceAnalyticsClient {
    /// Given a data set type and data set publication date, asynchronously publishes the requested data set to the specified
    ///         S3 bucket and notifies the specified SNS topic once the data is available. Returns a unique request identifier that
    ///         can be used to correlate requests with notifications from the SNS topic.
    ///         Data sets will be published in comma-separated values (CSV) format with the file name {data_set_type}_YYYY-MM-DD.csv.
    ///         If a file with the same name already exists (e.g. if the same data set is requested twice), the original file will
    ///         be overwritten by the new file.
    ///         Requires a Role with an attached permissions policy providing Allow permissions for the following actions:
    ///         s3:PutObject, s3:GetBucketLocation, sns:GetTopicAttributes, sns:Publish, iam:GetRolePolicy.
    func generateDataSet(input: GenerateDataSetInput) async throws -> GenerateDataSetOutputResponse
    {
        typealias generateDataSetContinuation = CheckedContinuation<GenerateDataSetOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: generateDataSetContinuation) in
            generateDataSet(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Given a data set type and a from date, asynchronously publishes the requested customer support data
    ///         to the specified S3 bucket and notifies the specified SNS topic once the data is available. Returns a unique request
    ///         identifier that can be used to correlate requests with notifications from the SNS topic.
    ///         Data sets will be published in comma-separated values (CSV) format with the file name {data_set_type}_YYYY-MM-DD'T'HH-mm-ss'Z'.csv.
    ///         If a file with the same name already exists (e.g. if the same data set is requested twice), the original file will
    ///         be overwritten by the new file.
    ///         Requires a Role with an attached permissions policy providing Allow permissions for the following actions:
    ///         s3:PutObject, s3:GetBucketLocation, sns:GetTopicAttributes, sns:Publish, iam:GetRolePolicy.
    func startSupportDataExport(input: StartSupportDataExportInput) async throws -> StartSupportDataExportOutputResponse
    {
        typealias startSupportDataExportContinuation = CheckedContinuation<StartSupportDataExportOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: startSupportDataExportContinuation) in
            startSupportDataExport(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

}
#endif
