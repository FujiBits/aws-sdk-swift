// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListClustersOutputResponseBody: Equatable {
    public let clusterListEntries: [ClusterListEntry]?
    public let nextToken: String?
}

extension ListClustersOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case clusterListEntries = "ClusterListEntries"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clusterListEntriesContainer = try containerValues.decodeIfPresent([ClusterListEntry?].self, forKey: .clusterListEntries)
        var clusterListEntriesDecoded0:[ClusterListEntry]? = nil
        if let clusterListEntriesContainer = clusterListEntriesContainer {
            clusterListEntriesDecoded0 = [ClusterListEntry]()
            for structure0 in clusterListEntriesContainer {
                if let structure0 = structure0 {
                    clusterListEntriesDecoded0?.append(structure0)
                }
            }
        }
        clusterListEntries = clusterListEntriesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
