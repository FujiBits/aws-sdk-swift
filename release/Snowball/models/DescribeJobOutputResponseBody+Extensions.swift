// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeJobOutputResponseBody: Equatable {
    public let jobMetadata: JobMetadata?
    public let subJobMetadata: [JobMetadata]?
}

extension DescribeJobOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case jobMetadata = "JobMetadata"
        case subJobMetadata = "SubJobMetadata"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let jobMetadataDecoded = try containerValues.decodeIfPresent(JobMetadata.self, forKey: .jobMetadata)
        jobMetadata = jobMetadataDecoded
        let subJobMetadataContainer = try containerValues.decodeIfPresent([JobMetadata?].self, forKey: .subJobMetadata)
        var subJobMetadataDecoded0:[JobMetadata]? = nil
        if let subJobMetadataContainer = subJobMetadataContainer {
            subJobMetadataDecoded0 = [JobMetadata]()
            for structure0 in subJobMetadataContainer {
                if let structure0 = structure0 {
                    subJobMetadataDecoded0?.append(structure0)
                }
            }
        }
        subJobMetadata = subJobMetadataDecoded0
    }
}
