// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListEntitlementsOutputResponseBody: Equatable {
    public let entitlements: [ListedEntitlement]?
    public let nextToken: String?
}

extension ListEntitlementsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case entitlements = "entitlements"
        case nextToken = "nextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let entitlementsContainer = try containerValues.decodeIfPresent([ListedEntitlement?].self, forKey: .entitlements)
        var entitlementsDecoded0:[ListedEntitlement]? = nil
        if let entitlementsContainer = entitlementsContainer {
            entitlementsDecoded0 = [ListedEntitlement]()
            for structure0 in entitlementsContainer {
                if let structure0 = structure0 {
                    entitlementsDecoded0?.append(structure0)
                }
            }
        }
        entitlements = entitlementsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
