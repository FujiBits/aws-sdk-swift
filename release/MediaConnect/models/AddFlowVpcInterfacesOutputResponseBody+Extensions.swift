// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AddFlowVpcInterfacesOutputResponseBody: Equatable {
    public let flowArn: String?
    public let vpcInterfaces: [VpcInterface]?
}

extension AddFlowVpcInterfacesOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case flowArn = "flowArn"
        case vpcInterfaces = "vpcInterfaces"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let flowArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .flowArn)
        flowArn = flowArnDecoded
        let vpcInterfacesContainer = try containerValues.decodeIfPresent([VpcInterface?].self, forKey: .vpcInterfaces)
        var vpcInterfacesDecoded0:[VpcInterface]? = nil
        if let vpcInterfacesContainer = vpcInterfacesContainer {
            vpcInterfacesDecoded0 = [VpcInterface]()
            for structure0 in vpcInterfacesContainer {
                if let structure0 = structure0 {
                    vpcInterfacesDecoded0?.append(structure0)
                }
            }
        }
        vpcInterfaces = vpcInterfacesDecoded0
    }
}
