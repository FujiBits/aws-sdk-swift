// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSignalingChannelsOutputResponseBody: Equatable {
    public let channelInfoList: [ChannelInfo]?
    public let nextToken: String?
}

extension ListSignalingChannelsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case channelInfoList = "ChannelInfoList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let channelInfoListContainer = try containerValues.decodeIfPresent([ChannelInfo?].self, forKey: .channelInfoList)
        var channelInfoListDecoded0:[ChannelInfo]? = nil
        if let channelInfoListContainer = channelInfoListContainer {
            channelInfoListDecoded0 = [ChannelInfo]()
            for structure0 in channelInfoListContainer {
                if let structure0 = structure0 {
                    channelInfoListDecoded0?.append(structure0)
                }
            }
        }
        channelInfoList = channelInfoListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
