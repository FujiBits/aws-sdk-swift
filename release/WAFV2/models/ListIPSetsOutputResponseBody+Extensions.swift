// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListIPSetsOutputResponseBody: Equatable {
    public let nextMarker: String?
    public let iPSets: [IPSetSummary]?
}

extension ListIPSetsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case iPSets = "IPSets"
        case nextMarker = "NextMarker"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextMarkerDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextMarker)
        nextMarker = nextMarkerDecoded
        let iPSetsContainer = try containerValues.decodeIfPresent([IPSetSummary?].self, forKey: .iPSets)
        var iPSetsDecoded0:[IPSetSummary]? = nil
        if let iPSetsContainer = iPSetsContainer {
            iPSetsDecoded0 = [IPSetSummary]()
            for structure0 in iPSetsContainer {
                if let structure0 = structure0 {
                    iPSetsDecoded0?.append(structure0)
                }
            }
        }
        iPSets = iPSetsDecoded0
    }
}
