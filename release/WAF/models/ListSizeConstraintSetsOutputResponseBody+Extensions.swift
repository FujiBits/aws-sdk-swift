// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSizeConstraintSetsOutputResponseBody: Equatable {
    public let nextMarker: String?
    public let sizeConstraintSets: [SizeConstraintSetSummary]?
}

extension ListSizeConstraintSetsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextMarker = "NextMarker"
        case sizeConstraintSets = "SizeConstraintSets"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextMarkerDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextMarker)
        nextMarker = nextMarkerDecoded
        let sizeConstraintSetsContainer = try containerValues.decodeIfPresent([SizeConstraintSetSummary?].self, forKey: .sizeConstraintSets)
        var sizeConstraintSetsDecoded0:[SizeConstraintSetSummary]? = nil
        if let sizeConstraintSetsContainer = sizeConstraintSetsContainer {
            sizeConstraintSetsDecoded0 = [SizeConstraintSetSummary]()
            for structure0 in sizeConstraintSetsContainer {
                if let structure0 = structure0 {
                    sizeConstraintSetsDecoded0?.append(structure0)
                }
            }
        }
        sizeConstraintSets = sizeConstraintSetsDecoded0
    }
}
