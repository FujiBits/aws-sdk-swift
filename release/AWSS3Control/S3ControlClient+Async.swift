// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

#if swift(>=5.5)
@available(macOS 12.0, iOS 15.0, tvOS 15.0, watchOS 8.0, macCatalyst 15.0, *)
public extension S3ControlClient {
    /// Creates an access point and associates it with the specified bucket. For more information, see
    ///          <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-points.html">Managing Data Access with Amazon S3 Access
    ///             Points in the Amazon S3 User Guide.
    ///
    ///
    ///             S3 on Outposts only supports VPC-style access points.
    ///
    ///             For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">
    ///          Accessing Amazon S3 on Outposts using virtual private cloud (VPC) only access points in
    ///          the Amazon S3 User Guide.
    ///
    ///          All Amazon S3 on Outposts REST API requests for this action require an additional parameter of x-amz-outpost-id to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of s3-control. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the x-amz-outpost-id derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPoint.html#API_control_CreateAccessPoint_Examples">Examples section.
    ///
    ///          The following actions are related to CreateAccessPoint:
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPoint.html">GetAccessPoint
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPoint.html">DeleteAccessPoint
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListAccessPoints.html">ListAccessPoints
    ///
    ///
    ///
    func createAccessPoint(input: CreateAccessPointInput) async throws -> CreateAccessPointOutputResponse
    {
        typealias createAccessPointContinuation = CheckedContinuation<CreateAccessPointOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: createAccessPointContinuation) in
            createAccessPoint(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Creates an Object Lambda Access Point. For more information, see
    ///          <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/transforming-objects.html">Transforming objects with Object Lambda Access Points in the Amazon S3 User Guide.
    ///          The following actions are related to CreateAccessPointForObjectLambda:
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointForObjectLambda.html">DeleteAccessPointForObjectLambda
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointForObjectLambda.html">GetAccessPointForObjectLambda
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListAccessPointsForObjectLambda.html">ListAccessPointsForObjectLambda
    ///
    ///
    ///
    func createAccessPointForObjectLambda(input: CreateAccessPointForObjectLambdaInput) async throws -> CreateAccessPointForObjectLambdaOutputResponse
    {
        typealias createAccessPointForObjectLambdaContinuation = CheckedContinuation<CreateAccessPointForObjectLambdaOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: createAccessPointForObjectLambdaContinuation) in
            createAccessPointForObjectLambda(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    ///
    ///             This action creates an Amazon S3 on Outposts bucket. To create an S3 bucket, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html">Create Bucket in the Amazon S3 API Reference.
    ///
    ///
    ///          Creates a new Outposts bucket. By creating the bucket, you become the bucket owner. To create an Outposts bucket, you must have S3 on Outposts.
    ///          For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts in Amazon S3 User Guide.
    ///          Not every string is an acceptable bucket name. For information on bucket naming restrictions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/BucketRestrictions.html#bucketnamingrules">Working with Amazon S3 Buckets.
    ///          S3 on Outposts buckets support:
    ///
    ///
    ///                Tags
    ///
    ///
    ///                LifecycleConfigurations for deleting expired objects
    ///
    ///
    ///          For a complete list of restrictions and Amazon S3 feature limitations on S3 on Outposts,
    ///          see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3OnOutpostsRestrictionsLimitations.html">
    ///             Amazon S3 on Outposts Restrictions and Limitations.
    ///          For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts
    ///          endpoint hostname prefix and x-amz-outpost-id in your API request, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateBucket.html#API_control_CreateBucket_Examples">Examples section.
    ///
    ///          The following actions are related to CreateBucket for Amazon S3 on Outposts:
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html">PutObject
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucket.html">GetBucket
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucket.html">DeleteBucket
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPoint.html">CreateAccessPoint
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointPolicy.html">PutAccessPointPolicy
    ///
    ///
    ///
    func createBucket(input: CreateBucketInput) async throws -> CreateBucketOutputResponse
    {
        typealias createBucketContinuation = CheckedContinuation<CreateBucketOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: createBucketContinuation) in
            createBucket(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// You can use S3 Batch Operations to perform large-scale batch actions on Amazon S3 objects. Batch Operations can run a
    ///          single action on lists of Amazon S3 objects that you specify. For more information,
    ///          see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-basics.html">S3 Batch Operations in the
    ///             Amazon S3 User Guide.
    ///          This action creates a S3 Batch Operations job.
    ///
    ///          Related actions include:
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeJob.html">DescribeJob
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListJobs.html">ListJobs
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobPriority.html">UpdateJobPriority
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobStatus.html">UpdateJobStatus
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_JobOperation.html">JobOperation
    ///
    ///
    ///
    func createJob(input: CreateJobInput) async throws -> CreateJobOutputResponse
    {
        typealias createJobContinuation = CheckedContinuation<CreateJobOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: createJobContinuation) in
            createJob(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Creates a Multi-Region Access Point and associates it with the specified buckets. For more information about creating Multi-Region Access Points, see
    ///          <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/CreatingMultiRegionAccessPoints.html">Creating
    ///          Multi-Region Access Points in the Amazon S3 User Guide.
    ///          This action will always be routed to the US West (Oregon) Region. For more
    ///             information about the restrictions around managing Multi-Region Access Points, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/ManagingMultiRegionAccessPoints.html">Managing
    ///                 Multi-Region Access Points in the
    ///             Amazon S3 User Guide.
    ///          This request is asynchronous, meaning that you might receive a response before the
    ///             command has completed. When this request provides a response, it provides a token that
    ///             you can use to monitor the status of the request with
    ///                 DescribeMultiRegionAccessPointOperation.
    ///          The following actions are related to CreateMultiRegionAccessPoint:
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteMultiRegionAccessPoint.html">DeleteMultiRegionAccessPoint
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeMultiRegionAccessPointOperation.html">DescribeMultiRegionAccessPointOperation
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetMultiRegionAccessPoint.html">GetMultiRegionAccessPoint
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListMultiRegionAccessPoints.html">ListMultiRegionAccessPoints
    ///
    ///
    ///
    func createMultiRegionAccessPoint(input: CreateMultiRegionAccessPointInput) async throws -> CreateMultiRegionAccessPointOutputResponse
    {
        typealias createMultiRegionAccessPointContinuation = CheckedContinuation<CreateMultiRegionAccessPointOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: createMultiRegionAccessPointContinuation) in
            createMultiRegionAccessPoint(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Deletes the specified access point.
    ///
    ///          All Amazon S3 on Outposts REST API requests for this action require an additional parameter of x-amz-outpost-id to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of s3-control. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the x-amz-outpost-id derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPoint.html#API_control_DeleteAccessPoint_Examples">Examples section.
    ///          The following actions are related to DeleteAccessPoint:
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPoint.html">CreateAccessPoint
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPoint.html">GetAccessPoint
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListAccessPoints.html">ListAccessPoints
    ///
    ///
    ///
    func deleteAccessPoint(input: DeleteAccessPointInput) async throws -> DeleteAccessPointOutputResponse
    {
        typealias deleteAccessPointContinuation = CheckedContinuation<DeleteAccessPointOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: deleteAccessPointContinuation) in
            deleteAccessPoint(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Deletes the specified Object Lambda Access Point.
    ///          The following actions are related to DeleteAccessPointForObjectLambda:
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPointForObjectLambda.html">CreateAccessPointForObjectLambda
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointForObjectLambda.html">GetAccessPointForObjectLambda
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListAccessPointsForObjectLambda.html">ListAccessPointsForObjectLambda
    ///
    ///
    ///
    func deleteAccessPointForObjectLambda(input: DeleteAccessPointForObjectLambdaInput) async throws -> DeleteAccessPointForObjectLambdaOutputResponse
    {
        typealias deleteAccessPointForObjectLambdaContinuation = CheckedContinuation<DeleteAccessPointForObjectLambdaOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: deleteAccessPointForObjectLambdaContinuation) in
            deleteAccessPointForObjectLambda(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Deletes the access point policy for the specified access point.
    ///
    ///          All Amazon S3 on Outposts REST API requests for this action require an additional parameter of x-amz-outpost-id to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of s3-control. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the x-amz-outpost-id derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointPolicy.html#API_control_DeleteAccessPointPolicy_Examples">Examples section.
    ///          The following actions are related to DeleteAccessPointPolicy:
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointPolicy.html">PutAccessPointPolicy
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointPolicy.html">GetAccessPointPolicy
    ///
    ///
    ///
    func deleteAccessPointPolicy(input: DeleteAccessPointPolicyInput) async throws -> DeleteAccessPointPolicyOutputResponse
    {
        typealias deleteAccessPointPolicyContinuation = CheckedContinuation<DeleteAccessPointPolicyOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: deleteAccessPointPolicyContinuation) in
            deleteAccessPointPolicy(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Removes the resource policy for an Object Lambda Access Point.
    ///          The following actions are related to DeleteAccessPointPolicyForObjectLambda:
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointPolicyForObjectLambda.html">GetAccessPointPolicyForObjectLambda
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointPolicyForObjectLambda.html">PutAccessPointPolicyForObjectLambda
    ///
    ///
    ///
    func deleteAccessPointPolicyForObjectLambda(input: DeleteAccessPointPolicyForObjectLambdaInput) async throws -> DeleteAccessPointPolicyForObjectLambdaOutputResponse
    {
        typealias deleteAccessPointPolicyForObjectLambdaContinuation = CheckedContinuation<DeleteAccessPointPolicyForObjectLambdaOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: deleteAccessPointPolicyForObjectLambdaContinuation) in
            deleteAccessPointPolicyForObjectLambda(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    ///
    ///             This action deletes an Amazon S3 on Outposts bucket. To delete an S3 bucket,
    ///          see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucket.html">DeleteBucket in the Amazon S3 API Reference.
    ///
    ///
    ///          Deletes the Amazon S3 on Outposts bucket. All objects (including all object versions and delete markers) in the
    ///          bucket must be deleted before the bucket itself can be deleted.
    ///          For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts in Amazon S3 User Guide.
    ///          All Amazon S3 on Outposts REST API requests for this action require an additional parameter of x-amz-outpost-id to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of s3-control. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the x-amz-outpost-id derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucket.html#API_control_DeleteBucket_Examples">Examples section.
    ///          <p class="title">
    ///             Related Resources
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateBucket.html">CreateBucket
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucket.html">GetBucket
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObject.html">DeleteObject
    ///
    ///
    ///
    func deleteBucket(input: DeleteBucketInput) async throws -> DeleteBucketOutputResponse
    {
        typealias deleteBucketContinuation = CheckedContinuation<DeleteBucketOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: deleteBucketContinuation) in
            deleteBucket(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    ///
    ///             This action deletes an Amazon S3 on Outposts bucket's lifecycle configuration. To delete an
    ///          S3 bucket's lifecycle configuration, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketLifecycle.html">DeleteBucketLifecycle in the Amazon S3 API Reference.
    ///
    ///
    ///          Deletes the lifecycle configuration from the specified Outposts bucket. Amazon S3 on Outposts removes all the lifecycle configuration
    ///          rules in the lifecycle subresource associated with the bucket. Your objects never expire, and Amazon S3 on Outposts no longer automatically
    ///          deletes any objects on the basis of rules contained in the deleted lifecycle configuration.
    ///          For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts in Amazon S3 User Guide.
    ///          To use this action, you must have permission to perform the
    ///             s3-outposts:DeleteLifecycleConfiguration action. By default, the bucket
    ///          owner has this permission and the Outposts bucket owner can grant this permission to
    ///          others.
    ///          All Amazon S3 on Outposts REST API requests for this action require an additional parameter of x-amz-outpost-id to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of s3-control. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the x-amz-outpost-id derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketLifecycleConfiguration.html#API_control_DeleteBucketLifecycleConfiguration_Examples">Examples section.
    ///
    ///          For more information about object expiration, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#intro-lifecycle-rules-actions">Elements to Describe Lifecycle Actions.
    ///          Related actions include:
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketLifecycleConfiguration.html">PutBucketLifecycleConfiguration
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketLifecycleConfiguration.html">GetBucketLifecycleConfiguration
    ///
    ///
    ///
    func deleteBucketLifecycleConfiguration(input: DeleteBucketLifecycleConfigurationInput) async throws -> DeleteBucketLifecycleConfigurationOutputResponse
    {
        typealias deleteBucketLifecycleConfigurationContinuation = CheckedContinuation<DeleteBucketLifecycleConfigurationOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: deleteBucketLifecycleConfigurationContinuation) in
            deleteBucketLifecycleConfiguration(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    ///
    ///             This action deletes an Amazon S3 on Outposts bucket policy. To delete an
    ///          S3 bucket policy, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketPolicy.html">DeleteBucketPolicy in the Amazon S3 API Reference.
    ///
    ///
    ///          This implementation of the DELETE action uses the policy subresource to delete the
    ///          policy of a specified Amazon S3 on Outposts bucket. If you are using an identity other than the
    ///          root user of the Amazon Web Services account that owns the bucket, the calling identity must have the
    ///             s3-outposts:DeleteBucketPolicy permissions on the specified Outposts bucket
    ///          and belong to the bucket owner's account to use this action. For more information, see
    ///          <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts in
    ///             Amazon S3 User Guide.
    ///
    ///          If you don't have DeleteBucketPolicy permissions, Amazon S3 returns a
    ///          403 Access Denied error. If you have the correct permissions, but you're
    ///          not using an identity that belongs to the bucket owner's account, Amazon S3 returns a
    ///          405 Method Not Allowed error.
    ///
    ///
    ///
    ///             As a security precaution, the root user of the Amazon Web Services account that owns a bucket can always use this action,
    ///          even if the policy explicitly denies the root user the ability to perform this action.
    ///
    ///
    ///          For more information about bucket policies, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-iam-policies.html">Using Bucket Policies and User Policies.
    ///
    ///          All Amazon S3 on Outposts REST API requests for this action require an additional parameter of x-amz-outpost-id to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of s3-control. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the x-amz-outpost-id derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketPolicy.html#API_control_DeleteBucketPolicy_Examples">Examples section.
    ///
    ///          The following actions are related to DeleteBucketPolicy:
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketPolicy.html">GetBucketPolicy
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketPolicy.html">PutBucketPolicy
    ///
    ///
    ///
    func deleteBucketPolicy(input: DeleteBucketPolicyInput) async throws -> DeleteBucketPolicyOutputResponse
    {
        typealias deleteBucketPolicyContinuation = CheckedContinuation<DeleteBucketPolicyOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: deleteBucketPolicyContinuation) in
            deleteBucketPolicy(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    ///
    ///             This action deletes an Amazon S3 on Outposts bucket's tags. To delete an
    ///          S3 bucket tags, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketTagging.html">DeleteBucketTagging in the Amazon S3 API Reference.
    ///
    ///
    ///          Deletes the tags from the Outposts bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts in
    ///             Amazon S3 User Guide.
    ///
    ///          To use this action, you must have permission to perform the PutBucketTagging action.
    ///          By default, the bucket owner has this permission and can grant this permission to others.
    ///
    ///
    ///          All Amazon S3 on Outposts REST API requests for this action require an additional parameter of x-amz-outpost-id to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of s3-control. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the x-amz-outpost-id derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketTagging.html#API_control_DeleteBucketTagging_Examples">Examples section.
    ///
    ///          The following actions are related to DeleteBucketTagging:
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketTagging.html">GetBucketTagging
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketTagging.html">PutBucketTagging
    ///
    ///
    ///
    func deleteBucketTagging(input: DeleteBucketTaggingInput) async throws -> DeleteBucketTaggingOutputResponse
    {
        typealias deleteBucketTaggingContinuation = CheckedContinuation<DeleteBucketTaggingOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: deleteBucketTaggingContinuation) in
            deleteBucketTagging(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Removes the entire tag set from the specified S3 Batch Operations job. To use this operation,
    ///          you must have permission to perform the s3:DeleteJobTagging action. For more
    ///          information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-managing-jobs.html#batch-ops-job-tags">Controlling access and labeling jobs using tags in the
    ///             Amazon S3 User Guide.
    ///
    ///          Related actions include:
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateJob.html">CreateJob
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetJobTagging.html">GetJobTagging
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutJobTagging.html">PutJobTagging
    ///
    ///
    ///
    func deleteJobTagging(input: DeleteJobTaggingInput) async throws -> DeleteJobTaggingOutputResponse
    {
        typealias deleteJobTaggingContinuation = CheckedContinuation<DeleteJobTaggingOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: deleteJobTaggingContinuation) in
            deleteJobTagging(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Deletes a Multi-Region Access Point. This action does not delete the buckets associated with the Multi-Region Access Point,
    ///             only the Multi-Region Access Point itself.
    ///          This action will always be routed to the US West (Oregon) Region. For more
    ///             information about the restrictions around managing Multi-Region Access Points, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/ManagingMultiRegionAccessPoints.html">Managing
    ///                 Multi-Region Access Points in the
    ///             Amazon S3 User Guide.
    ///          This request is asynchronous, meaning that you might receive a response before the
    ///             command has completed. When this request provides a response, it provides a token that
    ///             you can use to monitor the status of the request with
    ///                 DescribeMultiRegionAccessPointOperation.
    ///          The following actions are related to DeleteMultiRegionAccessPoint:
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateMultiRegionAccessPoint.html">CreateMultiRegionAccessPoint
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeMultiRegionAccessPointOperation.html">DescribeMultiRegionAccessPointOperation
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetMultiRegionAccessPoint.html">GetMultiRegionAccessPoint
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListMultiRegionAccessPoints.html">ListMultiRegionAccessPoints
    ///
    ///
    ///
    func deleteMultiRegionAccessPoint(input: DeleteMultiRegionAccessPointInput) async throws -> DeleteMultiRegionAccessPointOutputResponse
    {
        typealias deleteMultiRegionAccessPointContinuation = CheckedContinuation<DeleteMultiRegionAccessPointOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: deleteMultiRegionAccessPointContinuation) in
            deleteMultiRegionAccessPoint(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Removes the PublicAccessBlock configuration for an Amazon Web Services account. For more
    ///          information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html"> Using Amazon S3 block
    ///             public access.
    ///          Related actions include:
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetPublicAccessBlock.html">GetPublicAccessBlock
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutPublicAccessBlock.html">PutPublicAccessBlock
    ///
    ///
    ///
    func deletePublicAccessBlock(input: DeletePublicAccessBlockInput) async throws -> DeletePublicAccessBlockOutputResponse
    {
        typealias deletePublicAccessBlockContinuation = CheckedContinuation<DeletePublicAccessBlockOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: deletePublicAccessBlockContinuation) in
            deletePublicAccessBlock(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Deletes the Amazon S3 Storage Lens configuration. For more information about S3 Storage Lens, see
    ///          <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens.html">Assessing your storage
    ///             activity and usage with Amazon S3 Storage Lens  in the
    ///          Amazon S3 User Guide.
    ///
    ///             To use this action,
    ///          you must have permission to perform the s3:DeleteStorageLensConfiguration action. For more
    ///          information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens_iam_permissions.html">Setting permissions to use Amazon S3 Storage Lens in the
    ///          Amazon S3 User Guide.
    ///
    func deleteStorageLensConfiguration(input: DeleteStorageLensConfigurationInput) async throws -> DeleteStorageLensConfigurationOutputResponse
    {
        typealias deleteStorageLensConfigurationContinuation = CheckedContinuation<DeleteStorageLensConfigurationOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: deleteStorageLensConfigurationContinuation) in
            deleteStorageLensConfiguration(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Deletes the Amazon S3 Storage Lens configuration tags. For more information about S3 Storage Lens, see
    ///          <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens.html">Assessing your storage
    ///             activity and usage with Amazon S3 Storage Lens  in the
    ///          Amazon S3 User Guide.
    ///
    ///             To use this action,
    ///          you must have permission to perform the s3:DeleteStorageLensConfigurationTagging action. For more
    ///          information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens_iam_permissions.html">Setting permissions to use Amazon S3 Storage Lens in the
    ///          Amazon S3 User Guide.
    ///
    func deleteStorageLensConfigurationTagging(input: DeleteStorageLensConfigurationTaggingInput) async throws -> DeleteStorageLensConfigurationTaggingOutputResponse
    {
        typealias deleteStorageLensConfigurationTaggingContinuation = CheckedContinuation<DeleteStorageLensConfigurationTaggingOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: deleteStorageLensConfigurationTaggingContinuation) in
            deleteStorageLensConfigurationTagging(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Retrieves the configuration parameters and status for a Batch Operations job. For more
    ///          information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-basics.html">S3 Batch Operations in
    ///          the Amazon S3 User Guide.
    ///
    ///          Related actions include:
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateJob.html">CreateJob
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListJobs.html">ListJobs
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobPriority.html">UpdateJobPriority
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobStatus.html">UpdateJobStatus
    ///
    ///
    ///
    func describeJob(input: DescribeJobInput) async throws -> DescribeJobOutputResponse
    {
        typealias describeJobContinuation = CheckedContinuation<DescribeJobOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: describeJobContinuation) in
            describeJob(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Retrieves the status of an asynchronous request to manage a Multi-Region Access Point. For more information
    ///             about managing Multi-Region Access Points and how asynchronous requests work, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/ManagingMultiRegionAccessPoints.html">Managing
    ///                 Multi-Region Access Points in the
    ///             Amazon S3 User Guide.
    ///          The following actions are related to GetMultiRegionAccessPoint:
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateMultiRegionAccessPoint.html">CreateMultiRegionAccessPoint
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteMultiRegionAccessPoint.html">DeleteMultiRegionAccessPoint
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetMultiRegionAccessPoint.html">GetMultiRegionAccessPoint
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListMultiRegionAccessPoints.html">ListMultiRegionAccessPoints
    ///
    ///
    ///
    func describeMultiRegionAccessPointOperation(input: DescribeMultiRegionAccessPointOperationInput) async throws -> DescribeMultiRegionAccessPointOperationOutputResponse
    {
        typealias describeMultiRegionAccessPointOperationContinuation = CheckedContinuation<DescribeMultiRegionAccessPointOperationOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: describeMultiRegionAccessPointOperationContinuation) in
            describeMultiRegionAccessPointOperation(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Returns configuration information about the specified access point.
    ///
    ///
    ///          All Amazon S3 on Outposts REST API requests for this action require an additional parameter of x-amz-outpost-id to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of s3-control. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the x-amz-outpost-id derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPoint.html#API_control_GetAccessPoint_Examples">Examples section.
    ///          The following actions are related to GetAccessPoint:
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPoint.html">CreateAccessPoint
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPoint.html">DeleteAccessPoint
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListAccessPoints.html">ListAccessPoints
    ///
    ///
    ///
    func getAccessPoint(input: GetAccessPointInput) async throws -> GetAccessPointOutputResponse
    {
        typealias getAccessPointContinuation = CheckedContinuation<GetAccessPointOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: getAccessPointContinuation) in
            getAccessPoint(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Returns configuration for an Object Lambda Access Point.
    ///          The following actions are related to GetAccessPointConfigurationForObjectLambda:
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointConfigurationForObjectLambda.html">PutAccessPointConfigurationForObjectLambda
    ///
    ///
    ///
    func getAccessPointConfigurationForObjectLambda(input: GetAccessPointConfigurationForObjectLambdaInput) async throws -> GetAccessPointConfigurationForObjectLambdaOutputResponse
    {
        typealias getAccessPointConfigurationForObjectLambdaContinuation = CheckedContinuation<GetAccessPointConfigurationForObjectLambdaOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: getAccessPointConfigurationForObjectLambdaContinuation) in
            getAccessPointConfigurationForObjectLambda(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Returns configuration information about the specified Object Lambda Access Point
    ///          The following actions are related to GetAccessPointForObjectLambda:
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPointForObjectLambda.html">CreateAccessPointForObjectLambda
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointForObjectLambda.html">DeleteAccessPointForObjectLambda
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListAccessPointsForObjectLambda.html">ListAccessPointsForObjectLambda
    ///
    ///
    ///
    func getAccessPointForObjectLambda(input: GetAccessPointForObjectLambdaInput) async throws -> GetAccessPointForObjectLambdaOutputResponse
    {
        typealias getAccessPointForObjectLambdaContinuation = CheckedContinuation<GetAccessPointForObjectLambdaOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: getAccessPointForObjectLambdaContinuation) in
            getAccessPointForObjectLambda(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Returns the access point policy associated with the specified access point.
    ///          The following actions are related to GetAccessPointPolicy:
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointPolicy.html">PutAccessPointPolicy
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointPolicy.html">DeleteAccessPointPolicy
    ///
    ///
    ///
    func getAccessPointPolicy(input: GetAccessPointPolicyInput) async throws -> GetAccessPointPolicyOutputResponse
    {
        typealias getAccessPointPolicyContinuation = CheckedContinuation<GetAccessPointPolicyOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: getAccessPointPolicyContinuation) in
            getAccessPointPolicy(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Returns the resource policy for an Object Lambda Access Point.
    ///          The following actions are related to GetAccessPointPolicyForObjectLambda:
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointPolicyForObjectLambda.html">DeleteAccessPointPolicyForObjectLambda
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointPolicyForObjectLambda.html">PutAccessPointPolicyForObjectLambda
    ///
    ///
    ///
    func getAccessPointPolicyForObjectLambda(input: GetAccessPointPolicyForObjectLambdaInput) async throws -> GetAccessPointPolicyForObjectLambdaOutputResponse
    {
        typealias getAccessPointPolicyForObjectLambdaContinuation = CheckedContinuation<GetAccessPointPolicyForObjectLambdaOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: getAccessPointPolicyForObjectLambdaContinuation) in
            getAccessPointPolicyForObjectLambda(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Indicates whether the specified access point currently has a policy that allows public access. For more information about public access through access points, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-points.html">Managing Data Access with Amazon S3 access points in the Amazon S3 User Guide.
    func getAccessPointPolicyStatus(input: GetAccessPointPolicyStatusInput) async throws -> GetAccessPointPolicyStatusOutputResponse
    {
        typealias getAccessPointPolicyStatusContinuation = CheckedContinuation<GetAccessPointPolicyStatusOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: getAccessPointPolicyStatusContinuation) in
            getAccessPointPolicyStatus(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Returns the status of the resource policy associated with an Object Lambda Access Point.
    func getAccessPointPolicyStatusForObjectLambda(input: GetAccessPointPolicyStatusForObjectLambdaInput) async throws -> GetAccessPointPolicyStatusForObjectLambdaOutputResponse
    {
        typealias getAccessPointPolicyStatusForObjectLambdaContinuation = CheckedContinuation<GetAccessPointPolicyStatusForObjectLambdaOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: getAccessPointPolicyStatusForObjectLambdaContinuation) in
            getAccessPointPolicyStatusForObjectLambda(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Gets an Amazon S3 on Outposts bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">
    ///          Using Amazon S3 on Outposts in the Amazon S3 User Guide.
    ///          If you are using an identity other than the root user of the Amazon Web Services account
    ///          that owns the Outposts bucket, the calling identity must have the
    ///          s3-outposts:GetBucket permissions on the specified Outposts bucket and
    ///          belong to the Outposts bucket owner's account in order to use this action. Only
    ///          users from Outposts bucket owner account with the right permissions can perform
    ///          actions on an Outposts bucket.
    ///
    ///
    ///          If you don't have s3-outposts:GetBucket permissions or you're not using an identity that belongs to the bucket owner's
    ///          account, Amazon S3 returns a 403 Access Denied error.
    ///          The following actions are related to GetBucket for Amazon S3 on Outposts:
    ///          All Amazon S3 on Outposts REST API requests for this action require an additional parameter of x-amz-outpost-id to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of s3-control. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the x-amz-outpost-id derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucket.html#API_control_GetBucket_Examples">Examples section.
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html">PutObject
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateBucket.html">CreateBucket
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucket.html">DeleteBucket
    ///
    ///
    ///
    func getBucket(input: GetBucketInput) async throws -> GetBucketOutputResponse
    {
        typealias getBucketContinuation = CheckedContinuation<GetBucketOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: getBucketContinuation) in
            getBucket(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    ///
    ///             This action gets an Amazon S3 on Outposts bucket's lifecycle configuration. To get an
    ///          S3 bucket's lifecycle configuration, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLifecycleConfiguration.html">GetBucketLifecycleConfiguration in the Amazon S3 API Reference.
    ///
    ///
    ///          Returns the lifecycle configuration information set on the Outposts bucket. For more
    ///          information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts and for
    ///          information about lifecycle configuration, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html"> Object Lifecycle Management in
    ///             Amazon S3 User Guide.
    ///
    ///          To use this action, you must have permission to perform the s3-outposts:GetLifecycleConfiguration action.
    ///          The Outposts bucket owner has this permission, by default. The bucket owner can grant this permission to others. For more
    ///          information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources">Permissions
    ///             Related to Bucket Subresource Operations and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing Access Permissions to Your Amazon S3 Resources.
    ///
    ///          All Amazon S3 on Outposts REST API requests for this action require an additional parameter of x-amz-outpost-id to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of s3-control. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the x-amz-outpost-id derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketLifecycleConfiguration.html#API_control_GetBucketLifecycleConfiguration_Examples">Examples section.
    ///
    ///
    ///             GetBucketLifecycleConfiguration has the following special error:
    ///
    ///
    ///                Error code: NoSuchLifecycleConfiguration
    ///
    ///
    ///
    ///                      Description: The lifecycle configuration does not exist.
    ///
    ///
    ///                      HTTP Status Code: 404 Not Found
    ///
    ///
    ///                      SOAP Fault Code Prefix: Client
    ///
    ///
    ///
    ///
    ///          The following actions are related to GetBucketLifecycleConfiguration:
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketLifecycleConfiguration.html">PutBucketLifecycleConfiguration
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketLifecycleConfiguration.html">DeleteBucketLifecycleConfiguration
    ///
    ///
    ///
    func getBucketLifecycleConfiguration(input: GetBucketLifecycleConfigurationInput) async throws -> GetBucketLifecycleConfigurationOutputResponse
    {
        typealias getBucketLifecycleConfigurationContinuation = CheckedContinuation<GetBucketLifecycleConfigurationOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: getBucketLifecycleConfigurationContinuation) in
            getBucketLifecycleConfiguration(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    ///
    ///             This action gets a bucket policy for an Amazon S3 on Outposts bucket. To get a policy for an S3
    ///             bucket, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketPolicy.html">GetBucketPolicy in the
    ///                Amazon S3 API Reference.
    ///
    ///          Returns the policy of a specified Outposts bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts in the
    ///             Amazon S3 User Guide.
    ///          If you are using an identity other than the root user of the Amazon Web Services account that owns the bucket, the calling identity
    ///       must have the GetBucketPolicy permissions on the specified bucket and belong to the bucket owner's account in order to use this action.
    ///
    ///          Only users from Outposts bucket owner account with the right permissions can perform actions on an Outposts bucket.
    ///          If you don't have s3-outposts:GetBucketPolicy permissions or you're not using an identity that belongs to the bucket owner's
    ///          account, Amazon S3 returns a 403 Access Denied error.
    ///
    ///
    ///             As a security precaution, the root user of the Amazon Web Services account that owns a bucket can always use this action, even if the policy
    ///          explicitly denies the root user the ability to perform this action.
    ///
    ///
    ///          For more information about bucket policies, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-iam-policies.html">Using Bucket Policies and User Policies.
    ///
    ///          All Amazon S3 on Outposts REST API requests for this action require an additional parameter of x-amz-outpost-id to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of s3-control. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the x-amz-outpost-id derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketPolicy.html#API_control_GetBucketPolicy_Examples">Examples section.
    ///
    ///          The following actions are related to GetBucketPolicy:
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html">GetObject
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketPolicy.html">PutBucketPolicy
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketPolicy.html">DeleteBucketPolicy
    ///
    ///
    ///
    func getBucketPolicy(input: GetBucketPolicyInput) async throws -> GetBucketPolicyOutputResponse
    {
        typealias getBucketPolicyContinuation = CheckedContinuation<GetBucketPolicyOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: getBucketPolicyContinuation) in
            getBucketPolicy(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    ///
    ///             This action gets an Amazon S3 on Outposts bucket's tags. To get an
    ///          S3 bucket tags, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketTagging.html">GetBucketTagging in the Amazon S3 API Reference.
    ///
    ///
    ///          Returns the tag set associated with the Outposts bucket. For more information, see
    ///             <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts in the
    ///             Amazon S3 User Guide.
    ///          To use this action, you must have permission to perform the GetBucketTagging action.
    ///          By default, the bucket owner has this permission and can grant this permission to others.
    ///
    ///
    ///             GetBucketTagging has the following special error:
    ///
    ///
    ///                Error code: NoSuchTagSetError
    ///
    ///
    ///
    ///                      Description: There is no tag set associated with the bucket.
    ///
    ///
    ///
    ///
    ///          All Amazon S3 on Outposts REST API requests for this action require an additional parameter of x-amz-outpost-id to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of s3-control. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the x-amz-outpost-id derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketTagging.html#API_control_GetBucketTagging_Examples">Examples section.
    ///
    ///          The following actions are related to GetBucketTagging:
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketTagging.html">PutBucketTagging
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketTagging.html">DeleteBucketTagging
    ///
    ///
    ///
    func getBucketTagging(input: GetBucketTaggingInput) async throws -> GetBucketTaggingOutputResponse
    {
        typealias getBucketTaggingContinuation = CheckedContinuation<GetBucketTaggingOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: getBucketTaggingContinuation) in
            getBucketTagging(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Returns the tags on an S3 Batch Operations job. To use this operation, you must have
    ///          permission to perform the s3:GetJobTagging action. For more information, see
    ///             <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-managing-jobs.html#batch-ops-job-tags">Controlling
    ///             access and labeling jobs using tags in the
    ///          Amazon S3 User Guide.
    ///
    ///          Related actions include:
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateJob.html">CreateJob
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutJobTagging.html">PutJobTagging
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteJobTagging.html">DeleteJobTagging
    ///
    ///
    ///
    func getJobTagging(input: GetJobTaggingInput) async throws -> GetJobTaggingOutputResponse
    {
        typealias getJobTaggingContinuation = CheckedContinuation<GetJobTaggingOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: getJobTaggingContinuation) in
            getJobTagging(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Returns configuration information about the specified Multi-Region Access Point.
    ///          This action will always be routed to the US West (Oregon) Region. For more
    ///             information about the restrictions around managing Multi-Region Access Points, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/ManagingMultiRegionAccessPoints.html">Managing
    ///                 Multi-Region Access Points in the
    ///             Amazon S3 User Guide.
    ///          The following actions are related to GetMultiRegionAccessPoint:
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateMultiRegionAccessPoint.html">CreateMultiRegionAccessPoint
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteMultiRegionAccessPoint.html">DeleteMultiRegionAccessPoint
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeMultiRegionAccessPointOperation.html">DescribeMultiRegionAccessPointOperation
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListMultiRegionAccessPoints.html">ListMultiRegionAccessPoints
    ///
    ///
    ///
    func getMultiRegionAccessPoint(input: GetMultiRegionAccessPointInput) async throws -> GetMultiRegionAccessPointOutputResponse
    {
        typealias getMultiRegionAccessPointContinuation = CheckedContinuation<GetMultiRegionAccessPointOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: getMultiRegionAccessPointContinuation) in
            getMultiRegionAccessPoint(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Returns the access control policy of the specified Multi-Region Access Point.
    ///          This action will always be routed to the US West (Oregon) Region. For more
    ///             information about the restrictions around managing Multi-Region Access Points, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/ManagingMultiRegionAccessPoints.html">Managing
    ///                 Multi-Region Access Points in the
    ///             Amazon S3 User Guide.
    ///          The following actions are related to GetMultiRegionAccessPointPolicy:
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetMultiRegionAccessPointPolicyStatus.html">GetMultiRegionAccessPointPolicyStatus
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutMultiRegionAccessPointPolicy.html">PutMultiRegionAccessPointPolicy
    ///
    ///
    ///
    func getMultiRegionAccessPointPolicy(input: GetMultiRegionAccessPointPolicyInput) async throws -> GetMultiRegionAccessPointPolicyOutputResponse
    {
        typealias getMultiRegionAccessPointPolicyContinuation = CheckedContinuation<GetMultiRegionAccessPointPolicyOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: getMultiRegionAccessPointPolicyContinuation) in
            getMultiRegionAccessPointPolicy(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Indicates whether the specified Multi-Region Access Point has an access control policy that allows public
    ///             access.
    ///          This action will always be routed to the US West (Oregon) Region. For more
    ///             information about the restrictions around managing Multi-Region Access Points, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/ManagingMultiRegionAccessPoints.html">Managing
    ///                 Multi-Region Access Points in the
    ///           Amazon S3 User Guide.
    ///          The following actions are related to GetMultiRegionAccessPointPolicyStatus:
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetMultiRegionAccessPointPolicy.html">GetMultiRegionAccessPointPolicy
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutMultiRegionAccessPointPolicy.html">PutMultiRegionAccessPointPolicy
    ///
    ///
    ///
    func getMultiRegionAccessPointPolicyStatus(input: GetMultiRegionAccessPointPolicyStatusInput) async throws -> GetMultiRegionAccessPointPolicyStatusOutputResponse
    {
        typealias getMultiRegionAccessPointPolicyStatusContinuation = CheckedContinuation<GetMultiRegionAccessPointPolicyStatusOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: getMultiRegionAccessPointPolicyStatusContinuation) in
            getMultiRegionAccessPointPolicyStatus(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Retrieves the PublicAccessBlock configuration for an Amazon Web Services account. For more
    ///          information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html"> Using Amazon S3 block
    ///             public access.
    ///          Related actions include:
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeletePublicAccessBlock.html">DeletePublicAccessBlock
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutPublicAccessBlock.html">PutPublicAccessBlock
    ///
    ///
    ///
    func getPublicAccessBlock(input: GetPublicAccessBlockInput) async throws -> GetPublicAccessBlockOutputResponse
    {
        typealias getPublicAccessBlockContinuation = CheckedContinuation<GetPublicAccessBlockOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: getPublicAccessBlockContinuation) in
            getPublicAccessBlock(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Gets the Amazon S3 Storage Lens configuration. For more information, see
    ///          <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens.html">Assessing your storage
    ///             activity and usage with Amazon S3 Storage Lens  in the
    ///          Amazon S3 User Guide.
    ///
    ///             To use this action,
    ///          you must have permission to perform the s3:GetStorageLensConfiguration action. For more
    ///          information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens_iam_permissions.html">Setting permissions to use Amazon S3 Storage Lens in the
    ///          Amazon S3 User Guide.
    ///
    func getStorageLensConfiguration(input: GetStorageLensConfigurationInput) async throws -> GetStorageLensConfigurationOutputResponse
    {
        typealias getStorageLensConfigurationContinuation = CheckedContinuation<GetStorageLensConfigurationOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: getStorageLensConfigurationContinuation) in
            getStorageLensConfiguration(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Gets the tags of Amazon S3 Storage Lens configuration. For more information about S3 Storage Lens, see
    ///          <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens.html">Assessing your storage
    ///             activity and usage with Amazon S3 Storage Lens  in the Amazon S3 User Guide.
    ///
    ///             To use this action,
    ///          you must have permission to perform the s3:GetStorageLensConfigurationTagging action. For more
    ///          information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens_iam_permissions.html">Setting permissions to use Amazon S3 Storage Lens in the
    ///          Amazon S3 User Guide.
    ///
    func getStorageLensConfigurationTagging(input: GetStorageLensConfigurationTaggingInput) async throws -> GetStorageLensConfigurationTaggingOutputResponse
    {
        typealias getStorageLensConfigurationTaggingContinuation = CheckedContinuation<GetStorageLensConfigurationTaggingOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: getStorageLensConfigurationTaggingContinuation) in
            getStorageLensConfigurationTagging(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Returns a list of the access points currently associated with the specified bucket. You
    ///          can retrieve up to 1000 access points per call. If the specified bucket has more than 1,000
    ///          access points (or the number specified in maxResults, whichever is less), the
    ///          response will include a continuation token that you can use to list the additional access points.
    ///
    ///          All Amazon S3 on Outposts REST API requests for this action require an additional parameter of x-amz-outpost-id to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of s3-control. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the x-amz-outpost-id derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPoint.html#API_control_GetAccessPoint_Examples">Examples section.
    ///          The following actions are related to ListAccessPoints:
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPoint.html">CreateAccessPoint
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPoint.html">DeleteAccessPoint
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPoint.html">GetAccessPoint
    ///
    ///
    ///
    func listAccessPoints(input: ListAccessPointsInput) async throws -> ListAccessPointsOutputResponse
    {
        typealias listAccessPointsContinuation = CheckedContinuation<ListAccessPointsOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: listAccessPointsContinuation) in
            listAccessPoints(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Returns a list of the access points associated with the Object Lambda Access Point. You
    ///          can retrieve up to 1000 access points per call. If there are more than 1,000
    ///          access points (or the number specified in maxResults, whichever is less), the
    ///          response will include a continuation token that you can use to list the additional access points.
    ///          The following actions are related to ListAccessPointsForObjectLambda:
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPointForObjectLambda.html">CreateAccessPointForObjectLambda
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointForObjectLambda.html">DeleteAccessPointForObjectLambda
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointForObjectLambda.html">GetAccessPointForObjectLambda
    ///
    ///
    ///
    func listAccessPointsForObjectLambda(input: ListAccessPointsForObjectLambdaInput) async throws -> ListAccessPointsForObjectLambdaOutputResponse
    {
        typealias listAccessPointsForObjectLambdaContinuation = CheckedContinuation<ListAccessPointsForObjectLambdaOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: listAccessPointsForObjectLambdaContinuation) in
            listAccessPointsForObjectLambda(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Lists current S3 Batch Operations jobs and jobs that have ended within the last 30 days for
    ///          the Amazon Web Services account making the request. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-basics.html">S3 Batch Operations in the
    ///             Amazon S3 User Guide.
    ///          Related actions include:
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateJob.html">CreateJob
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeJob.html">DescribeJob
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobPriority.html">UpdateJobPriority
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobStatus.html">UpdateJobStatus
    ///
    ///
    ///
    func listJobs(input: ListJobsInput) async throws -> ListJobsOutputResponse
    {
        typealias listJobsContinuation = CheckedContinuation<ListJobsOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: listJobsContinuation) in
            listJobs(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Returns a list of the Multi-Region Access Points currently associated with the specified Amazon Web Services account. Each
    ///           call can return up to 100 Multi-Region Access Points, the maximum number of Multi-Region Access Points that can be associated with
    ///           a single account.
    ///          This action will always be routed to the US West (Oregon) Region. For more
    ///             information about the restrictions around managing Multi-Region Access Points, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/ManagingMultiRegionAccessPoints.html">Managing
    ///                 Multi-Region Access Points in the
    ///             Amazon S3 User Guide.
    ///          The following actions are related to ListMultiRegionAccessPoint:
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateMultiRegionAccessPoint.html">CreateMultiRegionAccessPoint
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteMultiRegionAccessPoint.html">DeleteMultiRegionAccessPoint
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeMultiRegionAccessPointOperation.html">DescribeMultiRegionAccessPointOperation
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetMultiRegionAccessPoint.html">GetMultiRegionAccessPoint
    ///
    ///
    ///
    func listMultiRegionAccessPoints(input: ListMultiRegionAccessPointsInput) async throws -> ListMultiRegionAccessPointsOutputResponse
    {
        typealias listMultiRegionAccessPointsContinuation = CheckedContinuation<ListMultiRegionAccessPointsOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: listMultiRegionAccessPointsContinuation) in
            listMultiRegionAccessPoints(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Returns a list of all Outposts buckets in an Outpost that are owned by the authenticated
    ///          sender of the request. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts in the
    ///             Amazon S3 User Guide.
    ///          For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts
    ///          endpoint hostname prefix and x-amz-outpost-id in your request, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListRegionalBuckets.html#API_control_ListRegionalBuckets_Examples">Examples section.
    func listRegionalBuckets(input: ListRegionalBucketsInput) async throws -> ListRegionalBucketsOutputResponse
    {
        typealias listRegionalBucketsContinuation = CheckedContinuation<ListRegionalBucketsOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: listRegionalBucketsContinuation) in
            listRegionalBuckets(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Gets a list of Amazon S3 Storage Lens configurations. For more information about S3 Storage Lens, see
    ///          <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens.html">Assessing your storage
    ///             activity and usage with Amazon S3 Storage Lens  in the
    ///          Amazon S3 User Guide.
    ///
    ///             To use this action,
    ///          you must have permission to perform the s3:ListStorageLensConfigurations action. For more
    ///          information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens_iam_permissions.html">Setting permissions to use Amazon S3 Storage Lens in the
    ///          Amazon S3 User Guide.
    ///
    func listStorageLensConfigurations(input: ListStorageLensConfigurationsInput) async throws -> ListStorageLensConfigurationsOutputResponse
    {
        typealias listStorageLensConfigurationsContinuation = CheckedContinuation<ListStorageLensConfigurationsOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: listStorageLensConfigurationsContinuation) in
            listStorageLensConfigurations(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Replaces configuration for an Object Lambda Access Point.
    ///          The following actions are related to PutAccessPointConfigurationForObjectLambda:
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointConfigurationForObjectLambda.html">GetAccessPointConfigurationForObjectLambda
    ///
    ///
    ///
    func putAccessPointConfigurationForObjectLambda(input: PutAccessPointConfigurationForObjectLambdaInput) async throws -> PutAccessPointConfigurationForObjectLambdaOutputResponse
    {
        typealias putAccessPointConfigurationForObjectLambdaContinuation = CheckedContinuation<PutAccessPointConfigurationForObjectLambdaOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: putAccessPointConfigurationForObjectLambdaContinuation) in
            putAccessPointConfigurationForObjectLambda(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Associates an access policy with the specified access point. Each access point can have only one policy, so a request made to this API
    ///          replaces any existing policy associated with the specified access point.
    ///
    ///          All Amazon S3 on Outposts REST API requests for this action require an additional parameter of x-amz-outpost-id to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of s3-control. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the x-amz-outpost-id derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointPolicy.html#API_control_PutAccessPointPolicy_Examples">Examples section.
    ///          The following actions are related to PutAccessPointPolicy:
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointPolicy.html">GetAccessPointPolicy
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointPolicy.html">DeleteAccessPointPolicy
    ///
    ///
    ///
    func putAccessPointPolicy(input: PutAccessPointPolicyInput) async throws -> PutAccessPointPolicyOutputResponse
    {
        typealias putAccessPointPolicyContinuation = CheckedContinuation<PutAccessPointPolicyOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: putAccessPointPolicyContinuation) in
            putAccessPointPolicy(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Creates or replaces resource policy for an Object Lambda Access Point. For an example policy, see
    ///          <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/olap-create.html#olap-create-cli">Creating Object Lambda Access Points in the Amazon S3 User Guide.
    ///          The following actions are related to PutAccessPointPolicyForObjectLambda:
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointPolicyForObjectLambda.html">DeleteAccessPointPolicyForObjectLambda
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointPolicyForObjectLambda.html">GetAccessPointPolicyForObjectLambda
    ///
    ///
    ///
    func putAccessPointPolicyForObjectLambda(input: PutAccessPointPolicyForObjectLambdaInput) async throws -> PutAccessPointPolicyForObjectLambdaOutputResponse
    {
        typealias putAccessPointPolicyForObjectLambdaContinuation = CheckedContinuation<PutAccessPointPolicyForObjectLambdaOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: putAccessPointPolicyForObjectLambdaContinuation) in
            putAccessPointPolicyForObjectLambda(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    ///
    ///             This action puts a lifecycle configuration to an Amazon S3 on Outposts bucket. To put a lifecycle configuration to an S3 bucket,
    ///          see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycleConfiguration.html">PutBucketLifecycleConfiguration in the Amazon S3 API Reference.
    ///
    ///
    ///          Creates a new lifecycle configuration for the S3 on Outposts bucket or replaces an existing
    ///          lifecycle configuration. Outposts buckets only support lifecycle configurations that delete/expire objects
    ///          after a certain period of time and abort incomplete multipart uploads.
    ///
    ///          All Amazon S3 on Outposts REST API requests for this action require an additional parameter of x-amz-outpost-id to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of s3-control. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the x-amz-outpost-id derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketLifecycleConfiguration.html#API_control_PutBucketLifecycleConfiguration_Examples">Examples section.
    ///          The following actions are related to PutBucketLifecycleConfiguration:
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketLifecycleConfiguration.html">GetBucketLifecycleConfiguration
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketLifecycleConfiguration.html">DeleteBucketLifecycleConfiguration
    ///
    ///
    ///
    func putBucketLifecycleConfiguration(input: PutBucketLifecycleConfigurationInput) async throws -> PutBucketLifecycleConfigurationOutputResponse
    {
        typealias putBucketLifecycleConfigurationContinuation = CheckedContinuation<PutBucketLifecycleConfigurationOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: putBucketLifecycleConfigurationContinuation) in
            putBucketLifecycleConfiguration(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    ///
    ///             This action puts a bucket policy to an Amazon S3 on Outposts bucket. To put a policy on an S3 bucket,
    ///          see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketPolicy.html">PutBucketPolicy in the Amazon S3 API Reference.
    ///
    ///
    ///          Applies an Amazon S3 bucket policy to an Outposts bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts in the
    ///             Amazon S3 User Guide.
    ///          If you are using an identity other than the root user of the Amazon Web Services account that owns the
    ///          Outposts bucket, the calling identity must have the PutBucketPolicy
    ///          permissions on the specified Outposts bucket and belong to the bucket owner's account in
    ///          order to use this action.
    ///
    ///          If you don't have PutBucketPolicy permissions, Amazon S3 returns a 403 Access Denied error. If you have the correct permissions,
    ///          but you're not using an identity that belongs to the bucket owner's account, Amazon S3 returns a 405 Method Not Allowed error.
    ///
    ///
    ///              As a security precaution, the root user of the Amazon Web Services account that owns a bucket can always use this action, even if the policy
    ///          explicitly denies the root user the ability to perform this action.
    ///
    ///
    ///
    ///
    ///          For more information about bucket policies, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-iam-policies.html">Using Bucket Policies and User Policies.
    ///
    ///          All Amazon S3 on Outposts REST API requests for this action require an additional parameter of x-amz-outpost-id to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of s3-control. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the x-amz-outpost-id derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketPolicy.html#API_control_PutBucketPolicy_Examples">Examples section.
    ///
    ///          The following actions are related to PutBucketPolicy:
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketPolicy.html">GetBucketPolicy
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketPolicy.html">DeleteBucketPolicy
    ///
    ///
    ///
    func putBucketPolicy(input: PutBucketPolicyInput) async throws -> PutBucketPolicyOutputResponse
    {
        typealias putBucketPolicyContinuation = CheckedContinuation<PutBucketPolicyOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: putBucketPolicyContinuation) in
            putBucketPolicy(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    ///
    ///             This action puts tags on an Amazon S3 on Outposts bucket. To put tags on an S3 bucket, see
    ///                <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketTagging.html">PutBucketTagging in the Amazon S3 API Reference.
    ///
    ///          Sets the tags for an S3 on Outposts bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts in the
    ///             Amazon S3 User Guide.
    ///          Use tags to organize your Amazon Web Services bill to reflect your own cost structure. To do this, sign up to get your
    ///          Amazon Web Services account bill with tag key values included. Then, to see the cost of combined resources, organize your
    ///          billing information according to resources with the same tag key values. For example, you can tag several
    ///          resources with a specific application name, and then organize your billing information to see the total cost
    ///          of that application across several services. For more information, see
    ///          <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Cost
    ///             allocation and tagging.
    ///
    ///
    ///             Within a bucket, if you add a tag that has the same key as an existing tag, the new value overwrites
    ///          the old value. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/CostAllocTagging.html">
    ///             Using cost allocation in Amazon S3 bucket tags.
    ///
    ///          To use this action, you must have permissions to perform the
    ///             s3-outposts:PutBucketTagging action. The Outposts bucket owner has this
    ///          permission by default and can grant this permission to others. For more information about
    ///          permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources"> Permissions Related to Bucket Subresource Operations and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing access permissions to your Amazon S3
    ///             resources.
    ///
    ///
    ///             PutBucketTagging has the following special errors:
    ///
    ///
    ///                Error code: InvalidTagError
    ///
    ///
    ///
    ///                      Description: The tag provided was not a valid tag. This error can occur if the tag did not pass input validation.
    ///                   For information about tag restrictions, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/allocation-tag-restrictions.html">
    ///                      User-Defined Tag Restrictions  and <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/aws-tag-restrictions.html">
    ///                         Amazon Web Services-Generated Cost Allocation Tag Restrictions.
    ///
    ///
    ///
    ///
    ///                Error code: MalformedXMLError
    ///
    ///
    ///
    ///                      Description: The XML provided does not match the schema.
    ///
    ///
    ///
    ///
    ///                Error code: OperationAbortedError
    ///
    ///
    ///
    ///                      Description: A conflicting conditional action is currently in progress against this
    ///                      resource. Try again.
    ///
    ///
    ///
    ///
    ///                Error code: InternalError
    ///
    ///
    ///
    ///                      Description: The service was unable to apply the provided tag to the bucket.
    ///
    ///
    ///
    ///
    ///          All Amazon S3 on Outposts REST API requests for this action require an additional parameter of x-amz-outpost-id to be passed with the request and an S3 on Outposts endpoint hostname prefix instead of s3-control. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the x-amz-outpost-id derived using the access point ARN, see the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketTagging.html#API_control_PutBucketTagging_Examples">Examples section.
    ///
    ///          The following actions are related to PutBucketTagging:
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketTagging.html">GetBucketTagging
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketTagging.html">DeleteBucketTagging
    ///
    ///
    ///
    func putBucketTagging(input: PutBucketTaggingInput) async throws -> PutBucketTaggingOutputResponse
    {
        typealias putBucketTaggingContinuation = CheckedContinuation<PutBucketTaggingOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: putBucketTaggingContinuation) in
            putBucketTagging(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Sets the supplied tag-set on an S3 Batch Operations job.
    ///          A tag is a key-value pair. You can associate S3 Batch Operations tags with any job by sending
    ///          a PUT request against the tagging subresource that is associated with the job. To modify
    ///          the existing tag set, you can either replace the existing tag set entirely, or make changes
    ///          within the existing tag set by retrieving the existing tag set using <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetJobTagging.html">GetJobTagging, modify that tag set, and use this action to replace the
    ///          tag set with the one you modified. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-managing-jobs.html#batch-ops-job-tags">Controlling access and
    ///             labeling jobs using tags in the Amazon S3 User Guide.
    ///
    ///
    ///
    ///
    ///                   If you send this request with an empty tag set, Amazon S3 deletes the existing tag set on the
    ///                   Batch Operations job. If you use this method, you are charged for a Tier 1 Request
    ///                   (PUT). For more information, see <a href="http://aws.amazon.com/s3/pricing/">Amazon S3
    ///                      pricing.
    ///
    ///
    ///                   For deleting existing tags for your Batch Operations job, a <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteJobTagging.html">DeleteJobTagging
    ///                   request is preferred because it achieves the same result without incurring
    ///                   charges.
    ///
    ///
    ///                   A few things to consider about using tags:
    ///
    ///
    ///                         Amazon S3 limits the maximum number of tags to 50 tags per job.
    ///
    ///
    ///                         You can associate up to 50 tags with a job as long as they have unique tag keys.
    ///
    ///
    ///                         A tag key can be up to 128 Unicode characters in length, and tag values can be up to 256 Unicode characters in length.
    ///
    ///
    ///                         The key and values are case sensitive.
    ///
    ///
    ///                         For tagging-related restrictions related to characters and encodings, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/allocation-tag-restrictions.html">User-Defined Tag Restrictions in the Billing and Cost Management User Guide.
    ///
    ///
    ///
    ///
    ///
    ///
    ///          To use this action, you must have permission to perform the s3:PutJobTagging action.
    ///          Related actions include:
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateJob.html">CreatJob
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetJobTagging.html">GetJobTagging
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteJobTagging.html">DeleteJobTagging
    ///
    ///
    ///
    func putJobTagging(input: PutJobTaggingInput) async throws -> PutJobTaggingOutputResponse
    {
        typealias putJobTaggingContinuation = CheckedContinuation<PutJobTaggingOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: putJobTaggingContinuation) in
            putJobTagging(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Associates an access control policy with the specified Multi-Region Access Point. Each Multi-Region Access Point can have only
    ///             one policy, so a request made to this action replaces any existing policy that is
    ///             associated with the specified Multi-Region Access Point.
    ///          This action will always be routed to the US West (Oregon) Region. For more
    ///             information about the restrictions around managing Multi-Region Access Points, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/ManagingMultiRegionAccessPoints.html">Managing
    ///                 Multi-Region Access Points in the
    ///             Amazon S3 User Guide.
    ///          The following actions are related to PutMultiRegionAccessPointPolicy:
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetMultiRegionAccessPointPolicy.html">GetMultiRegionAccessPointPolicy
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetMultiRegionAccessPointPolicyStatus.html">GetMultiRegionAccessPointPolicyStatus
    ///
    ///
    ///
    func putMultiRegionAccessPointPolicy(input: PutMultiRegionAccessPointPolicyInput) async throws -> PutMultiRegionAccessPointPolicyOutputResponse
    {
        typealias putMultiRegionAccessPointPolicyContinuation = CheckedContinuation<PutMultiRegionAccessPointPolicyOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: putMultiRegionAccessPointPolicyContinuation) in
            putMultiRegionAccessPointPolicy(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Creates or modifies the PublicAccessBlock configuration for an Amazon Web Services account. For
    ///          more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html"> Using Amazon S3 block
    ///             public access.
    ///          Related actions include:
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetPublicAccessBlock.html">GetPublicAccessBlock
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeletePublicAccessBlock.html">DeletePublicAccessBlock
    ///
    ///
    ///
    func putPublicAccessBlock(input: PutPublicAccessBlockInput) async throws -> PutPublicAccessBlockOutputResponse
    {
        typealias putPublicAccessBlockContinuation = CheckedContinuation<PutPublicAccessBlockOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: putPublicAccessBlockContinuation) in
            putPublicAccessBlock(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Puts an Amazon S3 Storage Lens configuration. For more information about S3 Storage Lens, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens.html">Working with
    ///             Amazon S3 Storage Lens in the Amazon S3 User Guide.
    ///
    ///             To use this action,
    ///          you must have permission to perform the s3:PutStorageLensConfiguration action. For more
    ///          information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens_iam_permissions.html">Setting permissions to use Amazon S3 Storage Lens in the
    ///          Amazon S3 User Guide.
    ///
    func putStorageLensConfiguration(input: PutStorageLensConfigurationInput) async throws -> PutStorageLensConfigurationOutputResponse
    {
        typealias putStorageLensConfigurationContinuation = CheckedContinuation<PutStorageLensConfigurationOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: putStorageLensConfigurationContinuation) in
            putStorageLensConfiguration(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Put or replace tags on an existing Amazon S3 Storage Lens configuration. For more information about S3 Storage Lens, see
    ///          <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens.html">Assessing your storage
    ///             activity and usage with Amazon S3 Storage Lens  in the
    ///          Amazon S3 User Guide.
    ///
    ///             To use this action,
    ///          you must have permission to perform the s3:PutStorageLensConfigurationTagging action. For more
    ///          information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens_iam_permissions.html">Setting permissions to use Amazon S3 Storage Lens in the
    ///          Amazon S3 User Guide.
    ///
    func putStorageLensConfigurationTagging(input: PutStorageLensConfigurationTaggingInput) async throws -> PutStorageLensConfigurationTaggingOutputResponse
    {
        typealias putStorageLensConfigurationTaggingContinuation = CheckedContinuation<PutStorageLensConfigurationTaggingOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: putStorageLensConfigurationTaggingContinuation) in
            putStorageLensConfigurationTagging(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Updates an existing S3 Batch Operations job's priority. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-basics.html">S3 Batch Operations in the
    ///             Amazon S3 User Guide.
    ///
    ///          Related actions include:
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateJob.html">CreateJob
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListJobs.html">ListJobs
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeJob.html">DescribeJob
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobStatus.html">UpdateJobStatus
    ///
    ///
    ///
    func updateJobPriority(input: UpdateJobPriorityInput) async throws -> UpdateJobPriorityOutputResponse
    {
        typealias updateJobPriorityContinuation = CheckedContinuation<UpdateJobPriorityOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: updateJobPriorityContinuation) in
            updateJobPriority(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Updates the status for the specified job. Use this action to confirm that you want to
    ///          run a job or to cancel an existing job. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-basics.html">S3 Batch Operations in the
    ///             Amazon S3 User Guide.
    ///
    ///          Related actions include:
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateJob.html">CreateJob
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListJobs.html">ListJobs
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeJob.html">DescribeJob
    ///
    ///
    ///
    ///
    ///                   <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobStatus.html">UpdateJobStatus
    ///
    ///
    ///
    func updateJobStatus(input: UpdateJobStatusInput) async throws -> UpdateJobStatusOutputResponse
    {
        typealias updateJobStatusContinuation = CheckedContinuation<UpdateJobStatusOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: updateJobStatusContinuation) in
            updateJobStatus(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

}
#endif
