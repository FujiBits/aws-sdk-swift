// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <fullname>Amazon Data Lifecycle Manager</fullname>
/// 		       With Amazon Data Lifecycle Manager, you can manage the lifecycle of your AWS resources. You create
/// 			lifecycle policies, which are used to automate operations on the specified
/// 			resources.
/// 		       Amazon DLM supports Amazon EBS volumes and snapshots. For information about using Amazon DLM
/// 			with Amazon EBS, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshot-lifecycle.html">Automating the Amazon EBS
/// 				Snapshot Lifecycle in the Amazon EC2 User Guide.
public protocol DlmClientProtocol {
    /// Creates a policy to manage the lifecycle of the specified AWS resources. You can
    /// 			create up to 100 lifecycle policies.
    func createLifecyclePolicy(input: CreateLifecyclePolicyInput, completion: @escaping (ClientRuntime.SdkResult<CreateLifecyclePolicyOutputResponse, CreateLifecyclePolicyOutputError>) -> Void)
    /// Deletes the specified lifecycle policy and halts the automated operations that the
    /// 			policy specified.
    func deleteLifecyclePolicy(input: DeleteLifecyclePolicyInput, completion: @escaping (ClientRuntime.SdkResult<DeleteLifecyclePolicyOutputResponse, DeleteLifecyclePolicyOutputError>) -> Void)
    /// Gets summary information about all or the specified data lifecycle policies.
    /// 		       To get complete information about a policy, use GetLifecyclePolicy.
    func getLifecyclePolicies(input: GetLifecyclePoliciesInput, completion: @escaping (ClientRuntime.SdkResult<GetLifecyclePoliciesOutputResponse, GetLifecyclePoliciesOutputError>) -> Void)
    /// Gets detailed information about the specified lifecycle policy.
    func getLifecyclePolicy(input: GetLifecyclePolicyInput, completion: @escaping (ClientRuntime.SdkResult<GetLifecyclePolicyOutputResponse, GetLifecyclePolicyOutputError>) -> Void)
    /// Lists the tags for the specified resource.
    func listTagsForResource(input: ListTagsForResourceInput, completion: @escaping (ClientRuntime.SdkResult<ListTagsForResourceOutputResponse, ListTagsForResourceOutputError>) -> Void)
    /// Adds the specified tags to the specified resource.
    func tagResource(input: TagResourceInput, completion: @escaping (ClientRuntime.SdkResult<TagResourceOutputResponse, TagResourceOutputError>) -> Void)
    /// Removes the specified tags from the specified resource.
    func untagResource(input: UntagResourceInput, completion: @escaping (ClientRuntime.SdkResult<UntagResourceOutputResponse, UntagResourceOutputError>) -> Void)
    /// Updates the specified lifecycle policy.
    func updateLifecyclePolicy(input: UpdateLifecyclePolicyInput, completion: @escaping (ClientRuntime.SdkResult<UpdateLifecyclePolicyOutputResponse, UpdateLifecyclePolicyOutputError>) -> Void)
}

public enum DlmClientTypes {}
