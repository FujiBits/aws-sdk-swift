// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListOpenWorkflowExecutionsOutputResponseBody: Equatable {
    public let executionInfos: [WorkflowExecutionInfo]?
    public let nextPageToken: String?
}

extension ListOpenWorkflowExecutionsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case executionInfos
        case nextPageToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let executionInfosContainer = try containerValues.decodeIfPresent([WorkflowExecutionInfo?].self, forKey: .executionInfos)
        var executionInfosDecoded0:[WorkflowExecutionInfo]? = nil
        if let executionInfosContainer = executionInfosContainer {
            executionInfosDecoded0 = [WorkflowExecutionInfo]()
            for structure0 in executionInfosContainer {
                if let structure0 = structure0 {
                    executionInfosDecoded0?.append(structure0)
                }
            }
        }
        executionInfos = executionInfosDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
