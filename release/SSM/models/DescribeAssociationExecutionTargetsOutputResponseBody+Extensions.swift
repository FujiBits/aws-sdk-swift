// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeAssociationExecutionTargetsOutputResponseBody: Equatable {
    public let associationExecutionTargets: [AssociationExecutionTarget]?
    public let nextToken: String?
}

extension DescribeAssociationExecutionTargetsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case associationExecutionTargets = "AssociationExecutionTargets"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let associationExecutionTargetsContainer = try containerValues.decodeIfPresent([AssociationExecutionTarget?].self, forKey: .associationExecutionTargets)
        var associationExecutionTargetsDecoded0:[AssociationExecutionTarget]? = nil
        if let associationExecutionTargetsContainer = associationExecutionTargetsContainer {
            associationExecutionTargetsDecoded0 = [AssociationExecutionTarget]()
            for structure0 in associationExecutionTargetsContainer {
                if let structure0 = structure0 {
                    associationExecutionTargetsDecoded0?.append(structure0)
                }
            }
        }
        associationExecutionTargets = associationExecutionTargetsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
