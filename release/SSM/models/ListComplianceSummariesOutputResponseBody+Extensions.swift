// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListComplianceSummariesOutputResponseBody: Equatable {
    public let complianceSummaryItems: [ComplianceSummaryItem]?
    public let nextToken: String?
}

extension ListComplianceSummariesOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case complianceSummaryItems = "ComplianceSummaryItems"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let complianceSummaryItemsContainer = try containerValues.decodeIfPresent([ComplianceSummaryItem?].self, forKey: .complianceSummaryItems)
        var complianceSummaryItemsDecoded0:[ComplianceSummaryItem]? = nil
        if let complianceSummaryItemsContainer = complianceSummaryItemsContainer {
            complianceSummaryItemsDecoded0 = [ComplianceSummaryItem]()
            for structure0 in complianceSummaryItemsContainer {
                if let structure0 = structure0 {
                    complianceSummaryItemsDecoded0?.append(structure0)
                }
            }
        }
        complianceSummaryItems = complianceSummaryItemsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
