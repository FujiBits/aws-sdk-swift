// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Represents metadata about a patch.</p>
public struct Patch: Equatable {
    /// <p>The Advisory ID of the patch. For example, <code>RHSA-2020:3779</code>. Applies to
    ///    Linux-based instances only.</p>
    public let advisoryIds: [String]?
    /// <p>The architecture of the patch. For example, in
    ///     <code>example-pkg-0.710.10-2.7.abcd.x86_64</code>, the architecture is indicated by
    ///     <code>x86_64</code>. Applies to Linux-based instances only.</p>
    public let arch: String?
    /// <p>The Bugzilla ID of the patch. For example, <code>1600646</code>. Applies to Linux-based
    ///    instances only.</p>
    public let bugzillaIds: [String]?
    /// <p>The Common Vulnerabilities and Exposures (CVE) ID of the patch. For example,
    ///     <code>CVE-2011-3192</code>. Applies to Linux-based instances only.</p>
    public let cVEIds: [String]?
    /// <p>The classification of the patch. For example, <code>SecurityUpdates</code>,
    ///     <code>Updates</code>, or <code>CriticalUpdates</code>.</p>
    public let classification: String?
    /// <p>The URL where more information can be obtained about the patch.</p>
    public let contentUrl: String?
    /// <p>The description of the patch.</p>
    public let description: String?
    /// <p>The epoch of the patch. For example in
    ///    <code>pkg-example-EE-20180914-2.2.amzn1.noarch</code>, the epoch value is
    ///    <code>20180914-2</code>. Applies to Linux-based instances only.</p>
    public let epoch: Int
    /// <p>The ID of the patch. Applies to Windows patches only.</p>
    ///          <note>
    ///             <p>This ID is not the same as the Microsoft Knowledge Base ID.</p>
    ///          </note>
    public let id: String?
    /// <p>The Microsoft Knowledge Base ID of the patch. Applies to Windows patches only.</p>
    public let kbNumber: String?
    /// <p>The language of the patch if it's language-specific.</p>
    public let language: String?
    /// <p>The ID of the Microsoft Security Response Center (MSRC) bulletin the patch is related to.
    ///    For example, <code>MS14-045</code>. Applies to Windows patches only.</p>
    public let msrcNumber: String?
    /// <p>The severity of the patch, such as <code>Critical</code>, <code>Important</code>, or
    ///     <code>Moderate</code>. Applies to Windows patches only.</p>
    public let msrcSeverity: String?
    /// <p>The name of the patch. Applies to Linux-based instances only.</p>
    public let name: String?
    /// <p>The specific product the patch is applicable for. For example,
    ///     <code>WindowsServer2016</code> or <code>AmazonLinux2018.03</code>.</p>
    public let product: String?
    /// <p>The product family the patch is applicable for. For example, <code>Windows</code> or
    ///     <code>Amazon Linux 2</code>.</p>
    public let productFamily: String?
    /// <p>The particular release of a patch. For example, in
    ///     <code>pkg-example-EE-20180914-2.2.amzn1.noarch</code>, the release is <code>2.amaz1</code>.
    ///    Applies to Linux-based instances only.</p>
    public let release: String?
    /// <p>The date the patch was released.</p>
    public let releaseDate: Date?
    /// <p>The source patch repository for the operating system and version, such as
    ///     <code>trusty-security</code> for Ubuntu Server 14.04 LTE and <code>focal-security</code> for
    ///    Ubuntu Server 20.04 LTE. Applies to Linux-based instances only.</p>
    public let repository: String?
    /// <p>The severity level of the patch. For example, <code>CRITICAL</code> or
    ///    <code>MODERATE</code>.</p>
    public let severity: String?
    /// <p>The title of the patch.</p>
    public let title: String?
    /// <p>The name of the vendor providing the patch.</p>
    public let vendor: String?
    /// <p>The version number of the patch. For example, in
    ///     <code>example-pkg-1.710.10-2.7.abcd.x86_64</code>, the version number is indicated by
    ///     <code>-1</code>. Applies to Linux-based instances only.</p>
    public let version: String?

    public init (
        advisoryIds: [String]? = nil,
        arch: String? = nil,
        bugzillaIds: [String]? = nil,
        cVEIds: [String]? = nil,
        classification: String? = nil,
        contentUrl: String? = nil,
        description: String? = nil,
        epoch: Int = 0,
        id: String? = nil,
        kbNumber: String? = nil,
        language: String? = nil,
        msrcNumber: String? = nil,
        msrcSeverity: String? = nil,
        name: String? = nil,
        product: String? = nil,
        productFamily: String? = nil,
        release: String? = nil,
        releaseDate: Date? = nil,
        repository: String? = nil,
        severity: String? = nil,
        title: String? = nil,
        vendor: String? = nil,
        version: String? = nil
    )
    {
        self.advisoryIds = advisoryIds
        self.arch = arch
        self.bugzillaIds = bugzillaIds
        self.cVEIds = cVEIds
        self.classification = classification
        self.contentUrl = contentUrl
        self.description = description
        self.epoch = epoch
        self.id = id
        self.kbNumber = kbNumber
        self.language = language
        self.msrcNumber = msrcNumber
        self.msrcSeverity = msrcSeverity
        self.name = name
        self.product = product
        self.productFamily = productFamily
        self.release = release
        self.releaseDate = releaseDate
        self.repository = repository
        self.severity = severity
        self.title = title
        self.vendor = vendor
        self.version = version
    }
}

extension Patch: CustomDebugStringConvertible {
    public var debugDescription: String {
        "Patch(advisoryIds: \(String(describing: advisoryIds)), arch: \(String(describing: arch)), bugzillaIds: \(String(describing: bugzillaIds)), cVEIds: \(String(describing: cVEIds)), classification: \(String(describing: classification)), contentUrl: \(String(describing: contentUrl)), description: \(String(describing: description)), epoch: \(String(describing: epoch)), id: \(String(describing: id)), kbNumber: \(String(describing: kbNumber)), language: \(String(describing: language)), msrcNumber: \(String(describing: msrcNumber)), msrcSeverity: \(String(describing: msrcSeverity)), name: \(String(describing: name)), product: \(String(describing: product)), productFamily: \(String(describing: productFamily)), release: \(String(describing: release)), releaseDate: \(String(describing: releaseDate)), repository: \(String(describing: repository)), severity: \(String(describing: severity)), title: \(String(describing: title)), vendor: \(String(describing: vendor)), version: \(String(describing: version)))"}
}
