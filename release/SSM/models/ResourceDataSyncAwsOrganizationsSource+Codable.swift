// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ResourceDataSyncAwsOrganizationsSource: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case organizationSourceType = "OrganizationSourceType"
        case organizationalUnits = "OrganizationalUnits"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let organizationSourceType = organizationSourceType {
            try encodeContainer.encode(organizationSourceType, forKey: .organizationSourceType)
        }
        if let organizationalUnits = organizationalUnits {
            var organizationalUnitsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .organizationalUnits)
            for resourcedatasyncorganizationalunitlist0 in organizationalUnits {
                try organizationalUnitsContainer.encode(resourcedatasyncorganizationalunitlist0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let organizationSourceTypeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .organizationSourceType)
        organizationSourceType = organizationSourceTypeDecoded
        let organizationalUnitsContainer = try containerValues.decodeIfPresent([ResourceDataSyncOrganizationalUnit?].self, forKey: .organizationalUnits)
        var organizationalUnitsDecoded0:[ResourceDataSyncOrganizationalUnit]? = nil
        if let organizationalUnitsContainer = organizationalUnitsContainer {
            organizationalUnitsDecoded0 = [ResourceDataSyncOrganizationalUnit]()
            for structure0 in organizationalUnitsContainer {
                if let structure0 = structure0 {
                    organizationalUnitsDecoded0?.append(structure0)
                }
            }
        }
        organizationalUnits = organizationalUnitsDecoded0
    }
}
