// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct StartAssociationsOnceInputBody: Equatable {
    public let associationIds: [String]?
}

extension StartAssociationsOnceInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case associationIds = "AssociationIds"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let associationIdsContainer = try containerValues.decodeIfPresent([String?].self, forKey: .associationIds)
        var associationIdsDecoded0:[String]? = nil
        if let associationIdsContainer = associationIdsContainer {
            associationIdsDecoded0 = [String]()
            for string0 in associationIdsContainer {
                if let string0 = string0 {
                    associationIdsDecoded0?.append(string0)
                }
            }
        }
        associationIds = associationIdsDecoded0
    }
}
