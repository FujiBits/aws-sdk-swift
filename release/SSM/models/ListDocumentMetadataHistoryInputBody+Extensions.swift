// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDocumentMetadataHistoryInputBody: Equatable {
    public let name: String?
    public let documentVersion: String?
    public let metadata: DocumentMetadataEnum?
    public let nextToken: String?
    public let maxResults: Int
}

extension ListDocumentMetadataHistoryInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case documentVersion = "DocumentVersion"
        case maxResults = "MaxResults"
        case metadata = "Metadata"
        case name = "Name"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let documentVersionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .documentVersion)
        documentVersion = documentVersionDecoded
        let metadataDecoded = try containerValues.decodeIfPresent(DocumentMetadataEnum.self, forKey: .metadata)
        metadata = metadataDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decode(Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
    }
}
