// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Describes the information about a task invocation for a particular target as part of a task
///    execution performed as part of a maintenance window execution.</p>
public struct MaintenanceWindowExecutionTaskInvocationIdentity: Equatable {
    /// <p>The time the invocation finished.</p>
    public let endTime: Date?
    /// <p>The ID of the action performed in the service that actually handled the task invocation. If
    ///    the task type is RUN_COMMAND, this value is the command ID.</p>
    public let executionId: String?
    /// <p>The ID of the task invocation.</p>
    public let invocationId: String?
    /// <p>User-provided value that was specified when the target was registered with the maintenance
    ///    window. This was also included in any CloudWatch events raised during the task invocation.</p>
    public let ownerInformation: String?
    /// <p>The parameters that were provided for the invocation when it was run.</p>
    public let parameters: String?
    /// <p>The time the invocation started.</p>
    public let startTime: Date?
    /// <p>The status of the task invocation.</p>
    public let status: MaintenanceWindowExecutionStatus?
    /// <p>The details explaining the status of the task invocation. Only available for certain Status
    ///    values. </p>
    public let statusDetails: String?
    /// <p>The ID of the specific task execution in the maintenance window execution.</p>
    public let taskExecutionId: String?
    /// <p>The task type.</p>
    public let taskType: MaintenanceWindowTaskType?
    /// <p>The ID of the maintenance window execution that ran the task.</p>
    public let windowExecutionId: String?
    /// <p>The ID of the target definition in this maintenance window the invocation was performed
    ///    for.</p>
    public let windowTargetId: String?

    public init (
        endTime: Date? = nil,
        executionId: String? = nil,
        invocationId: String? = nil,
        ownerInformation: String? = nil,
        parameters: String? = nil,
        startTime: Date? = nil,
        status: MaintenanceWindowExecutionStatus? = nil,
        statusDetails: String? = nil,
        taskExecutionId: String? = nil,
        taskType: MaintenanceWindowTaskType? = nil,
        windowExecutionId: String? = nil,
        windowTargetId: String? = nil
    )
    {
        self.endTime = endTime
        self.executionId = executionId
        self.invocationId = invocationId
        self.ownerInformation = ownerInformation
        self.parameters = parameters
        self.startTime = startTime
        self.status = status
        self.statusDetails = statusDetails
        self.taskExecutionId = taskExecutionId
        self.taskType = taskType
        self.windowExecutionId = windowExecutionId
        self.windowTargetId = windowTargetId
    }
}

extension MaintenanceWindowExecutionTaskInvocationIdentity: CustomDebugStringConvertible {
    public var debugDescription: String {
        "MaintenanceWindowExecutionTaskInvocationIdentity(endTime: \(String(describing: endTime)), executionId: \(String(describing: executionId)), invocationId: \(String(describing: invocationId)), ownerInformation: \(String(describing: ownerInformation)), parameters: \(String(describing: parameters)), startTime: \(String(describing: startTime)), status: \(String(describing: status)), statusDetails: \(String(describing: statusDetails)), taskExecutionId: \(String(describing: taskExecutionId)), taskType: \(String(describing: taskType)), windowExecutionId: \(String(describing: windowExecutionId)), windowTargetId: \(String(describing: windowTargetId)))"}
}
