// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListResourceDataSyncOutputResponseBody: Equatable {
    public let resourceDataSyncItems: [ResourceDataSyncItem]?
    public let nextToken: String?
}

extension ListResourceDataSyncOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case resourceDataSyncItems = "ResourceDataSyncItems"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourceDataSyncItemsContainer = try containerValues.decodeIfPresent([ResourceDataSyncItem?].self, forKey: .resourceDataSyncItems)
        var resourceDataSyncItemsDecoded0:[ResourceDataSyncItem]? = nil
        if let resourceDataSyncItemsContainer = resourceDataSyncItemsContainer {
            resourceDataSyncItemsDecoded0 = [ResourceDataSyncItem]()
            for structure0 in resourceDataSyncItemsContainer {
                if let structure0 = structure0 {
                    resourceDataSyncItemsDecoded0?.append(structure0)
                }
            }
        }
        resourceDataSyncItems = resourceDataSyncItemsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
