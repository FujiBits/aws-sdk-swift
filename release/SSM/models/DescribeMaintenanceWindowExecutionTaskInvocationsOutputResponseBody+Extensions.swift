// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeMaintenanceWindowExecutionTaskInvocationsOutputResponseBody: Equatable {
    public let windowExecutionTaskInvocationIdentities: [MaintenanceWindowExecutionTaskInvocationIdentity]?
    public let nextToken: String?
}

extension DescribeMaintenanceWindowExecutionTaskInvocationsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case windowExecutionTaskInvocationIdentities = "WindowExecutionTaskInvocationIdentities"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let windowExecutionTaskInvocationIdentitiesContainer = try containerValues.decodeIfPresent([MaintenanceWindowExecutionTaskInvocationIdentity?].self, forKey: .windowExecutionTaskInvocationIdentities)
        var windowExecutionTaskInvocationIdentitiesDecoded0:[MaintenanceWindowExecutionTaskInvocationIdentity]? = nil
        if let windowExecutionTaskInvocationIdentitiesContainer = windowExecutionTaskInvocationIdentitiesContainer {
            windowExecutionTaskInvocationIdentitiesDecoded0 = [MaintenanceWindowExecutionTaskInvocationIdentity]()
            for structure0 in windowExecutionTaskInvocationIdentitiesContainer {
                if let structure0 = structure0 {
                    windowExecutionTaskInvocationIdentitiesDecoded0?.append(structure0)
                }
            }
        }
        windowExecutionTaskInvocationIdentities = windowExecutionTaskInvocationIdentitiesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
