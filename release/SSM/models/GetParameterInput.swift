// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct GetParameterInput: Equatable {
    /// <p>The name of the parameter you want to query.</p>
    public let name: String?
    /// <p>Return decrypted values for secure string parameters. This flag is ignored for String and
    ///    StringList parameter types.</p>
    public let withDecryption: Bool

    public init (
        name: String? = nil,
        withDecryption: Bool = false
    )
    {
        self.name = name
        self.withDecryption = withDecryption
    }
}

extension GetParameterInput: CustomDebugStringConvertible {
    public var debugDescription: String {
        "GetParameterInput(name: \(String(describing: name)), withDecryption: \(String(describing: withDecryption)))"}
}
