// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DocumentMetadataResponseInfo: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case reviewerResponse = "ReviewerResponse"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let reviewerResponse = reviewerResponse {
            var reviewerResponseContainer = encodeContainer.nestedUnkeyedContainer(forKey: .reviewerResponse)
            for documentreviewerresponselist0 in reviewerResponse {
                try reviewerResponseContainer.encode(documentreviewerresponselist0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let reviewerResponseContainer = try containerValues.decodeIfPresent([DocumentReviewerResponseSource?].self, forKey: .reviewerResponse)
        var reviewerResponseDecoded0:[DocumentReviewerResponseSource]? = nil
        if let reviewerResponseContainer = reviewerResponseContainer {
            reviewerResponseDecoded0 = [DocumentReviewerResponseSource]()
            for structure0 in reviewerResponseContainer {
                if let structure0 = structure0 {
                    reviewerResponseDecoded0?.append(structure0)
                }
            }
        }
        reviewerResponse = reviewerResponseDecoded0
    }
}
