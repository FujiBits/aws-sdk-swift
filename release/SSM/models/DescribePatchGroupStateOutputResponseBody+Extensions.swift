// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribePatchGroupStateOutputResponseBody: Equatable {
    public let instances: Int
    public let instancesWithInstalledPatches: Int
    public let instancesWithInstalledOtherPatches: Int
    public let instancesWithInstalledPendingRebootPatches: Int
    public let instancesWithInstalledRejectedPatches: Int
    public let instancesWithMissingPatches: Int
    public let instancesWithFailedPatches: Int
    public let instancesWithNotApplicablePatches: Int
    public let instancesWithUnreportedNotApplicablePatches: Int
    public let instancesWithCriticalNonCompliantPatches: Int
    public let instancesWithSecurityNonCompliantPatches: Int
    public let instancesWithOtherNonCompliantPatches: Int
}

extension DescribePatchGroupStateOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case instances = "Instances"
        case instancesWithCriticalNonCompliantPatches = "InstancesWithCriticalNonCompliantPatches"
        case instancesWithFailedPatches = "InstancesWithFailedPatches"
        case instancesWithInstalledOtherPatches = "InstancesWithInstalledOtherPatches"
        case instancesWithInstalledPatches = "InstancesWithInstalledPatches"
        case instancesWithInstalledPendingRebootPatches = "InstancesWithInstalledPendingRebootPatches"
        case instancesWithInstalledRejectedPatches = "InstancesWithInstalledRejectedPatches"
        case instancesWithMissingPatches = "InstancesWithMissingPatches"
        case instancesWithNotApplicablePatches = "InstancesWithNotApplicablePatches"
        case instancesWithOtherNonCompliantPatches = "InstancesWithOtherNonCompliantPatches"
        case instancesWithSecurityNonCompliantPatches = "InstancesWithSecurityNonCompliantPatches"
        case instancesWithUnreportedNotApplicablePatches = "InstancesWithUnreportedNotApplicablePatches"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let instancesDecoded = try containerValues.decode(Int.self, forKey: .instances)
        instances = instancesDecoded
        let instancesWithInstalledPatchesDecoded = try containerValues.decode(Int.self, forKey: .instancesWithInstalledPatches)
        instancesWithInstalledPatches = instancesWithInstalledPatchesDecoded
        let instancesWithInstalledOtherPatchesDecoded = try containerValues.decode(Int.self, forKey: .instancesWithInstalledOtherPatches)
        instancesWithInstalledOtherPatches = instancesWithInstalledOtherPatchesDecoded
        let instancesWithInstalledPendingRebootPatchesDecoded = try containerValues.decode(Int.self, forKey: .instancesWithInstalledPendingRebootPatches)
        instancesWithInstalledPendingRebootPatches = instancesWithInstalledPendingRebootPatchesDecoded
        let instancesWithInstalledRejectedPatchesDecoded = try containerValues.decode(Int.self, forKey: .instancesWithInstalledRejectedPatches)
        instancesWithInstalledRejectedPatches = instancesWithInstalledRejectedPatchesDecoded
        let instancesWithMissingPatchesDecoded = try containerValues.decode(Int.self, forKey: .instancesWithMissingPatches)
        instancesWithMissingPatches = instancesWithMissingPatchesDecoded
        let instancesWithFailedPatchesDecoded = try containerValues.decode(Int.self, forKey: .instancesWithFailedPatches)
        instancesWithFailedPatches = instancesWithFailedPatchesDecoded
        let instancesWithNotApplicablePatchesDecoded = try containerValues.decode(Int.self, forKey: .instancesWithNotApplicablePatches)
        instancesWithNotApplicablePatches = instancesWithNotApplicablePatchesDecoded
        let instancesWithUnreportedNotApplicablePatchesDecoded = try containerValues.decode(Int.self, forKey: .instancesWithUnreportedNotApplicablePatches)
        instancesWithUnreportedNotApplicablePatches = instancesWithUnreportedNotApplicablePatchesDecoded
        let instancesWithCriticalNonCompliantPatchesDecoded = try containerValues.decode(Int.self, forKey: .instancesWithCriticalNonCompliantPatches)
        instancesWithCriticalNonCompliantPatches = instancesWithCriticalNonCompliantPatchesDecoded
        let instancesWithSecurityNonCompliantPatchesDecoded = try containerValues.decode(Int.self, forKey: .instancesWithSecurityNonCompliantPatches)
        instancesWithSecurityNonCompliantPatches = instancesWithSecurityNonCompliantPatchesDecoded
        let instancesWithOtherNonCompliantPatchesDecoded = try containerValues.decode(Int.self, forKey: .instancesWithOtherNonCompliantPatches)
        instancesWithOtherNonCompliantPatches = instancesWithOtherNonCompliantPatchesDecoded
    }
}
