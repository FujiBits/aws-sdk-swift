// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribePatchPropertiesInputBody: Equatable {
    public let operatingSystem: OperatingSystem?
    public let property: PatchProperty?
    public let patchSet: PatchSet?
    public let maxResults: Int
    public let nextToken: String?
}

extension DescribePatchPropertiesInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case operatingSystem = "OperatingSystem"
        case patchSet = "PatchSet"
        case property = "Property"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let operatingSystemDecoded = try containerValues.decodeIfPresent(OperatingSystem.self, forKey: .operatingSystem)
        operatingSystem = operatingSystemDecoded
        let propertyDecoded = try containerValues.decodeIfPresent(PatchProperty.self, forKey: .property)
        property = propertyDecoded
        let patchSetDecoded = try containerValues.decodeIfPresent(PatchSet.self, forKey: .patchSet)
        patchSet = patchSetDecoded
        let maxResultsDecoded = try containerValues.decode(Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
