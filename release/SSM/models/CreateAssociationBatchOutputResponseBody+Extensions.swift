// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateAssociationBatchOutputResponseBody: Equatable {
    public let successful: [AssociationDescription]?
    public let failed: [FailedCreateAssociation]?
}

extension CreateAssociationBatchOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case failed = "Failed"
        case successful = "Successful"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let successfulContainer = try containerValues.decodeIfPresent([AssociationDescription?].self, forKey: .successful)
        var successfulDecoded0:[AssociationDescription]? = nil
        if let successfulContainer = successfulContainer {
            successfulDecoded0 = [AssociationDescription]()
            for structure0 in successfulContainer {
                if let structure0 = structure0 {
                    successfulDecoded0?.append(structure0)
                }
            }
        }
        successful = successfulDecoded0
        let failedContainer = try containerValues.decodeIfPresent([FailedCreateAssociation?].self, forKey: .failed)
        var failedDecoded0:[FailedCreateAssociation]? = nil
        if let failedContainer = failedContainer {
            failedDecoded0 = [FailedCreateAssociation]()
            for structure0 in failedContainer {
                if let structure0 = structure0 {
                    failedDecoded0?.append(structure0)
                }
            }
        }
        failed = failedDecoded0
    }
}
