// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateResourceDataSyncInputBody: Equatable {
    public let syncName: String?
    public let s3Destination: ResourceDataSyncS3Destination?
    public let syncType: String?
    public let syncSource: ResourceDataSyncSource?
}

extension CreateResourceDataSyncInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case s3Destination = "S3Destination"
        case syncName = "SyncName"
        case syncSource = "SyncSource"
        case syncType = "SyncType"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let syncNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .syncName)
        syncName = syncNameDecoded
        let s3DestinationDecoded = try containerValues.decodeIfPresent(ResourceDataSyncS3Destination.self, forKey: .s3Destination)
        s3Destination = s3DestinationDecoded
        let syncTypeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .syncType)
        syncType = syncTypeDecoded
        let syncSourceDecoded = try containerValues.decodeIfPresent(ResourceDataSyncSource.self, forKey: .syncSource)
        syncSource = syncSourceDecoded
    }
}
