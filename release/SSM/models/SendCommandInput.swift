// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct SendCommandInput: Equatable {
    /// <p>Enables Systems Manager to send Run Command output to Amazon CloudWatch Logs. </p>
    public let cloudWatchOutputConfig: CloudWatchOutputConfig?
    /// <p>User-specified information about the command, such as a brief description of what the
    ///    command should do.</p>
    public let comment: String?
    /// <p>The Sha256 or Sha1 hash created by the system when the document was created. </p>
    ///          <note>
    ///             <p>Sha1 hashes have been deprecated.</p>
    ///          </note>
    public let documentHash: String?
    /// <p>Sha256 or Sha1.</p>
    ///          <note>
    ///             <p>Sha1 hashes have been deprecated.</p>
    ///          </note>
    public let documentHashType: DocumentHashType?
    /// <p>The name of the Systems Manager document to run. This can be a public document or a custom document.
    ///    To run a shared document belonging to another account, specify the document ARN. For more
    ///    information about how to use shared documents, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/ssm-using-shared.html">Using shared SSM documents</a>
    ///    in the <i>AWS Systems Manager User Guide</i>.</p>
    public let documentName: String?
    /// <p>The SSM document version to use in the request. You can specify $DEFAULT, $LATEST, or a
    ///    specific version number. If you run commands by using the AWS CLI, then you must escape the first
    ///    two options by using a backslash. If you specify a version number, then you don't need to use the
    ///    backslash. For example:</p>
    ///          <p>--document-version "\$DEFAULT"</p>
    ///          <p>--document-version "\$LATEST"</p>
    ///          <p>--document-version "3"</p>
    public let documentVersion: String?
    /// <p>The IDs of the instances where the command should run. Specifying instance IDs is most
    ///    useful when you are targeting a limited number of instances, though you can specify up to 50
    ///    IDs.</p>
    ///          <p>To target a larger number of instances, or if you prefer not to list individual instance
    ///    IDs, we recommend using the <code>Targets</code> option instead. Using <code>Targets</code>,
    ///    which accepts tag key-value pairs to identify the instances to send commands to, you can a send
    ///    command to tens, hundreds, or thousands of instances at once.</p>
    ///          <p>For more information about how to use targets, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html">Using targets and rate
    ///     controls to send commands to a fleet</a> in the
    ///    <i>AWS Systems Manager User Guide</i>.</p>
    public let instanceIds: [String]?
    /// <p>(Optional) The maximum number of instances that are allowed to run the command at the same
    ///    time. You can specify a number such as 10 or a percentage such as 10%. The default value is 50.
    ///    For more information about how to use MaxConcurrency, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-velocity">Using
    ///     concurrency controls</a> in the <i>AWS Systems Manager User Guide</i>.</p>
    public let maxConcurrency: String?
    /// <p>The maximum number of errors allowed without the command failing. When the command fails one
    ///    more time beyond the value of MaxErrors, the systems stops sending the command to additional
    ///    targets. You can specify a number like 10 or a percentage like 10%. The default value is 0. For
    ///    more information about how to use MaxErrors, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-maxerrors">Using
    ///     error controls</a> in the <i>AWS Systems Manager User Guide</i>.</p>
    public let maxErrors: String?
    /// <p>Configurations for sending notifications.</p>
    public let notificationConfig: NotificationConfig?
    /// <p>The name of the S3 bucket where command execution responses should be stored.</p>
    public let outputS3BucketName: String?
    /// <p>The directory structure within the S3 bucket where the responses should be stored.</p>
    public let outputS3KeyPrefix: String?
    /// <p>(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager
    ///    automatically determines the Region of the S3 bucket.</p>
    public let outputS3Region: String?
    /// <p>The required and optional parameters specified in the document being run.</p>
    public let parameters: [String:[String]]?
    /// <p>The ARN of the IAM service role to use to publish Amazon Simple Notification Service (Amazon SNS) notifications for Run
    ///    Command commands.</p>
    public let serviceRoleArn: String?
    /// <p>An array of search criteria that targets instances using a <code>Key,Value</code>
    ///    combination that you specify. Specifying targets is most useful when you want to send a command
    ///    to a large number of instances at once. Using <code>Targets</code>, which accepts tag key-value
    ///    pairs to identify instances, you can send a command to tens, hundreds, or thousands of instances
    ///    at once.</p>
    ///          <p>To send a command to a smaller number of instances, you can use the <code>InstanceIds</code>
    ///    option instead.</p>
    ///          <p>For more information about how to use targets, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html">Sending commands to a
    ///     fleet</a> in the <i>AWS Systems Manager User Guide</i>.</p>
    public let targets: [Target]?
    /// <p>If this time is reached and the command has not already started running, it will not
    ///    run.</p>
    public let timeoutSeconds: Int

    public init (
        cloudWatchOutputConfig: CloudWatchOutputConfig? = nil,
        comment: String? = nil,
        documentHash: String? = nil,
        documentHashType: DocumentHashType? = nil,
        documentName: String? = nil,
        documentVersion: String? = nil,
        instanceIds: [String]? = nil,
        maxConcurrency: String? = nil,
        maxErrors: String? = nil,
        notificationConfig: NotificationConfig? = nil,
        outputS3BucketName: String? = nil,
        outputS3KeyPrefix: String? = nil,
        outputS3Region: String? = nil,
        parameters: [String:[String]]? = nil,
        serviceRoleArn: String? = nil,
        targets: [Target]? = nil,
        timeoutSeconds: Int = 0
    )
    {
        self.cloudWatchOutputConfig = cloudWatchOutputConfig
        self.comment = comment
        self.documentHash = documentHash
        self.documentHashType = documentHashType
        self.documentName = documentName
        self.documentVersion = documentVersion
        self.instanceIds = instanceIds
        self.maxConcurrency = maxConcurrency
        self.maxErrors = maxErrors
        self.notificationConfig = notificationConfig
        self.outputS3BucketName = outputS3BucketName
        self.outputS3KeyPrefix = outputS3KeyPrefix
        self.outputS3Region = outputS3Region
        self.parameters = parameters
        self.serviceRoleArn = serviceRoleArn
        self.targets = targets
        self.timeoutSeconds = timeoutSeconds
    }
}

extension SendCommandInput: CustomDebugStringConvertible {
    public var debugDescription: String {
        "SendCommandInput(cloudWatchOutputConfig: \(String(describing: cloudWatchOutputConfig)), comment: \(String(describing: comment)), documentHash: \(String(describing: documentHash)), documentHashType: \(String(describing: documentHashType)), documentName: \(String(describing: documentName)), documentVersion: \(String(describing: documentVersion)), instanceIds: \(String(describing: instanceIds)), maxConcurrency: \(String(describing: maxConcurrency)), maxErrors: \(String(describing: maxErrors)), notificationConfig: \(String(describing: notificationConfig)), outputS3BucketName: \(String(describing: outputS3BucketName)), outputS3KeyPrefix: \(String(describing: outputS3KeyPrefix)), outputS3Region: \(String(describing: outputS3Region)), parameters: \(String(describing: parameters)), serviceRoleArn: \(String(describing: serviceRoleArn)), targets: \(String(describing: targets)), timeoutSeconds: \(String(describing: timeoutSeconds)))"}
}
