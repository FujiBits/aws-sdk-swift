// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeActivationsOutputResponseBody: Equatable {
    public let activationList: [Activation]?
    public let nextToken: String?
}

extension DescribeActivationsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case activationList = "ActivationList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let activationListContainer = try containerValues.decodeIfPresent([Activation?].self, forKey: .activationList)
        var activationListDecoded0:[Activation]? = nil
        if let activationListContainer = activationListContainer {
            activationListDecoded0 = [Activation]()
            for structure0 in activationListContainer {
                if let structure0 = structure0 {
                    activationListDecoded0?.append(structure0)
                }
            }
        }
        activationList = activationListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
