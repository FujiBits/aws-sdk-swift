// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension InventoryDeletionSummaryItem: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case count = "Count"
        case remainingCount = "RemainingCount"
        case version = "Version"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if count != 0 {
            try encodeContainer.encode(count, forKey: .count)
        }
        if remainingCount != 0 {
            try encodeContainer.encode(remainingCount, forKey: .remainingCount)
        }
        if let version = version {
            try encodeContainer.encode(version, forKey: .version)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let versionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .version)
        version = versionDecoded
        let countDecoded = try containerValues.decode(Int.self, forKey: .count)
        count = countDecoded
        let remainingCountDecoded = try containerValues.decode(Int.self, forKey: .remainingCount)
        remainingCount = remainingCountDecoded
    }
}
