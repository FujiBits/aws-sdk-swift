// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateOpsMetadataInputBody: Equatable {
    public let resourceId: String?
    public let metadata: [String:MetadataValue]?
    public let tags: [Tag]?
}

extension CreateOpsMetadataInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case metadata = "Metadata"
        case resourceId = "ResourceId"
        case tags = "Tags"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourceIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .resourceId)
        resourceId = resourceIdDecoded
        let metadataContainer = try containerValues.decodeIfPresent([String: MetadataValue?].self, forKey: .metadata)
        var metadataDecoded0: [String:MetadataValue]? = nil
        if let metadataContainer = metadataContainer {
            metadataDecoded0 = [String:MetadataValue]()
            for (key0, metadatavalue0) in metadataContainer {
                if let metadatavalue0 = metadatavalue0 {
                    metadataDecoded0?[key0] = metadatavalue0
                }
            }
        }
        metadata = metadataDecoded0
        let tagsContainer = try containerValues.decodeIfPresent([Tag?].self, forKey: .tags)
        var tagsDecoded0:[Tag]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [Tag]()
            for structure0 in tagsContainer {
                if let structure0 = structure0 {
                    tagsDecoded0?.append(structure0)
                }
            }
        }
        tags = tagsDecoded0
    }
}
