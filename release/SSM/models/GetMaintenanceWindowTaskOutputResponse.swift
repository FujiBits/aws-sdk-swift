// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct GetMaintenanceWindowTaskOutputResponse: Equatable {
    /// <p>The retrieved task description.</p>
    public let description: String?
    /// <p>The location in Amazon S3 where the task results are logged.</p>
    ///          <note>
    ///             <p>
    ///                <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the
    ///       <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure.
    ///       For information about how Systems Manager handles these options for the supported maintenance
    ///       window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p>
    ///          </note>
    public let loggingInfo: LoggingInfo?
    /// <p>The maximum number of targets allowed to run this task in parallel.</p>
    ///          <note>
    ///             <p>For maintenance window tasks without a target specified, you cannot supply a value for this
    ///     option. Instead, the system inserts a placeholder value of <code>1</code>, which may be reported
    ///     in the response to this command. This value does not affect the running of your task and can be
    ///     ignored.</p>
    ///          </note>
    public let maxConcurrency: String?
    /// <p>The maximum number of errors allowed before the task stops being scheduled.</p>
    ///          <note>
    ///             <p>For maintenance window tasks without a target specified, you cannot supply a value for this
    ///     option. Instead, the system inserts a placeholder value of <code>1</code>, which may be reported
    ///     in the response to this command. This value does not affect the running of your task and can be
    ///     ignored.</p>
    ///          </note>
    public let maxErrors: String?
    /// <p>The retrieved task name.</p>
    public let name: String?
    /// <p>The priority of the task when it runs. The lower the number, the higher the priority. Tasks
    ///    that have the same priority are scheduled in parallel.</p>
    public let priority: Int
    /// <p>The ARN of the IAM service role to use to publish Amazon Simple Notification Service (Amazon SNS) notifications for
    ///    maintenance window Run Command tasks.</p>
    public let serviceRoleArn: String?
    /// <p>The targets where the task should run.</p>
    public let targets: [Target]?
    /// <p>The resource that the task used during execution. For RUN_COMMAND and AUTOMATION task types,
    ///    the TaskArn is the Systems Manager Document name/ARN. For LAMBDA tasks, the value is the function name/ARN.
    ///    For STEP_FUNCTIONS tasks, the value is the state machine ARN.</p>
    public let taskArn: String?
    /// <p>The parameters to pass to the task when it runs.</p>
    public let taskInvocationParameters: MaintenanceWindowTaskInvocationParameters?
    /// <p>The parameters to pass to the task when it runs.</p>
    ///          <note>
    ///             <p>
    ///                <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs,
    ///       instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information
    ///       about how Systems Manager handles these options for the supported maintenance window task
    ///       types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p>
    ///          </note>
    public let taskParameters: [String:MaintenanceWindowTaskParameterValueExpression]?
    /// <p>The type of task to run.</p>
    public let taskType: MaintenanceWindowTaskType?
    /// <p>The retrieved maintenance window ID.</p>
    public let windowId: String?
    /// <p>The retrieved maintenance window task ID.</p>
    public let windowTaskId: String?

    public init (
        description: String? = nil,
        loggingInfo: LoggingInfo? = nil,
        maxConcurrency: String? = nil,
        maxErrors: String? = nil,
        name: String? = nil,
        priority: Int = 0,
        serviceRoleArn: String? = nil,
        targets: [Target]? = nil,
        taskArn: String? = nil,
        taskInvocationParameters: MaintenanceWindowTaskInvocationParameters? = nil,
        taskParameters: [String:MaintenanceWindowTaskParameterValueExpression]? = nil,
        taskType: MaintenanceWindowTaskType? = nil,
        windowId: String? = nil,
        windowTaskId: String? = nil
    )
    {
        self.description = description
        self.loggingInfo = loggingInfo
        self.maxConcurrency = maxConcurrency
        self.maxErrors = maxErrors
        self.name = name
        self.priority = priority
        self.serviceRoleArn = serviceRoleArn
        self.targets = targets
        self.taskArn = taskArn
        self.taskInvocationParameters = taskInvocationParameters
        self.taskParameters = taskParameters
        self.taskType = taskType
        self.windowId = windowId
        self.windowTaskId = windowTaskId
    }
}

extension GetMaintenanceWindowTaskOutputResponse: CustomDebugStringConvertible {
    public var debugDescription: String {
        "GetMaintenanceWindowTaskOutputResponse(description: \(String(describing: description)), loggingInfo: \(String(describing: loggingInfo)), maxConcurrency: \(String(describing: maxConcurrency)), maxErrors: \(String(describing: maxErrors)), name: \(String(describing: name)), priority: \(String(describing: priority)), serviceRoleArn: \(String(describing: serviceRoleArn)), targets: \(String(describing: targets)), taskArn: \(String(describing: taskArn)), taskInvocationParameters: \(String(describing: taskInvocationParameters)), taskParameters: \(String(describing: taskParameters)), taskType: \(String(describing: taskType)), windowId: \(String(describing: windowId)), windowTaskId: \(String(describing: windowTaskId)))"}
}
