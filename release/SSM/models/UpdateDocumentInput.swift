// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateDocumentInput: Equatable {
    /// <p>A list of key and value pairs that describe attachments to a version of a document.</p>
    public let attachments: [AttachmentsSource]?
    /// <p>A valid JSON or YAML string.</p>
    public let content: String?
    /// <p>The friendly name of the Systems Manager document that you want to update. This value can differ for
    ///    each version of the document. If you do not specify a value for this parameter in your request,
    ///    the existing value is applied to the new document version.</p>
    public let displayName: String?
    /// <p>Specify the document format for the new document version. Systems Manager supports JSON and YAML
    ///    documents. JSON is the default format.</p>
    public let documentFormat: DocumentFormat?
    /// <p>The version of the document that you want to update. Currently, Systems Manager supports updating only
    ///    the latest version of the document. You can specify the version number of the latest version or
    ///    use the <code>$LATEST</code> variable.</p>
    public let documentVersion: String?
    /// <p>The name of the Systems Manager document that you want to update.</p>
    public let name: String?
    /// <p>Specify a new target type for the document.</p>
    public let targetType: String?
    /// <p>An optional field specifying the version of the artifact you are updating with the document.
    ///    For example, "Release 12, Update 6". This value is unique across all versions of a document, and
    ///    cannot be changed.</p>
    public let versionName: String?

    public init (
        attachments: [AttachmentsSource]? = nil,
        content: String? = nil,
        displayName: String? = nil,
        documentFormat: DocumentFormat? = nil,
        documentVersion: String? = nil,
        name: String? = nil,
        targetType: String? = nil,
        versionName: String? = nil
    )
    {
        self.attachments = attachments
        self.content = content
        self.displayName = displayName
        self.documentFormat = documentFormat
        self.documentVersion = documentVersion
        self.name = name
        self.targetType = targetType
        self.versionName = versionName
    }
}

extension UpdateDocumentInput: CustomDebugStringConvertible {
    public var debugDescription: String {
        "UpdateDocumentInput(attachments: \(String(describing: attachments)), content: \(String(describing: content)), displayName: \(String(describing: displayName)), documentFormat: \(String(describing: documentFormat)), documentVersion: \(String(describing: documentVersion)), name: \(String(describing: name)), targetType: \(String(describing: targetType)), versionName: \(String(describing: versionName)))"}
}
