// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeDocumentPermissionOutputResponseBody: Equatable {
    public let accountIds: [String]?
    public let accountSharingInfoList: [AccountSharingInfo]?
    public let nextToken: String?
}

extension DescribeDocumentPermissionOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case accountIds = "AccountIds"
        case accountSharingInfoList = "AccountSharingInfoList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let accountIdsContainer = try containerValues.decodeIfPresent([String?].self, forKey: .accountIds)
        var accountIdsDecoded0:[String]? = nil
        if let accountIdsContainer = accountIdsContainer {
            accountIdsDecoded0 = [String]()
            for string0 in accountIdsContainer {
                if let string0 = string0 {
                    accountIdsDecoded0?.append(string0)
                }
            }
        }
        accountIds = accountIdsDecoded0
        let accountSharingInfoListContainer = try containerValues.decodeIfPresent([AccountSharingInfo?].self, forKey: .accountSharingInfoList)
        var accountSharingInfoListDecoded0:[AccountSharingInfo]? = nil
        if let accountSharingInfoListContainer = accountSharingInfoListContainer {
            accountSharingInfoListDecoded0 = [AccountSharingInfo]()
            for structure0 in accountSharingInfoListContainer {
                if let structure0 = structure0 {
                    accountSharingInfoListDecoded0?.append(structure0)
                }
            }
        }
        accountSharingInfoList = accountSharingInfoListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
