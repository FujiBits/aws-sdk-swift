// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GetMaintenanceWindowExecutionTaskInvocationOutputResponse: HttpResponseBinding {
    public init (httpResponse: HttpResponse, decoder: ResponseDecoder? = nil) throws {
        if case .data(let data) = httpResponse.body,
            let unwrappedData = data,
            let responseDecoder = decoder {
            let output: GetMaintenanceWindowExecutionTaskInvocationOutputResponseBody = try responseDecoder.decode(responseBody: unwrappedData)
            self.endTime = output.endTime
            self.executionId = output.executionId
            self.invocationId = output.invocationId
            self.ownerInformation = output.ownerInformation
            self.parameters = output.parameters
            self.startTime = output.startTime
            self.status = output.status
            self.statusDetails = output.statusDetails
            self.taskExecutionId = output.taskExecutionId
            self.taskType = output.taskType
            self.windowExecutionId = output.windowExecutionId
            self.windowTargetId = output.windowTargetId
        } else {
            self.endTime = nil
            self.executionId = nil
            self.invocationId = nil
            self.ownerInformation = nil
            self.parameters = nil
            self.startTime = nil
            self.status = nil
            self.statusDetails = nil
            self.taskExecutionId = nil
            self.taskType = nil
            self.windowExecutionId = nil
            self.windowTargetId = nil
        }
    }
}
