// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum InstanceInformationFilterKey {
    case activationIds
    case agentVersion
    case associationStatus
    case iamRole
    case instanceIds
    case pingStatus
    case platformTypes
    case resourceType
    case sdkUnknown(String)
}

extension InstanceInformationFilterKey : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [InstanceInformationFilterKey] {
        return [
            .activationIds,
            .agentVersion,
            .associationStatus,
            .iamRole,
            .instanceIds,
            .pingStatus,
            .platformTypes,
            .resourceType,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .activationIds: return "ActivationIds"
        case .agentVersion: return "AgentVersion"
        case .associationStatus: return "AssociationStatus"
        case .iamRole: return "IamRole"
        case .instanceIds: return "InstanceIds"
        case .pingStatus: return "PingStatus"
        case .platformTypes: return "PlatformTypes"
        case .resourceType: return "ResourceType"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = InstanceInformationFilterKey(rawValue: rawValue) ?? InstanceInformationFilterKey.sdkUnknown(rawValue)
    }
}
