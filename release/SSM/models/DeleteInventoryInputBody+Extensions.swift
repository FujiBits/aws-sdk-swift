// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DeleteInventoryInputBody: Equatable {
    public let typeName: String?
    public let schemaDeleteOption: InventorySchemaDeleteOption?
    public let dryRun: Bool
    public let clientToken: String?
}

extension DeleteInventoryInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case clientToken = "ClientToken"
        case dryRun = "DryRun"
        case schemaDeleteOption = "SchemaDeleteOption"
        case typeName = "TypeName"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let typeNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .typeName)
        typeName = typeNameDecoded
        let schemaDeleteOptionDecoded = try containerValues.decodeIfPresent(InventorySchemaDeleteOption.self, forKey: .schemaDeleteOption)
        schemaDeleteOption = schemaDeleteOptionDecoded
        let dryRunDecoded = try containerValues.decode(Bool.self, forKey: .dryRun)
        dryRun = dryRunDecoded
        let clientTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .clientToken)
        clientToken = clientTokenDecoded
    }
}
