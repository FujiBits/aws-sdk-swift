// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListComplianceItemsOutputResponseBody: Equatable {
    public let complianceItems: [ComplianceItem]?
    public let nextToken: String?
}

extension ListComplianceItemsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case complianceItems = "ComplianceItems"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let complianceItemsContainer = try containerValues.decodeIfPresent([ComplianceItem?].self, forKey: .complianceItems)
        var complianceItemsDecoded0:[ComplianceItem]? = nil
        if let complianceItemsContainer = complianceItemsContainer {
            complianceItemsDecoded0 = [ComplianceItem]()
            for structure0 in complianceItemsContainer {
                if let structure0 = structure0 {
                    complianceItemsDecoded0?.append(structure0)
                }
            }
        }
        complianceItems = complianceItemsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
