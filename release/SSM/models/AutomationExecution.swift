// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Detailed information about the current state of an individual Automation execution.</p>
public struct AutomationExecution: Equatable {
    /// <p>The ID of a State Manager association used in the Automation operation.</p>
    public let associationId: String?
    /// <p>The execution ID.</p>
    public let automationExecutionId: String?
    /// <p>The execution status of the Automation.</p>
    public let automationExecutionStatus: AutomationExecutionStatus?
    /// <p>The subtype of the Automation operation. Currently, the only supported value is
    ///     <code>ChangeRequest</code>.</p>
    public let automationSubtype: AutomationSubtype?
    /// <p>The name of the Change Manager change request.</p>
    public let changeRequestName: String?
    /// <p>The action of the step that is currently running.</p>
    public let currentAction: String?
    /// <p>The name of the step that is currently running.</p>
    public let currentStepName: String?
    /// <p>The name of the Automation document used during the execution.</p>
    public let documentName: String?
    /// <p>The version of the document to use during execution.</p>
    public let documentVersion: String?
    /// <p>The Amazon Resource Name (ARN) of the user who ran the automation.</p>
    public let executedBy: String?
    /// <p>The time the execution finished.</p>
    public let executionEndTime: Date?
    /// <p>The time the execution started.</p>
    public let executionStartTime: Date?
    /// <p>A message describing why an execution has failed, if the status is set to Failed.</p>
    public let failureMessage: String?
    /// <p>The MaxConcurrency value specified by the user when the execution started.</p>
    public let maxConcurrency: String?
    /// <p>The MaxErrors value specified by the user when the execution started.</p>
    public let maxErrors: String?
    /// <p>The automation execution mode.</p>
    public let mode: ExecutionMode?
    /// <p>The ID of an OpsItem that is created to represent a Change Manager change request.</p>
    public let opsItemId: String?
    /// <p>The list of execution outputs as defined in the automation document.</p>
    public let outputs: [String:[String]]?
    /// <p>The key-value map of execution parameters, which were supplied when calling
    ///    StartAutomationExecution.</p>
    public let parameters: [String:[String]]?
    /// <p>The AutomationExecutionId of the parent automation.</p>
    public let parentAutomationExecutionId: String?
    /// <p>An aggregate of step execution statuses displayed in the AWS Console for a multi-Region and
    ///    multi-account Automation execution.</p>
    public let progressCounters: ProgressCounters?
    /// <p>A list of resolved targets in the rate control execution.</p>
    public let resolvedTargets: ResolvedTargets?
    /// <p>Information about the Automation runbooks (Automation documents) that are run as part of a
    ///    runbook workflow.</p>
    ///          <note>
    ///             <p>The Automation runbooks specified for the runbook workflow can't run until all required
    ///     approvals for the change request have been received.</p>
    ///          </note>
    public let runbooks: [Runbook]?
    /// <p>The date and time the Automation operation is scheduled to start.</p>
    public let scheduledTime: Date?
    /// <p>A list of details about the current state of all steps that comprise an execution. An
    ///    Automation document contains a list of steps that are run in order.</p>
    public let stepExecutions: [StepExecution]?
    /// <p>A boolean value that indicates if the response contains the full list of the Automation step
    ///    executions. If true, use the DescribeAutomationStepExecutions API action to get the full list of
    ///    step executions.</p>
    public let stepExecutionsTruncated: Bool
    /// <p>The target of the execution.</p>
    public let target: String?
    /// <p>The combination of AWS Regions and/or AWS accounts where you want to run the
    ///    Automation.</p>
    public let targetLocations: [TargetLocation]?
    /// <p>The specified key-value mapping of document parameters to target resources.</p>
    public let targetMaps: [[String:[String]]]?
    /// <p>The parameter name.</p>
    public let targetParameterName: String?
    /// <p>The specified targets.</p>
    public let targets: [Target]?

    public init (
        associationId: String? = nil,
        automationExecutionId: String? = nil,
        automationExecutionStatus: AutomationExecutionStatus? = nil,
        automationSubtype: AutomationSubtype? = nil,
        changeRequestName: String? = nil,
        currentAction: String? = nil,
        currentStepName: String? = nil,
        documentName: String? = nil,
        documentVersion: String? = nil,
        executedBy: String? = nil,
        executionEndTime: Date? = nil,
        executionStartTime: Date? = nil,
        failureMessage: String? = nil,
        maxConcurrency: String? = nil,
        maxErrors: String? = nil,
        mode: ExecutionMode? = nil,
        opsItemId: String? = nil,
        outputs: [String:[String]]? = nil,
        parameters: [String:[String]]? = nil,
        parentAutomationExecutionId: String? = nil,
        progressCounters: ProgressCounters? = nil,
        resolvedTargets: ResolvedTargets? = nil,
        runbooks: [Runbook]? = nil,
        scheduledTime: Date? = nil,
        stepExecutions: [StepExecution]? = nil,
        stepExecutionsTruncated: Bool = false,
        target: String? = nil,
        targetLocations: [TargetLocation]? = nil,
        targetMaps: [[String:[String]]]? = nil,
        targetParameterName: String? = nil,
        targets: [Target]? = nil
    )
    {
        self.associationId = associationId
        self.automationExecutionId = automationExecutionId
        self.automationExecutionStatus = automationExecutionStatus
        self.automationSubtype = automationSubtype
        self.changeRequestName = changeRequestName
        self.currentAction = currentAction
        self.currentStepName = currentStepName
        self.documentName = documentName
        self.documentVersion = documentVersion
        self.executedBy = executedBy
        self.executionEndTime = executionEndTime
        self.executionStartTime = executionStartTime
        self.failureMessage = failureMessage
        self.maxConcurrency = maxConcurrency
        self.maxErrors = maxErrors
        self.mode = mode
        self.opsItemId = opsItemId
        self.outputs = outputs
        self.parameters = parameters
        self.parentAutomationExecutionId = parentAutomationExecutionId
        self.progressCounters = progressCounters
        self.resolvedTargets = resolvedTargets
        self.runbooks = runbooks
        self.scheduledTime = scheduledTime
        self.stepExecutions = stepExecutions
        self.stepExecutionsTruncated = stepExecutionsTruncated
        self.target = target
        self.targetLocations = targetLocations
        self.targetMaps = targetMaps
        self.targetParameterName = targetParameterName
        self.targets = targets
    }
}

extension AutomationExecution: CustomDebugStringConvertible {
    public var debugDescription: String {
        "AutomationExecution(associationId: \(String(describing: associationId)), automationExecutionId: \(String(describing: automationExecutionId)), automationExecutionStatus: \(String(describing: automationExecutionStatus)), automationSubtype: \(String(describing: automationSubtype)), changeRequestName: \(String(describing: changeRequestName)), currentAction: \(String(describing: currentAction)), currentStepName: \(String(describing: currentStepName)), documentName: \(String(describing: documentName)), documentVersion: \(String(describing: documentVersion)), executedBy: \(String(describing: executedBy)), executionEndTime: \(String(describing: executionEndTime)), executionStartTime: \(String(describing: executionStartTime)), failureMessage: \(String(describing: failureMessage)), maxConcurrency: \(String(describing: maxConcurrency)), maxErrors: \(String(describing: maxErrors)), mode: \(String(describing: mode)), opsItemId: \(String(describing: opsItemId)), outputs: \(String(describing: outputs)), parameters: \(String(describing: parameters)), parentAutomationExecutionId: \(String(describing: parentAutomationExecutionId)), progressCounters: \(String(describing: progressCounters)), resolvedTargets: \(String(describing: resolvedTargets)), runbooks: \(String(describing: runbooks)), scheduledTime: \(String(describing: scheduledTime)), stepExecutions: \(String(describing: stepExecutions)), stepExecutionsTruncated: \(String(describing: stepExecutionsTruncated)), target: \(String(describing: target)), targetLocations: \(String(describing: targetLocations)), targetMaps: \(String(describing: targetMaps)), targetParameterName: \(String(describing: targetParameterName)), targets: \(String(describing: targets)))"}
}
