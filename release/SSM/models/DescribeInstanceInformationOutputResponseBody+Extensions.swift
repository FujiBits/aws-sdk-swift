// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeInstanceInformationOutputResponseBody: Equatable {
    public let instanceInformationList: [InstanceInformation]?
    public let nextToken: String?
}

extension DescribeInstanceInformationOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case instanceInformationList = "InstanceInformationList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let instanceInformationListContainer = try containerValues.decodeIfPresent([InstanceInformation?].self, forKey: .instanceInformationList)
        var instanceInformationListDecoded0:[InstanceInformation]? = nil
        if let instanceInformationListContainer = instanceInformationListContainer {
            instanceInformationListDecoded0 = [InstanceInformation]()
            for structure0 in instanceInformationListContainer {
                if let structure0 = structure0 {
                    instanceInformationListDecoded0?.append(structure0)
                }
            }
        }
        instanceInformationList = instanceInformationListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
