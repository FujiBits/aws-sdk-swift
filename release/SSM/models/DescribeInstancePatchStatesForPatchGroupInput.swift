// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct DescribeInstancePatchStatesForPatchGroupInput: Equatable {
    /// <p>Each entry in the array is a structure containing:</p>
    ///          <p>Key (string between 1 and 200 characters)</p>
    ///          <p> Values (array containing a single string)</p>
    ///          <p> Type (string "Equal", "NotEqual", "LessThan", "GreaterThan")</p>
    public let filters: [InstancePatchStateFilter]?
    /// <p>The maximum number of patches to return (per page).</p>
    public let maxResults: Int
    /// <p>The token for the next set of items to return. (You received this token from a previous
    ///    call.)</p>
    public let nextToken: String?
    /// <p>The name of the patch group for which the patch state information should be
    ///    retrieved.</p>
    public let patchGroup: String?

    public init (
        filters: [InstancePatchStateFilter]? = nil,
        maxResults: Int = 0,
        nextToken: String? = nil,
        patchGroup: String? = nil
    )
    {
        self.filters = filters
        self.maxResults = maxResults
        self.nextToken = nextToken
        self.patchGroup = patchGroup
    }
}

extension DescribeInstancePatchStatesForPatchGroupInput: CustomDebugStringConvertible {
    public var debugDescription: String {
        "DescribeInstancePatchStatesForPatchGroupInput(filters: \(String(describing: filters)), maxResults: \(String(describing: maxResults)), nextToken: \(String(describing: nextToken)), patchGroup: \(String(describing: patchGroup)))"}
}
