// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdatePatchBaselineOutputResponse: HttpResponseBinding {
    public init (httpResponse: HttpResponse, decoder: ResponseDecoder? = nil) throws {
        if case .data(let data) = httpResponse.body,
            let unwrappedData = data,
            let responseDecoder = decoder {
            let output: UpdatePatchBaselineOutputResponseBody = try responseDecoder.decode(responseBody: unwrappedData)
            self.approvalRules = output.approvalRules
            self.approvedPatches = output.approvedPatches
            self.approvedPatchesComplianceLevel = output.approvedPatchesComplianceLevel
            self.approvedPatchesEnableNonSecurity = output.approvedPatchesEnableNonSecurity
            self.baselineId = output.baselineId
            self.createdDate = output.createdDate
            self.description = output.description
            self.globalFilters = output.globalFilters
            self.modifiedDate = output.modifiedDate
            self.name = output.name
            self.operatingSystem = output.operatingSystem
            self.rejectedPatches = output.rejectedPatches
            self.rejectedPatchesAction = output.rejectedPatchesAction
            self.sources = output.sources
        } else {
            self.approvalRules = nil
            self.approvedPatches = nil
            self.approvedPatchesComplianceLevel = nil
            self.approvedPatchesEnableNonSecurity = false
            self.baselineId = nil
            self.createdDate = nil
            self.description = nil
            self.globalFilters = nil
            self.modifiedDate = nil
            self.name = nil
            self.operatingSystem = nil
            self.rejectedPatches = nil
            self.rejectedPatchesAction = nil
            self.sources = nil
        }
    }
}
