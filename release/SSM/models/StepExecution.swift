// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Detailed information about an the execution state of an Automation step.</p>
public struct StepExecution: Equatable {
    /// <p>The action this step performs. The action determines the behavior of the step.</p>
    public let action: String?
    /// <p>If a step has finished execution, this contains the time the execution ended. If the step
    ///    has not yet concluded, this field is not populated.</p>
    public let executionEndTime: Date?
    /// <p>If a step has begun execution, this contains the time the step started. If the step is in
    ///    Pending status, this field is not populated.</p>
    public let executionStartTime: Date?
    /// <p>Information about the Automation failure.</p>
    public let failureDetails: FailureDetails?
    /// <p>If a step failed, this message explains why the execution failed.</p>
    public let failureMessage: String?
    /// <p>Fully-resolved values passed into the step before execution.</p>
    public let inputs: [String:String]?
    /// <p>The flag which can be used to help decide whether the failure of current step leads to the
    ///    Automation failure.</p>
    public let isCritical: Bool
    /// <p>The flag which can be used to end automation no matter whether the step succeeds or
    ///    fails.</p>
    public let isEnd: Bool
    /// <p>The maximum number of tries to run the action of the step. The default value is 1.</p>
    public let maxAttempts: Int
    /// <p>The next step after the step succeeds.</p>
    public let nextStep: String?
    /// <p>The action to take if the step fails. The default value is Abort.</p>
    public let onFailure: String?
    /// <p>Returned values from the execution of the step.</p>
    public let outputs: [String:[String]]?
    /// <p>A user-specified list of parameters to override when running a step.</p>
    public let overriddenParameters: [String:[String]]?
    /// <p>A message associated with the response code for an execution.</p>
    public let response: String?
    /// <p>The response code returned by the execution of the step.</p>
    public let responseCode: String?
    /// <p>The unique ID of a step execution.</p>
    public let stepExecutionId: String?
    /// <p>The name of this execution step.</p>
    public let stepName: String?
    /// <p>The execution status for this step.</p>
    public let stepStatus: AutomationExecutionStatus?
    /// <p>The combination of AWS Regions and accounts targeted by the current Automation
    ///    execution.</p>
    public let targetLocation: TargetLocation?
    /// <p>The targets for the step execution.</p>
    public let targets: [Target]?
    /// <p>The timeout seconds of the step.</p>
    public let timeoutSeconds: Int
    /// <p>Strategies used when step fails, we support Continue and Abort. Abort will fail the
    ///    automation when the step fails. Continue will ignore the failure of current step and allow
    ///    automation to run the next step. With conditional branching, we add step:stepName to support the
    ///    automation to go to another specific step.</p>
    public let validNextSteps: [String]?

    public init (
        action: String? = nil,
        executionEndTime: Date? = nil,
        executionStartTime: Date? = nil,
        failureDetails: FailureDetails? = nil,
        failureMessage: String? = nil,
        inputs: [String:String]? = nil,
        isCritical: Bool = false,
        isEnd: Bool = false,
        maxAttempts: Int = 0,
        nextStep: String? = nil,
        onFailure: String? = nil,
        outputs: [String:[String]]? = nil,
        overriddenParameters: [String:[String]]? = nil,
        response: String? = nil,
        responseCode: String? = nil,
        stepExecutionId: String? = nil,
        stepName: String? = nil,
        stepStatus: AutomationExecutionStatus? = nil,
        targetLocation: TargetLocation? = nil,
        targets: [Target]? = nil,
        timeoutSeconds: Int = 0,
        validNextSteps: [String]? = nil
    )
    {
        self.action = action
        self.executionEndTime = executionEndTime
        self.executionStartTime = executionStartTime
        self.failureDetails = failureDetails
        self.failureMessage = failureMessage
        self.inputs = inputs
        self.isCritical = isCritical
        self.isEnd = isEnd
        self.maxAttempts = maxAttempts
        self.nextStep = nextStep
        self.onFailure = onFailure
        self.outputs = outputs
        self.overriddenParameters = overriddenParameters
        self.response = response
        self.responseCode = responseCode
        self.stepExecutionId = stepExecutionId
        self.stepName = stepName
        self.stepStatus = stepStatus
        self.targetLocation = targetLocation
        self.targets = targets
        self.timeoutSeconds = timeoutSeconds
        self.validNextSteps = validNextSteps
    }
}

extension StepExecution: CustomDebugStringConvertible {
    public var debugDescription: String {
        "StepExecution(action: \(String(describing: action)), executionEndTime: \(String(describing: executionEndTime)), executionStartTime: \(String(describing: executionStartTime)), failureDetails: \(String(describing: failureDetails)), failureMessage: \(String(describing: failureMessage)), inputs: \(String(describing: inputs)), isCritical: \(String(describing: isCritical)), isEnd: \(String(describing: isEnd)), maxAttempts: \(String(describing: maxAttempts)), nextStep: \(String(describing: nextStep)), onFailure: \(String(describing: onFailure)), outputs: \(String(describing: outputs)), overriddenParameters: \(String(describing: overriddenParameters)), response: \(String(describing: response)), responseCode: \(String(describing: responseCode)), stepExecutionId: \(String(describing: stepExecutionId)), stepName: \(String(describing: stepName)), stepStatus: \(String(describing: stepStatus)), targetLocation: \(String(describing: targetLocation)), targets: \(String(describing: targets)), timeoutSeconds: \(String(describing: timeoutSeconds)), validNextSteps: \(String(describing: validNextSteps)))"}
}
