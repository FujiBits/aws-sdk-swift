// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GetMaintenanceWindowTaskOutputResponse: HttpResponseBinding {
    public init (httpResponse: HttpResponse, decoder: ResponseDecoder? = nil) throws {
        if case .data(let data) = httpResponse.body,
            let unwrappedData = data,
            let responseDecoder = decoder {
            let output: GetMaintenanceWindowTaskOutputResponseBody = try responseDecoder.decode(responseBody: unwrappedData)
            self.description = output.description
            self.loggingInfo = output.loggingInfo
            self.maxConcurrency = output.maxConcurrency
            self.maxErrors = output.maxErrors
            self.name = output.name
            self.priority = output.priority
            self.serviceRoleArn = output.serviceRoleArn
            self.targets = output.targets
            self.taskArn = output.taskArn
            self.taskInvocationParameters = output.taskInvocationParameters
            self.taskParameters = output.taskParameters
            self.taskType = output.taskType
            self.windowId = output.windowId
            self.windowTaskId = output.windowTaskId
        } else {
            self.description = nil
            self.loggingInfo = nil
            self.maxConcurrency = nil
            self.maxErrors = nil
            self.name = nil
            self.priority = 0
            self.serviceRoleArn = nil
            self.targets = nil
            self.taskArn = nil
            self.taskInvocationParameters = nil
            self.taskParameters = nil
            self.taskType = nil
            self.windowId = nil
            self.windowTaskId = nil
        }
    }
}
