// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateMaintenanceWindowInputBody: Equatable {
    public let name: String?
    public let description: String?
    public let startDate: String?
    public let endDate: String?
    public let schedule: String?
    public let scheduleTimezone: String?
    public let scheduleOffset: Int
    public let duration: Int
    public let cutoff: Int
    public let allowUnassociatedTargets: Bool
    public let clientToken: String?
    public let tags: [Tag]?
}

extension CreateMaintenanceWindowInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case allowUnassociatedTargets = "AllowUnassociatedTargets"
        case clientToken = "ClientToken"
        case cutoff = "Cutoff"
        case description = "Description"
        case duration = "Duration"
        case endDate = "EndDate"
        case name = "Name"
        case schedule = "Schedule"
        case scheduleOffset = "ScheduleOffset"
        case scheduleTimezone = "ScheduleTimezone"
        case startDate = "StartDate"
        case tags = "Tags"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .description)
        description = descriptionDecoded
        let startDateDecoded = try containerValues.decodeIfPresent(String.self, forKey: .startDate)
        startDate = startDateDecoded
        let endDateDecoded = try containerValues.decodeIfPresent(String.self, forKey: .endDate)
        endDate = endDateDecoded
        let scheduleDecoded = try containerValues.decodeIfPresent(String.self, forKey: .schedule)
        schedule = scheduleDecoded
        let scheduleTimezoneDecoded = try containerValues.decodeIfPresent(String.self, forKey: .scheduleTimezone)
        scheduleTimezone = scheduleTimezoneDecoded
        let scheduleOffsetDecoded = try containerValues.decode(Int.self, forKey: .scheduleOffset)
        scheduleOffset = scheduleOffsetDecoded
        let durationDecoded = try containerValues.decode(Int.self, forKey: .duration)
        duration = durationDecoded
        let cutoffDecoded = try containerValues.decode(Int.self, forKey: .cutoff)
        cutoff = cutoffDecoded
        let allowUnassociatedTargetsDecoded = try containerValues.decode(Bool.self, forKey: .allowUnassociatedTargets)
        allowUnassociatedTargets = allowUnassociatedTargetsDecoded
        let clientTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .clientToken)
        clientToken = clientTokenDecoded
        let tagsContainer = try containerValues.decodeIfPresent([Tag?].self, forKey: .tags)
        var tagsDecoded0:[Tag]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [Tag]()
            for structure0 in tagsContainer {
                if let structure0 = structure0 {
                    tagsDecoded0?.append(structure0)
                }
            }
        }
        tags = tagsDecoded0
    }
}
