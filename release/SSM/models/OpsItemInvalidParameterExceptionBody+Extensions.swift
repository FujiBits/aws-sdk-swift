// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct OpsItemInvalidParameterExceptionBody: Equatable {
    public let parameterNames: [String]?
    public let message: String?
}

extension OpsItemInvalidParameterExceptionBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case message = "Message"
        case parameterNames = "ParameterNames"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let parameterNamesContainer = try containerValues.decodeIfPresent([String?].self, forKey: .parameterNames)
        var parameterNamesDecoded0:[String]? = nil
        if let parameterNamesContainer = parameterNamesContainer {
            parameterNamesDecoded0 = [String]()
            for string0 in parameterNamesContainer {
                if let string0 = string0 {
                    parameterNamesDecoded0?.append(string0)
                }
            }
        }
        parameterNames = parameterNamesDecoded0
        let messageDecoded = try containerValues.decodeIfPresent(String.self, forKey: .message)
        message = messageDecoded
    }
}
