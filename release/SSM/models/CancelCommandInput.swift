// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p></p>
public struct CancelCommandInput: Equatable {
    /// <p>The ID of the command you want to cancel.</p>
    public let commandId: String?
    /// <p>(Optional) A list of instance IDs on which you want to cancel the command. If not provided,
    ///    the command is canceled on every instance on which it was requested.</p>
    public let instanceIds: [String]?

    public init (
        commandId: String? = nil,
        instanceIds: [String]? = nil
    )
    {
        self.commandId = commandId
        self.instanceIds = instanceIds
    }
}

extension CancelCommandInput: CustomDebugStringConvertible {
    public var debugDescription: String {
        "CancelCommandInput(commandId: \(String(describing: commandId)), instanceIds: \(String(describing: instanceIds)))"}
}
