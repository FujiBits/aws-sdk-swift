// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ModifyDocumentPermissionInputBody: Equatable {
    public let name: String?
    public let permissionType: DocumentPermissionType?
    public let accountIdsToAdd: [String]?
    public let accountIdsToRemove: [String]?
    public let sharedDocumentVersion: String?
}

extension ModifyDocumentPermissionInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case accountIdsToAdd = "AccountIdsToAdd"
        case accountIdsToRemove = "AccountIdsToRemove"
        case name = "Name"
        case permissionType = "PermissionType"
        case sharedDocumentVersion = "SharedDocumentVersion"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let permissionTypeDecoded = try containerValues.decodeIfPresent(DocumentPermissionType.self, forKey: .permissionType)
        permissionType = permissionTypeDecoded
        let accountIdsToAddContainer = try containerValues.decodeIfPresent([String?].self, forKey: .accountIdsToAdd)
        var accountIdsToAddDecoded0:[String]? = nil
        if let accountIdsToAddContainer = accountIdsToAddContainer {
            accountIdsToAddDecoded0 = [String]()
            for string0 in accountIdsToAddContainer {
                if let string0 = string0 {
                    accountIdsToAddDecoded0?.append(string0)
                }
            }
        }
        accountIdsToAdd = accountIdsToAddDecoded0
        let accountIdsToRemoveContainer = try containerValues.decodeIfPresent([String?].self, forKey: .accountIdsToRemove)
        var accountIdsToRemoveDecoded0:[String]? = nil
        if let accountIdsToRemoveContainer = accountIdsToRemoveContainer {
            accountIdsToRemoveDecoded0 = [String]()
            for string0 in accountIdsToRemoveContainer {
                if let string0 = string0 {
                    accountIdsToRemoveDecoded0?.append(string0)
                }
            }
        }
        accountIdsToRemove = accountIdsToRemoveDecoded0
        let sharedDocumentVersionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .sharedDocumentVersion)
        sharedDocumentVersion = sharedDocumentVersionDecoded
    }
}
