// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FailedCreateAssociation: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case entry = "Entry"
        case fault = "Fault"
        case message = "Message"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let entry = entry {
            try encodeContainer.encode(entry, forKey: .entry)
        }
        if let fault = fault {
            try encodeContainer.encode(fault.rawValue, forKey: .fault)
        }
        if let message = message {
            try encodeContainer.encode(message, forKey: .message)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let entryDecoded = try containerValues.decodeIfPresent(CreateAssociationBatchRequestEntry.self, forKey: .entry)
        entry = entryDecoded
        let messageDecoded = try containerValues.decodeIfPresent(String.self, forKey: .message)
        message = messageDecoded
        let faultDecoded = try containerValues.decodeIfPresent(Fault.self, forKey: .fault)
        fault = faultDecoded
    }
}
