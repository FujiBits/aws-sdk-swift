// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct DescribeAutomationStepExecutionsInput: Equatable {
    /// <p>The Automation execution ID for which you want step execution descriptions.</p>
    public let automationExecutionId: String?
    /// <p>One or more filters to limit the number of step executions returned by the request.</p>
    public let filters: [StepExecutionFilter]?
    /// <p>The maximum number of items to return for this call. The call also returns a token that you
    ///    can specify in a subsequent call to get the next set of results.</p>
    public let maxResults: Int
    /// <p>The token for the next set of items to return. (You received this token from a previous
    ///    call.)</p>
    public let nextToken: String?
    /// <p>Indicates whether to list step executions in reverse order by start time. The default value
    ///    is 'false'.</p>
    public let reverseOrder: Bool

    public init (
        automationExecutionId: String? = nil,
        filters: [StepExecutionFilter]? = nil,
        maxResults: Int = 0,
        nextToken: String? = nil,
        reverseOrder: Bool = false
    )
    {
        self.automationExecutionId = automationExecutionId
        self.filters = filters
        self.maxResults = maxResults
        self.nextToken = nextToken
        self.reverseOrder = reverseOrder
    }
}

extension DescribeAutomationStepExecutionsInput: CustomDebugStringConvertible {
    public var debugDescription: String {
        "DescribeAutomationStepExecutionsInput(automationExecutionId: \(String(describing: automationExecutionId)), filters: \(String(describing: filters)), maxResults: \(String(describing: maxResults)), nextToken: \(String(describing: nextToken)), reverseOrder: \(String(describing: reverseOrder)))"}
}
