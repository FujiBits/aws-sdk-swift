// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The data type name for including resource data sync state. There are four sync
///    states:</p>
///          <p>
///             <code>OrganizationNotExists</code> (Your organization doesn't exist)</p>
///          <p>
///             <code>NoPermissions</code> (The system can't locate the service-linked role. This role is
///    automatically created when a user creates a resource data sync in Explorer.)</p>
///          <p>
///             <code>InvalidOrganizationalUnit</code> (You specified or selected an invalid unit in the
///    resource data sync configuration.)</p>
///          <p>
///             <code>TrustedAccessDisabled</code> (You disabled Systems Manager access in the organization in
///    AWS Organizations.)</p>
public struct ResourceDataSyncSourceWithState: Equatable {
    /// <p>The field name in <code>SyncSource</code> for the
    ///     <code>ResourceDataSyncAwsOrganizationsSource</code> type.</p>
    public let awsOrganizationsSource: ResourceDataSyncAwsOrganizationsSource?
    /// <p>When you create a resource data sync, if you choose one of the AWS Organizations options, then Systems Manager
    ///    automatically enables all OpsData sources in the selected AWS Regions for all AWS accounts in
    ///    your organization (or in the selected organization units). For more information, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/Explorer-resouce-data-sync-multiple-accounts-and-regions.html">About multiple account and Region resource data syncs</a> in the
    ///     <i>AWS Systems Manager User Guide</i>.</p>
    public let enableAllOpsDataSources: Bool
    /// <p>Whether to automatically synchronize and aggregate data from new AWS Regions when those
    ///    Regions come online.</p>
    public let includeFutureRegions: Bool
    /// <p>The <code>SyncSource</code> AWS Regions included in the resource data sync.</p>
    public let sourceRegions: [String]?
    /// <p>The type of data source for the resource data sync. <code>SourceType</code> is either
    ///     <code>AwsOrganizations</code> (if an organization is present in AWS Organizations) or
    ///     <code>singleAccountMultiRegions</code>.</p>
    public let sourceType: String?
    /// <p>The data type name for including resource data sync state. There are four sync
    ///    states:</p>
    ///          <p>
    ///             <code>OrganizationNotExists</code>: Your organization doesn't exist.</p>
    ///          <p>
    ///             <code>NoPermissions</code>: The system can't locate the service-linked role. This role is
    ///    automatically created when a user creates a resource data sync in Explorer.</p>
    ///          <p>
    ///             <code>InvalidOrganizationalUnit</code>: You specified or selected an invalid unit in the
    ///    resource data sync configuration.</p>
    ///          <p>
    ///             <code>TrustedAccessDisabled</code>: You disabled Systems Manager access in the organization in
    ///    AWS Organizations.</p>
    public let state: String?

    public init (
        awsOrganizationsSource: ResourceDataSyncAwsOrganizationsSource? = nil,
        enableAllOpsDataSources: Bool = false,
        includeFutureRegions: Bool = false,
        sourceRegions: [String]? = nil,
        sourceType: String? = nil,
        state: String? = nil
    )
    {
        self.awsOrganizationsSource = awsOrganizationsSource
        self.enableAllOpsDataSources = enableAllOpsDataSources
        self.includeFutureRegions = includeFutureRegions
        self.sourceRegions = sourceRegions
        self.sourceType = sourceType
        self.state = state
    }
}

extension ResourceDataSyncSourceWithState: CustomDebugStringConvertible {
    public var debugDescription: String {
        "ResourceDataSyncSourceWithState(awsOrganizationsSource: \(String(describing: awsOrganizationsSource)), enableAllOpsDataSources: \(String(describing: enableAllOpsDataSources)), includeFutureRegions: \(String(describing: includeFutureRegions)), sourceRegions: \(String(describing: sourceRegions)), sourceType: \(String(describing: sourceType)), state: \(String(describing: state)))"}
}
