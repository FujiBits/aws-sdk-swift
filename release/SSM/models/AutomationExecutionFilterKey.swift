// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum AutomationExecutionFilterKey {
    case automationSubtype
    case automationType
    case currentAction
    case documentNamePrefix
    case executionId
    case executionStatus
    case opsItemId
    case parentExecutionId
    case startTimeAfter
    case startTimeBefore
    case tagKey
    case targetResourceGroup
    case sdkUnknown(String)
}

extension AutomationExecutionFilterKey : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [AutomationExecutionFilterKey] {
        return [
            .automationSubtype,
            .automationType,
            .currentAction,
            .documentNamePrefix,
            .executionId,
            .executionStatus,
            .opsItemId,
            .parentExecutionId,
            .startTimeAfter,
            .startTimeBefore,
            .tagKey,
            .targetResourceGroup,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .automationSubtype: return "AutomationSubtype"
        case .automationType: return "AutomationType"
        case .currentAction: return "CurrentAction"
        case .documentNamePrefix: return "DocumentNamePrefix"
        case .executionId: return "ExecutionId"
        case .executionStatus: return "ExecutionStatus"
        case .opsItemId: return "OpsItemId"
        case .parentExecutionId: return "ParentExecutionId"
        case .startTimeAfter: return "StartTimeAfter"
        case .startTimeBefore: return "StartTimeBefore"
        case .tagKey: return "TagKey"
        case .targetResourceGroup: return "TargetResourceGroup"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = AutomationExecutionFilterKey(rawValue: rawValue) ?? AutomationExecutionFilterKey.sdkUnknown(rawValue)
    }
}
