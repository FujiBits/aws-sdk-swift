// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeAutomationStepExecutionsInputBody: Equatable {
    public let automationExecutionId: String?
    public let filters: [StepExecutionFilter]?
    public let nextToken: String?
    public let maxResults: Int
    public let reverseOrder: Bool
}

extension DescribeAutomationStepExecutionsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case automationExecutionId = "AutomationExecutionId"
        case filters = "Filters"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case reverseOrder = "ReverseOrder"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let automationExecutionIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .automationExecutionId)
        automationExecutionId = automationExecutionIdDecoded
        let filtersContainer = try containerValues.decodeIfPresent([StepExecutionFilter?].self, forKey: .filters)
        var filtersDecoded0:[StepExecutionFilter]? = nil
        if let filtersContainer = filtersContainer {
            filtersDecoded0 = [StepExecutionFilter]()
            for structure0 in filtersContainer {
                if let structure0 = structure0 {
                    filtersDecoded0?.append(structure0)
                }
            }
        }
        filters = filtersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decode(Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let reverseOrderDecoded = try containerValues.decode(Bool.self, forKey: .reverseOrder)
        reverseOrder = reverseOrderDecoded
    }
}
