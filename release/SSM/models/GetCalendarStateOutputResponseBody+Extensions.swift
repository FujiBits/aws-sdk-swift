// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetCalendarStateOutputResponseBody: Equatable {
    public let state: CalendarState?
    public let atTime: String?
    public let nextTransitionTime: String?
}

extension GetCalendarStateOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case atTime = "AtTime"
        case nextTransitionTime = "NextTransitionTime"
        case state = "State"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let stateDecoded = try containerValues.decodeIfPresent(CalendarState.self, forKey: .state)
        state = stateDecoded
        let atTimeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .atTime)
        atTime = atTimeDecoded
        let nextTransitionTimeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextTransitionTime)
        nextTransitionTime = nextTransitionTimeDecoded
    }
}
