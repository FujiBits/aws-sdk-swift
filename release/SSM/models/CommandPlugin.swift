// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Describes plugin details.</p>
public struct CommandPlugin: Equatable {
    /// <p>The name of the plugin. Must be one of the following: aws:updateAgent, aws:domainjoin,
    ///    aws:applications, aws:runPowerShellScript, aws:psmodule, aws:cloudWatch, aws:runShellScript, or
    ///    aws:updateSSMAgent. </p>
    public let name: String?
    /// <p>Output of the plugin execution.</p>
    public let output: String?
    /// <p>The S3 bucket where the responses to the command executions should be stored. This was
    ///    requested when issuing the command. For example, in the following response:</p>
    ///          <p>doc-example-bucket/ab19cb99-a030-46dd-9dfc-8eSAMPLEPre-Fix/i-02573cafcfEXAMPLE/awsrunShellScript </p>
    ///          <p>doc-example-bucket is the name of the S3 bucket;</p>
    ///          <p>ab19cb99-a030-46dd-9dfc-8eSAMPLEPre-Fix is the name of the S3 prefix;</p>
    ///          <p>i-02573cafcfEXAMPLE is the instance ID;</p>
    ///          <p>awsrunShellScript is the name of the plugin.</p>
    public let outputS3BucketName: String?
    /// <p>The S3 directory path inside the bucket where the responses to the command executions should
    ///    be stored. This was requested when issuing the command. For example, in the following
    ///    response:</p>
    ///          <p>doc-example-bucket/ab19cb99-a030-46dd-9dfc-8eSAMPLEPre-Fix/i-02573cafcfEXAMPLE/awsrunShellScript </p>
    ///          <p>doc-example-bucket is the name of the S3 bucket;</p>
    ///          <p>ab19cb99-a030-46dd-9dfc-8eSAMPLEPre-Fix is the name of the S3 prefix;</p>
    ///          <p>i-02573cafcfEXAMPLE is the instance ID;</p>
    ///          <p>awsrunShellScript is the name of the plugin.</p>
    public let outputS3KeyPrefix: String?
    /// <p>(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager
    ///    automatically determines the S3 bucket region.</p>
    public let outputS3Region: String?
    /// <p>A numeric response code generated after running the plugin. </p>
    public let responseCode: Int
    /// <p>The time the plugin stopped running. Could stop prematurely if, for example, a cancel
    ///    command was sent. </p>
    public let responseFinishDateTime: Date?
    /// <p>The time the plugin started running. </p>
    public let responseStartDateTime: Date?
    /// <p>The URL for the complete text written by the plugin to stderr. If execution is not yet
    ///    complete, then this string is empty.</p>
    public let standardErrorUrl: String?
    /// <p>The URL for the complete text written by the plugin to stdout in Amazon S3. If the S3 bucket for
    ///    the command was not specified, then this string is empty.</p>
    public let standardOutputUrl: String?
    /// <p>The status of this plugin. You can run a document with multiple plugins.</p>
    public let status: CommandPluginStatus?
    /// <p>A detailed status of the plugin execution. StatusDetails includes more information than
    ///    Status because it includes states resulting from error and concurrency control parameters.
    ///    StatusDetails can show different results than Status. For more information about these statuses,
    ///    see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/monitor-commands.html">Understanding command statuses</a> in the <i>AWS Systems Manager User Guide</i>.
    ///    StatusDetails can be one of the following values:</p>
    ///          <ul>
    ///             <li>
    ///                <p>Pending: The command has not been sent to the instance.</p>
    ///             </li>
    ///             <li>
    ///                <p>In Progress: The command has been sent to the instance but has not reached a terminal
    ///      state.</p>
    ///             </li>
    ///             <li>
    ///                <p>Success: The execution of the command or plugin was successfully completed. This is a
    ///      terminal state.</p>
    ///             </li>
    ///             <li>
    ///                <p>Delivery Timed Out: The command was not delivered to the instance before the delivery
    ///      timeout expired. Delivery timeouts do not count against the parent command's MaxErrors limit,
    ///      but they do contribute to whether the parent command status is Success or Incomplete. This is a
    ///      terminal state.</p>
    ///             </li>
    ///             <li>
    ///                <p>Execution Timed Out: Command execution started on the instance, but the execution was not
    ///      complete before the execution timeout expired. Execution timeouts count against the MaxErrors
    ///      limit of the parent command. This is a terminal state.</p>
    ///             </li>
    ///             <li>
    ///                <p>Failed: The command was not successful on the instance. For a plugin, this indicates that
    ///      the result code was not zero. For a command invocation, this indicates that the result code for
    ///      one or more plugins was not zero. Invocation failures count against the MaxErrors limit of the
    ///      parent command. This is a terminal state.</p>
    ///             </li>
    ///             <li>
    ///                <p>Canceled: The command was terminated before it was completed. This is a terminal
    ///      state.</p>
    ///             </li>
    ///             <li>
    ///                <p>Undeliverable: The command can't be delivered to the instance. The instance might not
    ///      exist, or it might not be responding. Undeliverable invocations don't count against the parent
    ///      command's MaxErrors limit, and they don't contribute to whether the parent command status is
    ///      Success or Incomplete. This is a terminal state.</p>
    ///             </li>
    ///             <li>
    ///                <p>Terminated: The parent command exceeded its MaxErrors limit and subsequent command
    ///      invocations were canceled by the system. This is a terminal state.</p>
    ///             </li>
    ///          </ul>
    public let statusDetails: String?

    public init (
        name: String? = nil,
        output: String? = nil,
        outputS3BucketName: String? = nil,
        outputS3KeyPrefix: String? = nil,
        outputS3Region: String? = nil,
        responseCode: Int = 0,
        responseFinishDateTime: Date? = nil,
        responseStartDateTime: Date? = nil,
        standardErrorUrl: String? = nil,
        standardOutputUrl: String? = nil,
        status: CommandPluginStatus? = nil,
        statusDetails: String? = nil
    )
    {
        self.name = name
        self.output = output
        self.outputS3BucketName = outputS3BucketName
        self.outputS3KeyPrefix = outputS3KeyPrefix
        self.outputS3Region = outputS3Region
        self.responseCode = responseCode
        self.responseFinishDateTime = responseFinishDateTime
        self.responseStartDateTime = responseStartDateTime
        self.standardErrorUrl = standardErrorUrl
        self.standardOutputUrl = standardOutputUrl
        self.status = status
        self.statusDetails = statusDetails
    }
}

extension CommandPlugin: CustomDebugStringConvertible {
    public var debugDescription: String {
        "CommandPlugin(name: \(String(describing: name)), output: \(String(describing: output)), outputS3BucketName: \(String(describing: outputS3BucketName)), outputS3KeyPrefix: \(String(describing: outputS3KeyPrefix)), outputS3Region: \(String(describing: outputS3Region)), responseCode: \(String(describing: responseCode)), responseFinishDateTime: \(String(describing: responseFinishDateTime)), responseStartDateTime: \(String(describing: responseStartDateTime)), standardErrorUrl: \(String(describing: standardErrorUrl)), standardOutputUrl: \(String(describing: standardOutputUrl)), status: \(String(describing: status)), statusDetails: \(String(describing: statusDetails)))"}
}
