// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetInventoryOutputResponseBody: Equatable {
    public let entities: [InventoryResultEntity]?
    public let nextToken: String?
}

extension GetInventoryOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case entities = "Entities"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let entitiesContainer = try containerValues.decodeIfPresent([InventoryResultEntity?].self, forKey: .entities)
        var entitiesDecoded0:[InventoryResultEntity]? = nil
        if let entitiesContainer = entitiesContainer {
            entitiesDecoded0 = [InventoryResultEntity]()
            for structure0 in entitiesContainer {
                if let structure0 = structure0 {
                    entitiesDecoded0?.append(structure0)
                }
            }
        }
        entities = entitiesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
