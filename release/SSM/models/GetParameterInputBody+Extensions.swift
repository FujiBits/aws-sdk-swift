// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetParameterInputBody: Equatable {
    public let name: String?
    public let withDecryption: Bool
}

extension GetParameterInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case name = "Name"
        case withDecryption = "WithDecryption"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let withDecryptionDecoded = try containerValues.decode(Bool.self, forKey: .withDecryption)
        withDecryption = withDecryptionDecoded
    }
}
