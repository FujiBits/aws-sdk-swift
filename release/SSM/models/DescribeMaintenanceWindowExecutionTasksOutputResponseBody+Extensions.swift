// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeMaintenanceWindowExecutionTasksOutputResponseBody: Equatable {
    public let windowExecutionTaskIdentities: [MaintenanceWindowExecutionTaskIdentity]?
    public let nextToken: String?
}

extension DescribeMaintenanceWindowExecutionTasksOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case windowExecutionTaskIdentities = "WindowExecutionTaskIdentities"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let windowExecutionTaskIdentitiesContainer = try containerValues.decodeIfPresent([MaintenanceWindowExecutionTaskIdentity?].self, forKey: .windowExecutionTaskIdentities)
        var windowExecutionTaskIdentitiesDecoded0:[MaintenanceWindowExecutionTaskIdentity]? = nil
        if let windowExecutionTaskIdentitiesContainer = windowExecutionTaskIdentitiesContainer {
            windowExecutionTaskIdentitiesDecoded0 = [MaintenanceWindowExecutionTaskIdentity]()
            for structure0 in windowExecutionTaskIdentitiesContainer {
                if let structure0 = structure0 {
                    windowExecutionTaskIdentitiesDecoded0?.append(structure0)
                }
            }
        }
        windowExecutionTaskIdentities = windowExecutionTaskIdentitiesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
