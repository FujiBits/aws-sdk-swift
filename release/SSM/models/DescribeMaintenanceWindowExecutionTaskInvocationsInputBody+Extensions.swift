// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeMaintenanceWindowExecutionTaskInvocationsInputBody: Equatable {
    public let windowExecutionId: String?
    public let taskId: String?
    public let filters: [MaintenanceWindowFilter]?
    public let maxResults: Int
    public let nextToken: String?
}

extension DescribeMaintenanceWindowExecutionTaskInvocationsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case filters = "Filters"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case taskId = "TaskId"
        case windowExecutionId = "WindowExecutionId"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let windowExecutionIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .windowExecutionId)
        windowExecutionId = windowExecutionIdDecoded
        let taskIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .taskId)
        taskId = taskIdDecoded
        let filtersContainer = try containerValues.decodeIfPresent([MaintenanceWindowFilter?].self, forKey: .filters)
        var filtersDecoded0:[MaintenanceWindowFilter]? = nil
        if let filtersContainer = filtersContainer {
            filtersDecoded0 = [MaintenanceWindowFilter]()
            for structure0 in filtersContainer {
                if let structure0 = structure0 {
                    filtersDecoded0?.append(structure0)
                }
            }
        }
        filters = filtersDecoded0
        let maxResultsDecoded = try containerValues.decode(Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
