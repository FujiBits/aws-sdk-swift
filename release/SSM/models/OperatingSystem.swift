// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum OperatingSystem {
    case amazonlinux
    case amazonlinux2
    case centos
    case debian
    case macos
    case oraclelinux
    case redhatenterpriselinux
    case suse
    case ubuntu
    case windows
    case sdkUnknown(String)
}

extension OperatingSystem : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [OperatingSystem] {
        return [
            .amazonlinux,
            .amazonlinux2,
            .centos,
            .debian,
            .macos,
            .oraclelinux,
            .redhatenterpriselinux,
            .suse,
            .ubuntu,
            .windows,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .amazonlinux: return "AMAZON_LINUX"
        case .amazonlinux2: return "AMAZON_LINUX_2"
        case .centos: return "CENTOS"
        case .debian: return "DEBIAN"
        case .macos: return "MACOS"
        case .oraclelinux: return "ORACLE_LINUX"
        case .redhatenterpriselinux: return "REDHAT_ENTERPRISE_LINUX"
        case .suse: return "SUSE"
        case .ubuntu: return "UBUNTU"
        case .windows: return "WINDOWS"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = OperatingSystem(rawValue: rawValue) ?? OperatingSystem.sdkUnknown(rawValue)
    }
}
