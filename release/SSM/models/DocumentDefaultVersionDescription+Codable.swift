// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DocumentDefaultVersionDescription: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case defaultVersion = "DefaultVersion"
        case defaultVersionName = "DefaultVersionName"
        case name = "Name"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let defaultVersion = defaultVersion {
            try encodeContainer.encode(defaultVersion, forKey: .defaultVersion)
        }
        if let defaultVersionName = defaultVersionName {
            try encodeContainer.encode(defaultVersionName, forKey: .defaultVersionName)
        }
        if let name = name {
            try encodeContainer.encode(name, forKey: .name)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let defaultVersionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .defaultVersion)
        defaultVersion = defaultVersionDecoded
        let defaultVersionNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .defaultVersionName)
        defaultVersionName = defaultVersionNameDecoded
    }
}
