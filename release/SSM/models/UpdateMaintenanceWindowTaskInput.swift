// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateMaintenanceWindowTaskInput: Equatable {
    /// <p>The new task description to specify.</p>
    public let description: String?
    /// <p>The new logging location in Amazon S3 to specify.</p>
    ///          <note>
    ///             <p>
    ///                <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the
    ///       <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure.
    ///       For information about how Systems Manager handles these options for the supported maintenance
    ///       window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p>
    ///          </note>
    public let loggingInfo: LoggingInfo?
    /// <p>The new <code>MaxConcurrency</code> value you want to specify. <code>MaxConcurrency</code>
    ///    is the number of targets that are allowed to run this task in parallel.</p>
    ///          <note>
    ///             <p>For maintenance window tasks without a target specified, you cannot supply a value for this
    ///     option. Instead, the system inserts a placeholder value of <code>1</code>, which may be reported
    ///     in the response to this command. This value does not affect the running of your task and can be
    ///     ignored.</p>
    ///          </note>
    public let maxConcurrency: String?
    /// <p>The new <code>MaxErrors</code> value to specify. <code>MaxErrors</code> is the maximum
    ///    number of errors that are allowed before the task stops being scheduled.</p>
    ///          <note>
    ///             <p>For maintenance window tasks without a target specified, you cannot supply a value for this
    ///     option. Instead, the system inserts a placeholder value of <code>1</code>, which may be reported
    ///     in the response to this command. This value does not affect the running of your task and can be
    ///     ignored.</p>
    ///          </note>
    public let maxErrors: String?
    /// <p>The new task name to specify.</p>
    public let name: String?
    /// <p>The new task priority to specify. The lower the number, the higher the priority. Tasks that
    ///    have the same priority are scheduled in parallel.</p>
    public let priority: Int
    /// <p>If True, then all fields that are required by the RegisterTaskWithMaintenanceWindow action
    ///    are also required for this API request. Optional fields that are not specified are set to
    ///    null.</p>
    public let replace: Bool
    /// <p>The ARN of the IAM service role for Systems Manager to assume when running a
    ///   maintenance window task. If you do not specify a service role ARN, Systems Manager uses your account's
    ///   service-linked role.  If no service-linked role for Systems Manager exists in your account, it is created when you run
    ///   <code>RegisterTaskWithMaintenanceWindow</code>.</p>
    ///          <p>For more information, see the following topics in the in the <i>AWS Systems Manager User Guide</i>:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/using-service-linked-roles.html#slr-permissions">Using
    ///     service-linked roles for Systems Manager</a>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-maintenance-permissions.html#maintenance-window-tasks-service-role">Should I use a service-linked role or a custom service role to run maintenance window tasks?
    ///    </a>
    ///                </p>
    ///             </li>
    ///          </ul>
    public let serviceRoleArn: String?
    /// <p>The targets (either instances or tags) to modify. Instances are specified using
    ///    Key=instanceids,Values=instanceID_1,instanceID_2. Tags are specified using
    ///    Key=tag_name,Values=tag_value. </p>
    ///          <note>
    ///             <p>One or more targets must be specified for maintenance window Run Command-type tasks.
    ///     Depending on the task, targets are optional for other maintenance window task types (Automation,
    ///     AWS Lambda, and AWS Step Functions). For more information about running tasks that do not
    ///     specify targets, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/maintenance-windows-targetless-tasks.html">Registering
    ///      maintenance window tasks without targets</a> in the
    ///     <i>AWS Systems Manager User Guide</i>.</p>
    ///          </note>
    public let targets: [Target]?
    /// <p>The task ARN to modify.</p>
    public let taskArn: String?
    /// <p>The parameters that the task should use during execution. Populate only the fields that
    ///    match the task type. All other fields should be empty.</p>
    ///          <important>
    ///             <p>When you update a maintenance window task that has options specified in
    ///      <code>TaskInvocationParameters</code>, you must provide again all the
    ///      <code>TaskInvocationParameters</code> values that you want to retain. The values you do not
    ///     specify again are removed. For example, suppose that when you registered a Run Command task, you
    ///     specified <code>TaskInvocationParameters</code> values for <code>Comment</code>,
    ///      <code>NotificationConfig</code>, and <code>OutputS3BucketName</code>. If you update the
    ///     maintenance window task and specify only a different <code>OutputS3BucketName</code> value, the
    ///     values for <code>Comment</code> and <code>NotificationConfig</code> are removed.</p>
    ///          </important>
    public let taskInvocationParameters: MaintenanceWindowTaskInvocationParameters?
    /// <p>The parameters to modify.</p>
    ///          <note>
    ///             <p>
    ///                <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs,
    ///       instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information
    ///       about how Systems Manager handles these options for the supported maintenance window task
    ///       types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p>
    ///          </note>
    ///          <p>The map has the following format:</p>
    ///          <p>Key: string, between 1 and 255 characters</p>
    ///          <p>Value: an array of strings, each string is between 1 and 255 characters</p>
    public let taskParameters: [String:MaintenanceWindowTaskParameterValueExpression]?
    /// <p>The maintenance window ID that contains the task to modify.</p>
    public let windowId: String?
    /// <p>The task ID to modify.</p>
    public let windowTaskId: String?

    public init (
        description: String? = nil,
        loggingInfo: LoggingInfo? = nil,
        maxConcurrency: String? = nil,
        maxErrors: String? = nil,
        name: String? = nil,
        priority: Int = 0,
        replace: Bool = false,
        serviceRoleArn: String? = nil,
        targets: [Target]? = nil,
        taskArn: String? = nil,
        taskInvocationParameters: MaintenanceWindowTaskInvocationParameters? = nil,
        taskParameters: [String:MaintenanceWindowTaskParameterValueExpression]? = nil,
        windowId: String? = nil,
        windowTaskId: String? = nil
    )
    {
        self.description = description
        self.loggingInfo = loggingInfo
        self.maxConcurrency = maxConcurrency
        self.maxErrors = maxErrors
        self.name = name
        self.priority = priority
        self.replace = replace
        self.serviceRoleArn = serviceRoleArn
        self.targets = targets
        self.taskArn = taskArn
        self.taskInvocationParameters = taskInvocationParameters
        self.taskParameters = taskParameters
        self.windowId = windowId
        self.windowTaskId = windowTaskId
    }
}

extension UpdateMaintenanceWindowTaskInput: CustomDebugStringConvertible {
    public var debugDescription: String {
        "UpdateMaintenanceWindowTaskInput(description: \(String(describing: description)), loggingInfo: \(String(describing: loggingInfo)), maxConcurrency: \(String(describing: maxConcurrency)), maxErrors: \(String(describing: maxErrors)), name: \(String(describing: name)), priority: \(String(describing: priority)), replace: \(String(describing: replace)), serviceRoleArn: \(String(describing: serviceRoleArn)), targets: \(String(describing: targets)), taskArn: \(String(describing: taskArn)), taskInvocationParameters: \(String(describing: taskInvocationParameters)), taskParameters: \(String(describing: taskParameters)), windowId: \(String(describing: windowId)), windowTaskId: \(String(describing: windowTaskId)))"}
}
