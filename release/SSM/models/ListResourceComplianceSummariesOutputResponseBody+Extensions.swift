// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListResourceComplianceSummariesOutputResponseBody: Equatable {
    public let resourceComplianceSummaryItems: [ResourceComplianceSummaryItem]?
    public let nextToken: String?
}

extension ListResourceComplianceSummariesOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case resourceComplianceSummaryItems = "ResourceComplianceSummaryItems"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourceComplianceSummaryItemsContainer = try containerValues.decodeIfPresent([ResourceComplianceSummaryItem?].self, forKey: .resourceComplianceSummaryItems)
        var resourceComplianceSummaryItemsDecoded0:[ResourceComplianceSummaryItem]? = nil
        if let resourceComplianceSummaryItemsContainer = resourceComplianceSummaryItemsContainer {
            resourceComplianceSummaryItemsDecoded0 = [ResourceComplianceSummaryItem]()
            for structure0 in resourceComplianceSummaryItemsContainer {
                if let structure0 = structure0 {
                    resourceComplianceSummaryItemsDecoded0?.append(structure0)
                }
            }
        }
        resourceComplianceSummaryItems = resourceComplianceSummaryItemsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
