// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct CreateActivationInput: Equatable {
    /// <p>The name of the registered, managed instance as it will appear in the Systems Manager console or when
    ///    you use the AWS command line tools to list Systems Manager resources.</p>
    ///          <important>
    ///             <p>Do not enter personally identifiable information in this field.</p>
    ///          </important>
    public let defaultInstanceName: String?
    /// <p>A user-defined description of the resource that you want to register with Systems Manager. </p>
    ///          <important>
    ///             <p>Do not enter personally identifiable information in this field.</p>
    ///          </important>
    public let description: String?
    /// <p>The date by which this activation request should expire, in timestamp format, such as
    ///    "2021-07-07T00:00:00". You can specify a date up to 30 days in advance. If you don't provide an
    ///    expiration date, the activation code expires in 24 hours.</p>
    public let expirationDate: Date?
    /// <p>The Amazon Identity and Access Management (IAM) role that you want to assign to the managed
    ///    instance. This IAM role must provide AssumeRole permissions for the Systems Manager service principal
    ///     <code>ssm.amazonaws.com</code>. For more information, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-service-role.html">Create an IAM service role for a
    ///     hybrid environment</a> in the <i>AWS Systems Manager User Guide</i>.</p>
    public let iamRole: String?
    /// <p>Specify the maximum number of managed instances you want to register. The default value is 1
    ///    instance.</p>
    public let registrationLimit: Int
    /// <p>Optional metadata that you assign to a resource. Tags enable you to categorize a resource in
    ///    different ways, such as by purpose, owner, or environment. For example, you might want to tag an
    ///    activation to identify which servers or virtual machines (VMs) in your on-premises environment
    ///    you intend to activate. In this case, you could specify the following key name/value
    ///    pairs:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>Key=OS,Value=Windows</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>Key=Environment,Value=Production</code>
    ///                </p>
    ///             </li>
    ///          </ul>
    ///          <important>
    ///             <p>When you install SSM Agent on your on-premises servers and VMs, you specify an activation
    ///     ID and code. When you specify the activation ID and code, tags assigned to the activation are
    ///     automatically applied to the on-premises servers or VMs.</p>
    ///          </important>
    ///          <p>You can't add tags to or delete tags from an existing activation. You can tag your
    ///    on-premises servers and VMs after they connect to Systems Manager for the first time and are assigned a
    ///    managed instance ID. This means they are listed in the AWS Systems Manager console with an ID that is
    ///    prefixed with "mi-". For information about how to add tags to your managed instances, see <a>AddTagsToResource</a>. For information about how to remove tags from your managed
    ///    instances, see <a>RemoveTagsFromResource</a>.</p>
    public let tags: [Tag]?

    public init (
        defaultInstanceName: String? = nil,
        description: String? = nil,
        expirationDate: Date? = nil,
        iamRole: String? = nil,
        registrationLimit: Int = 0,
        tags: [Tag]? = nil
    )
    {
        self.defaultInstanceName = defaultInstanceName
        self.description = description
        self.expirationDate = expirationDate
        self.iamRole = iamRole
        self.registrationLimit = registrationLimit
        self.tags = tags
    }
}

extension CreateActivationInput: CustomDebugStringConvertible {
    public var debugDescription: String {
        "CreateActivationInput(defaultInstanceName: \(String(describing: defaultInstanceName)), description: \(String(describing: description)), expirationDate: \(String(describing: expirationDate)), iamRole: \(String(describing: iamRole)), registrationLimit: \(String(describing: registrationLimit)), tags: \(String(describing: tags)))"}
}
