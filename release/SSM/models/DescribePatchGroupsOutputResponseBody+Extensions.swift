// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribePatchGroupsOutputResponseBody: Equatable {
    public let mappings: [PatchGroupPatchBaselineMapping]?
    public let nextToken: String?
}

extension DescribePatchGroupsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case mappings = "Mappings"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let mappingsContainer = try containerValues.decodeIfPresent([PatchGroupPatchBaselineMapping?].self, forKey: .mappings)
        var mappingsDecoded0:[PatchGroupPatchBaselineMapping]? = nil
        if let mappingsContainer = mappingsContainer {
            mappingsDecoded0 = [PatchGroupPatchBaselineMapping]()
            for structure0 in mappingsContainer {
                if let structure0 = structure0 {
                    mappingsDecoded0?.append(structure0)
                }
            }
        }
        mappings = mappingsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
