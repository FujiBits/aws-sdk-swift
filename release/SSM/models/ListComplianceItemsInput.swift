// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ListComplianceItemsInput: Equatable {
    /// <p>One or more compliance filters. Use a filter to return a more specific list of
    ///    results.</p>
    public let filters: [ComplianceStringFilter]?
    /// <p>The maximum number of items to return for this call. The call also returns a token that you
    ///    can specify in a subsequent call to get the next set of results.</p>
    public let maxResults: Int
    /// <p>A token to start the list. Use this token to get the next set of results. </p>
    public let nextToken: String?
    /// <p>The ID for the resources from which to get compliance information. Currently, you can only
    ///    specify one resource ID.</p>
    public let resourceIds: [String]?
    /// <p>The type of resource from which to get compliance information. Currently, the only supported
    ///    resource type is <code>ManagedInstance</code>.</p>
    public let resourceTypes: [String]?

    public init (
        filters: [ComplianceStringFilter]? = nil,
        maxResults: Int = 0,
        nextToken: String? = nil,
        resourceIds: [String]? = nil,
        resourceTypes: [String]? = nil
    )
    {
        self.filters = filters
        self.maxResults = maxResults
        self.nextToken = nextToken
        self.resourceIds = resourceIds
        self.resourceTypes = resourceTypes
    }
}

extension ListComplianceItemsInput: CustomDebugStringConvertible {
    public var debugDescription: String {
        "ListComplianceItemsInput(filters: \(String(describing: filters)), maxResults: \(String(describing: maxResults)), nextToken: \(String(describing: nextToken)), resourceIds: \(String(describing: resourceIds)), resourceTypes: \(String(describing: resourceTypes)))"}
}
