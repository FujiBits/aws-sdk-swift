// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetMaintenanceWindowExecutionTaskInvocationOutputResponseBody: Equatable {
    public let windowExecutionId: String?
    public let taskExecutionId: String?
    public let invocationId: String?
    public let executionId: String?
    public let taskType: MaintenanceWindowTaskType?
    public let parameters: String?
    public let status: MaintenanceWindowExecutionStatus?
    public let statusDetails: String?
    public let startTime: Date?
    public let endTime: Date?
    public let ownerInformation: String?
    public let windowTargetId: String?
}

extension GetMaintenanceWindowExecutionTaskInvocationOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case endTime = "EndTime"
        case executionId = "ExecutionId"
        case invocationId = "InvocationId"
        case ownerInformation = "OwnerInformation"
        case parameters = "Parameters"
        case startTime = "StartTime"
        case status = "Status"
        case statusDetails = "StatusDetails"
        case taskExecutionId = "TaskExecutionId"
        case taskType = "TaskType"
        case windowExecutionId = "WindowExecutionId"
        case windowTargetId = "WindowTargetId"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let windowExecutionIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .windowExecutionId)
        windowExecutionId = windowExecutionIdDecoded
        let taskExecutionIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .taskExecutionId)
        taskExecutionId = taskExecutionIdDecoded
        let invocationIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .invocationId)
        invocationId = invocationIdDecoded
        let executionIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .executionId)
        executionId = executionIdDecoded
        let taskTypeDecoded = try containerValues.decodeIfPresent(MaintenanceWindowTaskType.self, forKey: .taskType)
        taskType = taskTypeDecoded
        let parametersDecoded = try containerValues.decodeIfPresent(String.self, forKey: .parameters)
        parameters = parametersDecoded
        let statusDecoded = try containerValues.decodeIfPresent(MaintenanceWindowExecutionStatus.self, forKey: .status)
        status = statusDecoded
        let statusDetailsDecoded = try containerValues.decodeIfPresent(String.self, forKey: .statusDetails)
        statusDetails = statusDetailsDecoded
        let startTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .startTime)
        startTime = startTimeDecoded
        let endTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .endTime)
        endTime = endTimeDecoded
        let ownerInformationDecoded = try containerValues.decodeIfPresent(String.self, forKey: .ownerInformation)
        ownerInformation = ownerInformationDecoded
        let windowTargetIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .windowTargetId)
        windowTargetId = windowTargetIdDecoded
    }
}
