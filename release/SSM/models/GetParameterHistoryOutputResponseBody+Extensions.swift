// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetParameterHistoryOutputResponseBody: Equatable {
    public let parameters: [ParameterHistory]?
    public let nextToken: String?
}

extension GetParameterHistoryOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case parameters = "Parameters"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let parametersContainer = try containerValues.decodeIfPresent([ParameterHistory?].self, forKey: .parameters)
        var parametersDecoded0:[ParameterHistory]? = nil
        if let parametersContainer = parametersContainer {
            parametersDecoded0 = [ParameterHistory]()
            for structure0 in parametersContainer {
                if let structure0 = structure0 {
                    parametersDecoded0?.append(structure0)
                }
            }
        }
        parameters = parametersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
