// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct DescribeMaintenanceWindowScheduleInput: Equatable {
    /// <p>Filters used to limit the range of results. For example, you can limit maintenance window
    ///    executions to only those scheduled before or after a certain date and time.</p>
    public let filters: [PatchOrchestratorFilter]?
    /// <p>The maximum number of items to return for this call. The call also returns a token that you
    ///    can specify in a subsequent call to get the next set of results.</p>
    public let maxResults: Int
    /// <p>The token for the next set of items to return. (You received this token from a previous
    ///    call.)</p>
    public let nextToken: String?
    /// <p>The type of resource you want to retrieve information about. For example, "INSTANCE".</p>
    public let resourceType: MaintenanceWindowResourceType?
    /// <p>The instance ID or key/value pair to retrieve information about.</p>
    public let targets: [Target]?
    /// <p>The ID of the maintenance window to retrieve information about.</p>
    public let windowId: String?

    public init (
        filters: [PatchOrchestratorFilter]? = nil,
        maxResults: Int = 0,
        nextToken: String? = nil,
        resourceType: MaintenanceWindowResourceType? = nil,
        targets: [Target]? = nil,
        windowId: String? = nil
    )
    {
        self.filters = filters
        self.maxResults = maxResults
        self.nextToken = nextToken
        self.resourceType = resourceType
        self.targets = targets
        self.windowId = windowId
    }
}

extension DescribeMaintenanceWindowScheduleInput: CustomDebugStringConvertible {
    public var debugDescription: String {
        "DescribeMaintenanceWindowScheduleInput(filters: \(String(describing: filters)), maxResults: \(String(describing: maxResults)), nextToken: \(String(describing: nextToken)), resourceType: \(String(describing: resourceType)), targets: \(String(describing: targets)), windowId: \(String(describing: windowId)))"}
}
