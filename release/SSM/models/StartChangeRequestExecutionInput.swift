// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct StartChangeRequestExecutionInput: Equatable {
    /// <p>User-provided details about the change. If no details are provided, content specified in the
    ///     <b>Template information</b> section of the associated change template
    ///    is added.</p>
    public let changeDetails: String?
    /// <p>The name of the change request associated with the runbook workflow to be run.</p>
    public let changeRequestName: String?
    /// <p>The user-provided idempotency token. The token must be unique, is case insensitive, enforces
    ///    the UUID format, and can't be reused.</p>
    public let clientToken: String?
    /// <p>The name of the change template document to run during the runbook workflow.</p>
    public let documentName: String?
    /// <p>The version of the change template document to run during the runbook workflow.</p>
    public let documentVersion: String?
    /// <p>A key-value map of parameters that match the declared parameters in the change template
    ///    document.</p>
    public let parameters: [String:[String]]?
    /// <p>Information about the Automation runbooks (Automation documents) that are run during the
    ///    runbook workflow.</p>
    ///          <note>
    ///             <p>The Automation runbooks specified for the runbook workflow can't run until all required
    ///     approvals for the change request have been received.</p>
    ///          </note>
    public let runbooks: [Runbook]?
    /// <p>The time that the requester expects the runbook workflow related to the change request to
    ///    complete. The time is an estimate only that the requester provides for reviewers.</p>
    public let scheduledEndTime: Date?
    /// <p>The date and time specified in the change request to run the Automation runbooks.</p>
    ///          <note>
    ///             <p>The Automation runbooks specified for the runbook workflow can't run until all required
    ///     approvals for the change request have been received.</p>
    ///          </note>
    public let scheduledTime: Date?
    /// <p>Optional metadata that you assign to a resource. You can specify a maximum of five tags for
    ///    a change request. Tags enable you to categorize a resource in different ways, such as by
    ///    purpose, owner, or environment. For example, you might want to tag a change request to identify
    ///    an environment or target AWS Region. In this case, you could specify the following key-value
    ///    pairs:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>Key=Environment,Value=Production</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>Key=Region,Value=us-east-2</code>
    ///                </p>
    ///             </li>
    ///          </ul>
    public let tags: [Tag]?

    public init (
        changeDetails: String? = nil,
        changeRequestName: String? = nil,
        clientToken: String? = nil,
        documentName: String? = nil,
        documentVersion: String? = nil,
        parameters: [String:[String]]? = nil,
        runbooks: [Runbook]? = nil,
        scheduledEndTime: Date? = nil,
        scheduledTime: Date? = nil,
        tags: [Tag]? = nil
    )
    {
        self.changeDetails = changeDetails
        self.changeRequestName = changeRequestName
        self.clientToken = clientToken
        self.documentName = documentName
        self.documentVersion = documentVersion
        self.parameters = parameters
        self.runbooks = runbooks
        self.scheduledEndTime = scheduledEndTime
        self.scheduledTime = scheduledTime
        self.tags = tags
    }
}

extension StartChangeRequestExecutionInput: CustomDebugStringConvertible {
    public var debugDescription: String {
        "StartChangeRequestExecutionInput(changeDetails: \(String(describing: changeDetails)), changeRequestName: \(String(describing: changeRequestName)), clientToken: \(String(describing: clientToken)), documentName: \(String(describing: documentName)), documentVersion: \(String(describing: documentVersion)), parameters: \(String(describing: parameters)), runbooks: \(String(describing: runbooks)), scheduledEndTime: \(String(describing: scheduledEndTime)), scheduledTime: \(String(describing: scheduledTime)), tags: \(String(describing: tags)))"}
}
