// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Defines the basic information about a patch baseline.</p>
public struct PatchBaselineIdentity: Equatable {
    /// <p>The description of the patch baseline.</p>
    public let baselineDescription: String?
    /// <p>The ID of the patch baseline.</p>
    public let baselineId: String?
    /// <p>The name of the patch baseline.</p>
    public let baselineName: String?
    /// <p>Whether this is the default baseline. Note that Systems Manager supports creating multiple default
    ///    patch baselines. For example, you can create a default patch baseline for each operating
    ///    system.</p>
    public let defaultBaseline: Bool
    /// <p>Defines the operating system the patch baseline applies to. The Default value is WINDOWS.
    ///   </p>
    public let operatingSystem: OperatingSystem?

    public init (
        baselineDescription: String? = nil,
        baselineId: String? = nil,
        baselineName: String? = nil,
        defaultBaseline: Bool = false,
        operatingSystem: OperatingSystem? = nil
    )
    {
        self.baselineDescription = baselineDescription
        self.baselineId = baselineId
        self.baselineName = baselineName
        self.defaultBaseline = defaultBaseline
        self.operatingSystem = operatingSystem
    }
}

extension PatchBaselineIdentity: CustomDebugStringConvertible {
    public var debugDescription: String {
        "PatchBaselineIdentity(baselineDescription: \(String(describing: baselineDescription)), baselineId: \(String(describing: baselineId)), baselineName: \(String(describing: baselineName)), defaultBaseline: \(String(describing: defaultBaseline)), operatingSystem: \(String(describing: operatingSystem)))"}
}
