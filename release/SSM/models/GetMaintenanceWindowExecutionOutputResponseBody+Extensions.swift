// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetMaintenanceWindowExecutionOutputResponseBody: Equatable {
    public let windowExecutionId: String?
    public let taskIds: [String]?
    public let status: MaintenanceWindowExecutionStatus?
    public let statusDetails: String?
    public let startTime: Date?
    public let endTime: Date?
}

extension GetMaintenanceWindowExecutionOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case endTime = "EndTime"
        case startTime = "StartTime"
        case status = "Status"
        case statusDetails = "StatusDetails"
        case taskIds = "TaskIds"
        case windowExecutionId = "WindowExecutionId"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let windowExecutionIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .windowExecutionId)
        windowExecutionId = windowExecutionIdDecoded
        let taskIdsContainer = try containerValues.decodeIfPresent([String?].self, forKey: .taskIds)
        var taskIdsDecoded0:[String]? = nil
        if let taskIdsContainer = taskIdsContainer {
            taskIdsDecoded0 = [String]()
            for string0 in taskIdsContainer {
                if let string0 = string0 {
                    taskIdsDecoded0?.append(string0)
                }
            }
        }
        taskIds = taskIdsDecoded0
        let statusDecoded = try containerValues.decodeIfPresent(MaintenanceWindowExecutionStatus.self, forKey: .status)
        status = statusDecoded
        let statusDetailsDecoded = try containerValues.decodeIfPresent(String.self, forKey: .statusDetails)
        statusDetails = statusDetailsDecoded
        let startTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .startTime)
        startTime = startTimeDecoded
        let endTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .endTime)
        endTime = endTimeDecoded
    }
}
