// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Information about the compliance as defined by the resource type. For example, for a patch
///    resource type, <code>Items</code> includes information about the PatchSeverity, Classification,
///    and so on.</p>
public struct ComplianceItem: Equatable {
    /// <p>The compliance type. For example, Association (for a State Manager association), Patch, or
    ///     Custom:<code>string</code> are all valid compliance types.</p>
    public let complianceType: String?
    /// <p>A "Key": "Value" tag combination for the compliance item.</p>
    public let details: [String:String]?
    /// <p>A summary for the compliance item. The summary includes an execution ID, the execution type
    ///    (for example, command), and the execution time.</p>
    public let executionSummary: ComplianceExecutionSummary?
    /// <p>An ID for the compliance item. For example, if the compliance item is a Windows patch, the
    ///    ID could be the number of the KB article; for example: KB4010320.</p>
    public let id: String?
    /// <p>An ID for the resource. For a managed instance, this is the instance ID.</p>
    public let resourceId: String?
    /// <p>The type of resource. <code>ManagedInstance</code> is currently the only supported resource
    ///    type.</p>
    public let resourceType: String?
    /// <p>The severity of the compliance status. Severity can be one of the following: Critical, High,
    ///    Medium, Low, Informational, Unspecified.</p>
    public let severity: ComplianceSeverity?
    /// <p>The status of the compliance item. An item is either COMPLIANT, NON_COMPLIANT, or an empty
    ///    string (for Windows patches that aren't applicable).</p>
    public let status: ComplianceStatus?
    /// <p>A title for the compliance item. For example, if the compliance item is a Windows patch, the
    ///    title could be the title of the KB article for the patch; for example: Security Update for Active
    ///    Directory Federation Services.</p>
    public let title: String?

    public init (
        complianceType: String? = nil,
        details: [String:String]? = nil,
        executionSummary: ComplianceExecutionSummary? = nil,
        id: String? = nil,
        resourceId: String? = nil,
        resourceType: String? = nil,
        severity: ComplianceSeverity? = nil,
        status: ComplianceStatus? = nil,
        title: String? = nil
    )
    {
        self.complianceType = complianceType
        self.details = details
        self.executionSummary = executionSummary
        self.id = id
        self.resourceId = resourceId
        self.resourceType = resourceType
        self.severity = severity
        self.status = status
        self.title = title
    }
}

extension ComplianceItem: CustomDebugStringConvertible {
    public var debugDescription: String {
        "ComplianceItem(complianceType: \(String(describing: complianceType)), details: \(String(describing: details)), executionSummary: \(String(describing: executionSummary)), id: \(String(describing: id)), resourceId: \(String(describing: resourceId)), resourceType: \(String(describing: resourceType)), severity: \(String(describing: severity)), status: \(String(describing: status)), title: \(String(describing: title)))"}
}
