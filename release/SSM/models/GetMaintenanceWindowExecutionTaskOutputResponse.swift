// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct GetMaintenanceWindowExecutionTaskOutputResponse: Equatable {
    /// <p>The time the task execution completed.</p>
    public let endTime: Date?
    /// <p>The defined maximum number of task executions that could be run in parallel.</p>
    public let maxConcurrency: String?
    /// <p>The defined maximum number of task execution errors allowed before scheduling of the task
    ///    execution would have been stopped.</p>
    public let maxErrors: String?
    /// <p>The priority of the task.</p>
    public let priority: Int
    /// <p>The role that was assumed when running the task.</p>
    public let serviceRole: String?
    /// <p>The time the task execution started.</p>
    public let startTime: Date?
    /// <p>The status of the task.</p>
    public let status: MaintenanceWindowExecutionStatus?
    /// <p>The details explaining the Status. Only available for certain status values.</p>
    public let statusDetails: String?
    /// <p>The ARN of the task that ran.</p>
    public let taskArn: String?
    /// <p>The ID of the specific task execution in the maintenance window task that was
    ///    retrieved.</p>
    public let taskExecutionId: String?
    /// <p>The parameters passed to the task when it was run.</p>
    ///          <note>
    ///             <p>
    ///                <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs,
    ///       instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information
    ///       about how Systems Manager handles these options for the supported maintenance window task
    ///       types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p>
    ///          </note>
    ///          <p>The map has the following format:</p>
    ///          <p>Key: string, between 1 and 255 characters</p>
    ///          <p>Value: an array of strings, each string is between 1 and 255 characters</p>
    public let taskParameters: [[String:MaintenanceWindowTaskParameterValueExpression]]?
    /// <p>The type of task that was run.</p>
    public let type: MaintenanceWindowTaskType?
    /// <p>The ID of the maintenance window execution that includes the task.</p>
    public let windowExecutionId: String?

    public init (
        endTime: Date? = nil,
        maxConcurrency: String? = nil,
        maxErrors: String? = nil,
        priority: Int = 0,
        serviceRole: String? = nil,
        startTime: Date? = nil,
        status: MaintenanceWindowExecutionStatus? = nil,
        statusDetails: String? = nil,
        taskArn: String? = nil,
        taskExecutionId: String? = nil,
        taskParameters: [[String:MaintenanceWindowTaskParameterValueExpression]]? = nil,
        type: MaintenanceWindowTaskType? = nil,
        windowExecutionId: String? = nil
    )
    {
        self.endTime = endTime
        self.maxConcurrency = maxConcurrency
        self.maxErrors = maxErrors
        self.priority = priority
        self.serviceRole = serviceRole
        self.startTime = startTime
        self.status = status
        self.statusDetails = statusDetails
        self.taskArn = taskArn
        self.taskExecutionId = taskExecutionId
        self.taskParameters = taskParameters
        self.type = type
        self.windowExecutionId = windowExecutionId
    }
}

extension GetMaintenanceWindowExecutionTaskOutputResponse: CustomDebugStringConvertible {
    public var debugDescription: String {
        "GetMaintenanceWindowExecutionTaskOutputResponse(endTime: \(String(describing: endTime)), maxConcurrency: \(String(describing: maxConcurrency)), maxErrors: \(String(describing: maxErrors)), priority: \(String(describing: priority)), serviceRole: \(String(describing: serviceRole)), startTime: \(String(describing: startTime)), status: \(String(describing: status)), statusDetails: \(String(describing: statusDetails)), taskArn: \(String(describing: taskArn)), taskExecutionId: \(String(describing: taskExecutionId)), taskParameters: \(String(describing: taskParameters)), type: \(String(describing: type)), windowExecutionId: \(String(describing: windowExecutionId)))"}
}
