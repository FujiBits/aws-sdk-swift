// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetInventorySchemaInputBody: Equatable {
    public let typeName: String?
    public let nextToken: String?
    public let maxResults: Int
    public let aggregator: Bool
    public let subType: Bool
}

extension GetInventorySchemaInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case aggregator = "Aggregator"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case subType = "SubType"
        case typeName = "TypeName"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let typeNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .typeName)
        typeName = typeNameDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decode(Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let aggregatorDecoded = try containerValues.decode(Bool.self, forKey: .aggregator)
        aggregator = aggregatorDecoded
        let subTypeDecoded = try containerValues.decode(Bool.self, forKey: .subType)
        subType = subTypeDecoded
    }
}
