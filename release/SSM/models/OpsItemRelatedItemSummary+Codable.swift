// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension OpsItemRelatedItemSummary: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case associationId = "AssociationId"
        case associationType = "AssociationType"
        case createdBy = "CreatedBy"
        case createdTime = "CreatedTime"
        case lastModifiedBy = "LastModifiedBy"
        case lastModifiedTime = "LastModifiedTime"
        case opsItemId = "OpsItemId"
        case resourceType = "ResourceType"
        case resourceUri = "ResourceUri"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let associationId = associationId {
            try encodeContainer.encode(associationId, forKey: .associationId)
        }
        if let associationType = associationType {
            try encodeContainer.encode(associationType, forKey: .associationType)
        }
        if let createdBy = createdBy {
            try encodeContainer.encode(createdBy, forKey: .createdBy)
        }
        if let createdTime = createdTime {
            try encodeContainer.encode(createdTime.timeIntervalSince1970, forKey: .createdTime)
        }
        if let lastModifiedBy = lastModifiedBy {
            try encodeContainer.encode(lastModifiedBy, forKey: .lastModifiedBy)
        }
        if let lastModifiedTime = lastModifiedTime {
            try encodeContainer.encode(lastModifiedTime.timeIntervalSince1970, forKey: .lastModifiedTime)
        }
        if let opsItemId = opsItemId {
            try encodeContainer.encode(opsItemId, forKey: .opsItemId)
        }
        if let resourceType = resourceType {
            try encodeContainer.encode(resourceType, forKey: .resourceType)
        }
        if let resourceUri = resourceUri {
            try encodeContainer.encode(resourceUri, forKey: .resourceUri)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let opsItemIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .opsItemId)
        opsItemId = opsItemIdDecoded
        let associationIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .associationId)
        associationId = associationIdDecoded
        let resourceTypeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .resourceType)
        resourceType = resourceTypeDecoded
        let associationTypeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .associationType)
        associationType = associationTypeDecoded
        let resourceUriDecoded = try containerValues.decodeIfPresent(String.self, forKey: .resourceUri)
        resourceUri = resourceUriDecoded
        let createdByDecoded = try containerValues.decodeIfPresent(OpsItemIdentity.self, forKey: .createdBy)
        createdBy = createdByDecoded
        let createdTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .createdTime)
        createdTime = createdTimeDecoded
        let lastModifiedByDecoded = try containerValues.decodeIfPresent(OpsItemIdentity.self, forKey: .lastModifiedBy)
        lastModifiedBy = lastModifiedByDecoded
        let lastModifiedTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .lastModifiedTime)
        lastModifiedTime = lastModifiedTimeDecoded
    }
}
