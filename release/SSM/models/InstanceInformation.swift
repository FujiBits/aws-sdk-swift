// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Describes a filter for a specific list of instances. </p>
public struct InstanceInformation: Equatable {
    /// <p>The activation ID created by Systems Manager when the server or VM was registered.</p>
    public let activationId: String?
    /// <p>The version of SSM Agent running on your Linux instance. </p>
    public let agentVersion: String?
    /// <p>Information about the association.</p>
    public let associationOverview: InstanceAggregatedAssociationOverview?
    /// <p>The status of the association.</p>
    public let associationStatus: String?
    /// <p>The fully qualified host name of the managed instance.</p>
    public let computerName: String?
    /// <p>The IP address of the managed instance.</p>
    public let iPAddress: String?
    /// <p>The Amazon Identity and Access Management (IAM) role assigned to the on-premises Systems Manager
    ///    managed instance. This call does not return the IAM role for EC2 instances. To retrieve the IAM
    ///    role for an EC2 instance, use the Amazon EC2 <code>DescribeInstances</code> action. For information,
    ///    see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html">DescribeInstances</a> in the
    ///    <i>Amazon EC2 API Reference</i> or <a href="https://docs.aws.amazon.com/cli/latest/ec2/describe-instances.html">describe-instances</a> in the <i>AWS CLI Command Reference</i>.</p>
    public let iamRole: String?
    /// <p>The instance ID. </p>
    public let instanceId: String?
    /// <p>Indicates whether the latest version of SSM Agent is running on your Linux Managed Instance.
    ///    This field does not indicate whether or not the latest version is installed on Windows managed
    ///    instances, because some older versions of Windows Server use the EC2Config service to process SSM
    ///    requests.</p>
    public let isLatestVersion: Bool
    /// <p>The date the association was last run.</p>
    public let lastAssociationExecutionDate: Date?
    /// <p>The date and time when the agent last pinged the Systems Manager service. </p>
    public let lastPingDateTime: Date?
    /// <p>The last date the association was successfully run.</p>
    public let lastSuccessfulAssociationExecutionDate: Date?
    /// <p>The name assigned to an on-premises server or virtual machine (VM) when it is activated as a
    ///    Systems Manager managed instance. The name is specified as the <code>DefaultInstanceName</code> property
    ///    using the <a>CreateActivation</a> command. It is applied to the managed instance by
    ///    specifying the Activation Code and Activation ID when you install SSM Agent on the instance, as
    ///    explained in <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-install-managed-linux.html">Install SSM Agent for a
    ///     hybrid environment (Linux)</a> and <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-install-managed-win.html">Install SSM Agent for a hybrid environment
    ///     (Windows)</a>. To retrieve the Name tag of an EC2 instance, use the Amazon EC2
    ///    <code>DescribeInstances</code> action. For information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html">DescribeInstances</a> in the
    ///    <i>Amazon EC2 API Reference</i> or <a href="https://docs.aws.amazon.com/cli/latest/ec2/describe-instances.html">describe-instances</a> in the <i>AWS CLI Command Reference</i>.</p>
    public let name: String?
    /// <p>Connection status of SSM Agent. </p>
    ///          <note>
    ///             <p>The status <code>Inactive</code> has been deprecated and is no longer in use.</p>
    ///          </note>
    public let pingStatus: PingStatus?
    /// <p>The name of the operating system platform running on your instance. </p>
    public let platformName: String?
    /// <p>The operating system platform type. </p>
    public let platformType: PlatformType?
    /// <p>The version of the OS platform running on your instance. </p>
    public let platformVersion: String?
    /// <p>The date the server or VM was registered with AWS as a managed instance.</p>
    public let registrationDate: Date?
    /// <p>The type of instance. Instances are either EC2 instances or managed instances. </p>
    public let resourceType: ResourceType?

    public init (
        activationId: String? = nil,
        agentVersion: String? = nil,
        associationOverview: InstanceAggregatedAssociationOverview? = nil,
        associationStatus: String? = nil,
        computerName: String? = nil,
        iPAddress: String? = nil,
        iamRole: String? = nil,
        instanceId: String? = nil,
        isLatestVersion: Bool = false,
        lastAssociationExecutionDate: Date? = nil,
        lastPingDateTime: Date? = nil,
        lastSuccessfulAssociationExecutionDate: Date? = nil,
        name: String? = nil,
        pingStatus: PingStatus? = nil,
        platformName: String? = nil,
        platformType: PlatformType? = nil,
        platformVersion: String? = nil,
        registrationDate: Date? = nil,
        resourceType: ResourceType? = nil
    )
    {
        self.activationId = activationId
        self.agentVersion = agentVersion
        self.associationOverview = associationOverview
        self.associationStatus = associationStatus
        self.computerName = computerName
        self.iPAddress = iPAddress
        self.iamRole = iamRole
        self.instanceId = instanceId
        self.isLatestVersion = isLatestVersion
        self.lastAssociationExecutionDate = lastAssociationExecutionDate
        self.lastPingDateTime = lastPingDateTime
        self.lastSuccessfulAssociationExecutionDate = lastSuccessfulAssociationExecutionDate
        self.name = name
        self.pingStatus = pingStatus
        self.platformName = platformName
        self.platformType = platformType
        self.platformVersion = platformVersion
        self.registrationDate = registrationDate
        self.resourceType = resourceType
    }
}

extension InstanceInformation: CustomDebugStringConvertible {
    public var debugDescription: String {
        "InstanceInformation(activationId: \(String(describing: activationId)), agentVersion: \(String(describing: agentVersion)), associationOverview: \(String(describing: associationOverview)), associationStatus: \(String(describing: associationStatus)), computerName: \(String(describing: computerName)), iPAddress: \(String(describing: iPAddress)), iamRole: \(String(describing: iamRole)), instanceId: \(String(describing: instanceId)), isLatestVersion: \(String(describing: isLatestVersion)), lastAssociationExecutionDate: \(String(describing: lastAssociationExecutionDate)), lastPingDateTime: \(String(describing: lastPingDateTime)), lastSuccessfulAssociationExecutionDate: \(String(describing: lastSuccessfulAssociationExecutionDate)), name: \(String(describing: name)), pingStatus: \(String(describing: pingStatus)), platformName: \(String(describing: platformName)), platformType: \(String(describing: platformType)), platformVersion: \(String(describing: platformVersion)), registrationDate: \(String(describing: registrationDate)), resourceType: \(String(describing: resourceType)))"}
}
