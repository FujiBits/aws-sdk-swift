// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Specifies the inventory type and attribute for the aggregation execution.</p>
public struct InventoryAggregator: Equatable {
    /// <p>Nested aggregators to further refine aggregation for an inventory type.</p>
    public let aggregators: [InventoryAggregator]?
    /// <p>The inventory type and attribute name for aggregation.</p>
    public let expression: String?
    /// <p>A user-defined set of one or more filters on which to aggregate inventory data. Groups
    ///    return a count of resources that match and don't match the specified criteria.</p>
    public let groups: [InventoryGroup]?

    public init (
        aggregators: [InventoryAggregator]? = nil,
        expression: String? = nil,
        groups: [InventoryGroup]? = nil
    )
    {
        self.aggregators = aggregators
        self.expression = expression
        self.groups = groups
    }
}

extension InventoryAggregator: CustomDebugStringConvertible {
    public var debugDescription: String {
        "InventoryAggregator(aggregators: \(String(describing: aggregators)), expression: \(String(describing: expression)), groups: \(String(describing: groups)))"}
}
