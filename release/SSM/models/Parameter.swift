// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>An Systems Manager parameter in Parameter Store.</p>
public struct Parameter: Equatable {
    /// <p>The Amazon Resource Name (ARN) of the parameter.</p>
    public let aRN: String?
    /// <p>The data type of the parameter, such as <code>text</code> or <code>aws:ec2:image</code>. The
    ///    default is <code>text</code>.</p>
    public let dataType: String?
    /// <p>Date the parameter was last changed or updated and the parameter version was created.</p>
    public let lastModifiedDate: Date?
    /// <p>The name of the parameter.</p>
    public let name: String?
    /// <p>Either the version number or the label used to retrieve the parameter value. Specify
    ///    selectors by using one of the following formats:</p>
    ///          <p>parameter_name:version</p>
    ///          <p>parameter_name:label</p>
    public let selector: String?
    /// <p>Applies to parameters that reference information in other AWS services. SourceResult is the
    ///    raw result or response from the source.</p>
    public let sourceResult: String?
    /// <p>The type of parameter. Valid values include the following: <code>String</code>,
    ///     <code>StringList</code>, and <code>SecureString</code>.</p>
    public let type: ParameterType?
    /// <p>The parameter value.</p>
    public let value: String?
    /// <p>The parameter version.</p>
    public let version: Int

    public init (
        aRN: String? = nil,
        dataType: String? = nil,
        lastModifiedDate: Date? = nil,
        name: String? = nil,
        selector: String? = nil,
        sourceResult: String? = nil,
        type: ParameterType? = nil,
        value: String? = nil,
        version: Int = 0
    )
    {
        self.aRN = aRN
        self.dataType = dataType
        self.lastModifiedDate = lastModifiedDate
        self.name = name
        self.selector = selector
        self.sourceResult = sourceResult
        self.type = type
        self.value = value
        self.version = version
    }
}

extension Parameter: CustomDebugStringConvertible {
    public var debugDescription: String {
        "Parameter(aRN: \(String(describing: aRN)), dataType: \(String(describing: dataType)), lastModifiedDate: \(String(describing: lastModifiedDate)), name: \(String(describing: name)), selector: \(String(describing: selector)), sourceResult: \(String(describing: sourceResult)), type: \(String(describing: type)), value: \(String(describing: value)), version: \(String(describing: version)))"}
}
