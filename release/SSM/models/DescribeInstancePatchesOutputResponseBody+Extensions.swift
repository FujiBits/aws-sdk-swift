// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeInstancePatchesOutputResponseBody: Equatable {
    public let patches: [PatchComplianceData]?
    public let nextToken: String?
}

extension DescribeInstancePatchesOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case patches = "Patches"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let patchesContainer = try containerValues.decodeIfPresent([PatchComplianceData?].self, forKey: .patches)
        var patchesDecoded0:[PatchComplianceData]? = nil
        if let patchesContainer = patchesContainer {
            patchesDecoded0 = [PatchComplianceData]()
            for structure0 in patchesContainer {
                if let structure0 = structure0 {
                    patchesDecoded0?.append(structure0)
                }
            }
        }
        patches = patchesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
