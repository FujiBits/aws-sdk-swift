// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum SessionStatus {
    case connected
    case connecting
    case disconnected
    case failed
    case terminated
    case terminating
    case sdkUnknown(String)
}

extension SessionStatus : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [SessionStatus] {
        return [
            .connected,
            .connecting,
            .disconnected,
            .failed,
            .terminated,
            .terminating,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .connected: return "Connected"
        case .connecting: return "Connecting"
        case .disconnected: return "Disconnected"
        case .failed: return "Failed"
        case .terminated: return "Terminated"
        case .terminating: return "Terminating"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = SessionStatus(rawValue: rawValue) ?? SessionStatus.sdkUnknown(rawValue)
    }
}
