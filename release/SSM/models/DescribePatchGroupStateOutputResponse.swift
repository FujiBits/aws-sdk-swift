// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct DescribePatchGroupStateOutputResponse: Equatable {
    /// <p>The number of instances in the patch group.</p>
    public let instances: Int
    /// <p>The number of instances where patches that are specified as "Critical" for compliance
    ///    reporting in the patch baseline are not installed. These patches might be missing, have failed
    ///    installation, were rejected, or were installed but awaiting a required instance reboot. The
    ///    status of these instances is <code>NON_COMPLIANT</code>.</p>
    public let instancesWithCriticalNonCompliantPatches: Int
    /// <p>The number of instances with patches from the patch baseline that failed to install.</p>
    public let instancesWithFailedPatches: Int
    /// <p>The number of instances with patches installed that aren't defined in the patch
    ///    baseline.</p>
    public let instancesWithInstalledOtherPatches: Int
    /// <p>The number of instances with installed patches.</p>
    public let instancesWithInstalledPatches: Int
    /// <p>The number of instances with patches installed by Patch Manager that have not been rebooted
    ///    after the patch installation. The status of these instances is NON_COMPLIANT.</p>
    public let instancesWithInstalledPendingRebootPatches: Int
    /// <p>The number of instances with patches installed that are specified in a RejectedPatches list.
    ///    Patches with a status of <i>INSTALLED_REJECTED</i> were typically installed before
    ///    they were added to a RejectedPatches list.</p>
    ///          <note>
    ///             <p>If ALLOW_AS_DEPENDENCY is the specified option for RejectedPatchesAction, the value of
    ///     InstancesWithInstalledRejectedPatches will always be 0 (zero).</p>
    ///          </note>
    public let instancesWithInstalledRejectedPatches: Int
    /// <p>The number of instances with missing patches from the patch baseline.</p>
    public let instancesWithMissingPatches: Int
    /// <p>The number of instances with patches that aren't applicable.</p>
    public let instancesWithNotApplicablePatches: Int
    /// <p>The number of instances with patches installed that are specified as other than "Critical"
    ///    or "Security" but are not compliant with the patch baseline. The status of these instances is
    ///    NON_COMPLIANT.</p>
    public let instancesWithOtherNonCompliantPatches: Int
    /// <p>The number of instances where patches that are specified as "Security" in a patch advisory
    ///    are not installed. These patches might be missing, have failed installation, were rejected, or
    ///    were installed but awaiting a required instance reboot. The status of these instances is
    ///     <code>NON_COMPLIANT</code>.</p>
    public let instancesWithSecurityNonCompliantPatches: Int
    /// <p>The number of instances with <code>NotApplicable</code> patches beyond the supported limit,
    ///    which are not reported by name to Systems Manager Inventory.</p>
    public let instancesWithUnreportedNotApplicablePatches: Int

    public init (
        instances: Int = 0,
        instancesWithCriticalNonCompliantPatches: Int = 0,
        instancesWithFailedPatches: Int = 0,
        instancesWithInstalledOtherPatches: Int = 0,
        instancesWithInstalledPatches: Int = 0,
        instancesWithInstalledPendingRebootPatches: Int = 0,
        instancesWithInstalledRejectedPatches: Int = 0,
        instancesWithMissingPatches: Int = 0,
        instancesWithNotApplicablePatches: Int = 0,
        instancesWithOtherNonCompliantPatches: Int = 0,
        instancesWithSecurityNonCompliantPatches: Int = 0,
        instancesWithUnreportedNotApplicablePatches: Int = 0
    )
    {
        self.instances = instances
        self.instancesWithCriticalNonCompliantPatches = instancesWithCriticalNonCompliantPatches
        self.instancesWithFailedPatches = instancesWithFailedPatches
        self.instancesWithInstalledOtherPatches = instancesWithInstalledOtherPatches
        self.instancesWithInstalledPatches = instancesWithInstalledPatches
        self.instancesWithInstalledPendingRebootPatches = instancesWithInstalledPendingRebootPatches
        self.instancesWithInstalledRejectedPatches = instancesWithInstalledRejectedPatches
        self.instancesWithMissingPatches = instancesWithMissingPatches
        self.instancesWithNotApplicablePatches = instancesWithNotApplicablePatches
        self.instancesWithOtherNonCompliantPatches = instancesWithOtherNonCompliantPatches
        self.instancesWithSecurityNonCompliantPatches = instancesWithSecurityNonCompliantPatches
        self.instancesWithUnreportedNotApplicablePatches = instancesWithUnreportedNotApplicablePatches
    }
}

extension DescribePatchGroupStateOutputResponse: CustomDebugStringConvertible {
    public var debugDescription: String {
        "DescribePatchGroupStateOutputResponse(instances: \(String(describing: instances)), instancesWithCriticalNonCompliantPatches: \(String(describing: instancesWithCriticalNonCompliantPatches)), instancesWithFailedPatches: \(String(describing: instancesWithFailedPatches)), instancesWithInstalledOtherPatches: \(String(describing: instancesWithInstalledOtherPatches)), instancesWithInstalledPatches: \(String(describing: instancesWithInstalledPatches)), instancesWithInstalledPendingRebootPatches: \(String(describing: instancesWithInstalledPendingRebootPatches)), instancesWithInstalledRejectedPatches: \(String(describing: instancesWithInstalledRejectedPatches)), instancesWithMissingPatches: \(String(describing: instancesWithMissingPatches)), instancesWithNotApplicablePatches: \(String(describing: instancesWithNotApplicablePatches)), instancesWithOtherNonCompliantPatches: \(String(describing: instancesWithOtherNonCompliantPatches)), instancesWithSecurityNonCompliantPatches: \(String(describing: instancesWithSecurityNonCompliantPatches)), instancesWithUnreportedNotApplicablePatches: \(String(describing: instancesWithUnreportedNotApplicablePatches)))"}
}
