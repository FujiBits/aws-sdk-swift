// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListByoipCidrsOutputResponseBody: Equatable {
    public let byoipCidrs: [ByoipCidr]?
    public let nextToken: String?
}

extension ListByoipCidrsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case byoipCidrs = "ByoipCidrs"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let byoipCidrsContainer = try containerValues.decodeIfPresent([ByoipCidr?].self, forKey: .byoipCidrs)
        var byoipCidrsDecoded0:[ByoipCidr]? = nil
        if let byoipCidrsContainer = byoipCidrsContainer {
            byoipCidrsDecoded0 = [ByoipCidr]()
            for structure0 in byoipCidrsContainer {
                if let structure0 = structure0 {
                    byoipCidrsDecoded0?.append(structure0)
                }
            }
        }
        byoipCidrs = byoipCidrsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
