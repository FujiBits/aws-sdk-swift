// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>A complex type that contains a <code>Tag</code> key and <code>Tag</code> value.</p>
public struct Tag: Equatable {
    /// <p>A string that contains a <code>Tag</code> key.</p>
    public let key: String?
    /// <p>A string that contains a <code>Tag</code> value.</p>
    public let value: String?

    public init (
        key: String? = nil,
        value: String? = nil
    )
    {
        self.key = key
        self.value = value
    }
}

extension Tag: CustomDebugStringConvertible {
    public var debugDescription: String {
        "Tag(key: \(String(describing: key)), value: \(String(describing: value)))"}
}
