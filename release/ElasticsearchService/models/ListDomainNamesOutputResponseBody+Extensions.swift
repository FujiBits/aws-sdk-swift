// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDomainNamesOutputResponseBody: Equatable {
    public let domainNames: [DomainInfo]?
}

extension ListDomainNamesOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case domainNames = "DomainNames"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let domainNamesContainer = try containerValues.decodeIfPresent([DomainInfo?].self, forKey: .domainNames)
        var domainNamesDecoded0:[DomainInfo]? = nil
        if let domainNamesContainer = domainNamesContainer {
            domainNamesDecoded0 = [DomainInfo]()
            for structure0 in domainNamesContainer {
                if let structure0 = structure0 {
                    domainNamesDecoded0?.append(structure0)
                }
            }
        }
        domainNames = domainNamesDecoded0
    }
}
