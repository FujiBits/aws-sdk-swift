// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeReservedElasticsearchInstanceOfferingsOutputResponseBody: Equatable {
    public let nextToken: String?
    public let reservedElasticsearchInstanceOfferings: [ReservedElasticsearchInstanceOffering]?
}

extension DescribeReservedElasticsearchInstanceOfferingsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case reservedElasticsearchInstanceOfferings = "ReservedElasticsearchInstanceOfferings"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let reservedElasticsearchInstanceOfferingsContainer = try containerValues.decodeIfPresent([ReservedElasticsearchInstanceOffering?].self, forKey: .reservedElasticsearchInstanceOfferings)
        var reservedElasticsearchInstanceOfferingsDecoded0:[ReservedElasticsearchInstanceOffering]? = nil
        if let reservedElasticsearchInstanceOfferingsContainer = reservedElasticsearchInstanceOfferingsContainer {
            reservedElasticsearchInstanceOfferingsDecoded0 = [ReservedElasticsearchInstanceOffering]()
            for structure0 in reservedElasticsearchInstanceOfferingsContainer {
                if let structure0 = structure0 {
                    reservedElasticsearchInstanceOfferingsDecoded0?.append(structure0)
                }
            }
        }
        reservedElasticsearchInstanceOfferings = reservedElasticsearchInstanceOfferingsDecoded0
    }
}
