// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListReceivedGrantsOutputResponseBody: Equatable {
    public let grants: [Grant]?
    public let nextToken: String?
}

extension ListReceivedGrantsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case grants = "Grants"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let grantsContainer = try containerValues.decodeIfPresent([Grant?].self, forKey: .grants)
        var grantsDecoded0:[Grant]? = nil
        if let grantsContainer = grantsContainer {
            grantsDecoded0 = [Grant]()
            for structure0 in grantsContainer {
                if let structure0 = structure0 {
                    grantsDecoded0?.append(structure0)
                }
            }
        }
        grants = grantsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
