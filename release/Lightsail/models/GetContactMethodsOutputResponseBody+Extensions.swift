// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetContactMethodsOutputResponseBody: Equatable {
    public let contactMethods: [ContactMethod]?
}

extension GetContactMethodsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case contactMethods
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let contactMethodsContainer = try containerValues.decodeIfPresent([ContactMethod?].self, forKey: .contactMethods)
        var contactMethodsDecoded0:[ContactMethod]? = nil
        if let contactMethodsContainer = contactMethodsContainer {
            contactMethodsDecoded0 = [ContactMethod]()
            for structure0 in contactMethodsContainer {
                if let structure0 = structure0 {
                    contactMethodsDecoded0?.append(structure0)
                }
            }
        }
        contactMethods = contactMethodsDecoded0
    }
}
