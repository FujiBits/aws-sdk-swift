// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetExportSnapshotRecordsOutputResponseBody: Equatable {
    public let exportSnapshotRecords: [ExportSnapshotRecord]?
    public let nextPageToken: String?
}

extension GetExportSnapshotRecordsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case exportSnapshotRecords
        case nextPageToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let exportSnapshotRecordsContainer = try containerValues.decodeIfPresent([ExportSnapshotRecord?].self, forKey: .exportSnapshotRecords)
        var exportSnapshotRecordsDecoded0:[ExportSnapshotRecord]? = nil
        if let exportSnapshotRecordsContainer = exportSnapshotRecordsContainer {
            exportSnapshotRecordsDecoded0 = [ExportSnapshotRecord]()
            for structure0 in exportSnapshotRecordsContainer {
                if let structure0 = structure0 {
                    exportSnapshotRecordsDecoded0?.append(structure0)
                }
            }
        }
        exportSnapshotRecords = exportSnapshotRecordsDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
