// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetRelationalDatabaseEventsOutputResponseBody: Equatable {
    public let relationalDatabaseEvents: [RelationalDatabaseEvent]?
    public let nextPageToken: String?
}

extension GetRelationalDatabaseEventsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextPageToken
        case relationalDatabaseEvents
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let relationalDatabaseEventsContainer = try containerValues.decodeIfPresent([RelationalDatabaseEvent?].self, forKey: .relationalDatabaseEvents)
        var relationalDatabaseEventsDecoded0:[RelationalDatabaseEvent]? = nil
        if let relationalDatabaseEventsContainer = relationalDatabaseEventsContainer {
            relationalDatabaseEventsDecoded0 = [RelationalDatabaseEvent]()
            for structure0 in relationalDatabaseEventsContainer {
                if let structure0 = structure0 {
                    relationalDatabaseEventsDecoded0?.append(structure0)
                }
            }
        }
        relationalDatabaseEvents = relationalDatabaseEventsDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
