// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetBlueprintsOutputResponseBody: Equatable {
    public let blueprints: [Blueprint]?
    public let nextPageToken: String?
}

extension GetBlueprintsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case blueprints
        case nextPageToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let blueprintsContainer = try containerValues.decodeIfPresent([Blueprint?].self, forKey: .blueprints)
        var blueprintsDecoded0:[Blueprint]? = nil
        if let blueprintsContainer = blueprintsContainer {
            blueprintsDecoded0 = [Blueprint]()
            for structure0 in blueprintsContainer {
                if let structure0 = structure0 {
                    blueprintsDecoded0?.append(structure0)
                }
            }
        }
        blueprints = blueprintsDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
