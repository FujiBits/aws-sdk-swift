// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// Glue DataBrew is a visual, cloud-scale data-preparation service. DataBrew simplifies data preparation tasks, targeting data issues that are hard to spot and time-consuming to fix. DataBrew empowers users of all technical levels to visualize the data and perform one-click data transformations, with no coding required.
public protocol DataBrewClientProtocol {
    /// Deletes one or more versions of a recipe at a time. The entire request will be rejected if:
    ///
    /// * The recipe does not exist.
    ///
    /// * There is an invalid version identifier in the list of versions.
    ///
    /// * The version list is empty.
    ///
    /// * The version list size exceeds 50.
    ///
    /// * The version list contains duplicate entries.
    ///
    ///
    /// The request will complete successfully, but with partial failures, if:
    ///
    /// * A version does not exist.
    ///
    /// * A version is being used by a job.
    ///
    /// * You specify LATEST_WORKING, but it's being used by a project.
    ///
    /// * The version fails to be deleted.
    ///
    ///
    /// The LATEST_WORKING version will only be deleted if the recipe has no other versions. If you try to delete LATEST_WORKING while other versions exist (or if they can't be deleted), then LATEST_WORKING will be listed as partial failure in the response.
    func batchDeleteRecipeVersion(input: BatchDeleteRecipeVersionInput, completion: @escaping (ClientRuntime.SdkResult<BatchDeleteRecipeVersionOutputResponse, BatchDeleteRecipeVersionOutputError>) -> Void)
    /// Creates a new DataBrew dataset.
    func createDataset(input: CreateDatasetInput, completion: @escaping (ClientRuntime.SdkResult<CreateDatasetOutputResponse, CreateDatasetOutputError>) -> Void)
    /// Creates a new job to analyze a dataset and create its data profile.
    func createProfileJob(input: CreateProfileJobInput, completion: @escaping (ClientRuntime.SdkResult<CreateProfileJobOutputResponse, CreateProfileJobOutputError>) -> Void)
    /// Creates a new DataBrew project.
    func createProject(input: CreateProjectInput, completion: @escaping (ClientRuntime.SdkResult<CreateProjectOutputResponse, CreateProjectOutputError>) -> Void)
    /// Creates a new DataBrew recipe.
    func createRecipe(input: CreateRecipeInput, completion: @escaping (ClientRuntime.SdkResult<CreateRecipeOutputResponse, CreateRecipeOutputError>) -> Void)
    /// Creates a new job to transform input data, using steps defined in an existing Glue DataBrew recipe
    func createRecipeJob(input: CreateRecipeJobInput, completion: @escaping (ClientRuntime.SdkResult<CreateRecipeJobOutputResponse, CreateRecipeJobOutputError>) -> Void)
    /// Creates a new ruleset that can be used in a profile job to validate the data quality of a dataset.
    func createRuleset(input: CreateRulesetInput, completion: @escaping (ClientRuntime.SdkResult<CreateRulesetOutputResponse, CreateRulesetOutputError>) -> Void)
    /// Creates a new schedule for one or more DataBrew jobs. Jobs can be run at a specific date and time, or at regular intervals.
    func createSchedule(input: CreateScheduleInput, completion: @escaping (ClientRuntime.SdkResult<CreateScheduleOutputResponse, CreateScheduleOutputError>) -> Void)
    /// Deletes a dataset from DataBrew.
    func deleteDataset(input: DeleteDatasetInput, completion: @escaping (ClientRuntime.SdkResult<DeleteDatasetOutputResponse, DeleteDatasetOutputError>) -> Void)
    /// Deletes the specified DataBrew job.
    func deleteJob(input: DeleteJobInput, completion: @escaping (ClientRuntime.SdkResult<DeleteJobOutputResponse, DeleteJobOutputError>) -> Void)
    /// Deletes an existing DataBrew project.
    func deleteProject(input: DeleteProjectInput, completion: @escaping (ClientRuntime.SdkResult<DeleteProjectOutputResponse, DeleteProjectOutputError>) -> Void)
    /// Deletes a single version of a DataBrew recipe.
    func deleteRecipeVersion(input: DeleteRecipeVersionInput, completion: @escaping (ClientRuntime.SdkResult<DeleteRecipeVersionOutputResponse, DeleteRecipeVersionOutputError>) -> Void)
    /// Deletes a ruleset.
    func deleteRuleset(input: DeleteRulesetInput, completion: @escaping (ClientRuntime.SdkResult<DeleteRulesetOutputResponse, DeleteRulesetOutputError>) -> Void)
    /// Deletes the specified DataBrew schedule.
    func deleteSchedule(input: DeleteScheduleInput, completion: @escaping (ClientRuntime.SdkResult<DeleteScheduleOutputResponse, DeleteScheduleOutputError>) -> Void)
    /// Returns the definition of a specific DataBrew dataset.
    func describeDataset(input: DescribeDatasetInput, completion: @escaping (ClientRuntime.SdkResult<DescribeDatasetOutputResponse, DescribeDatasetOutputError>) -> Void)
    /// Returns the definition of a specific DataBrew job.
    func describeJob(input: DescribeJobInput, completion: @escaping (ClientRuntime.SdkResult<DescribeJobOutputResponse, DescribeJobOutputError>) -> Void)
    /// Represents one run of a DataBrew job.
    func describeJobRun(input: DescribeJobRunInput, completion: @escaping (ClientRuntime.SdkResult<DescribeJobRunOutputResponse, DescribeJobRunOutputError>) -> Void)
    /// Returns the definition of a specific DataBrew project.
    func describeProject(input: DescribeProjectInput, completion: @escaping (ClientRuntime.SdkResult<DescribeProjectOutputResponse, DescribeProjectOutputError>) -> Void)
    /// Returns the definition of a specific DataBrew recipe corresponding to a particular version.
    func describeRecipe(input: DescribeRecipeInput, completion: @escaping (ClientRuntime.SdkResult<DescribeRecipeOutputResponse, DescribeRecipeOutputError>) -> Void)
    /// Retrieves detailed information about the ruleset.
    func describeRuleset(input: DescribeRulesetInput, completion: @escaping (ClientRuntime.SdkResult<DescribeRulesetOutputResponse, DescribeRulesetOutputError>) -> Void)
    /// Returns the definition of a specific DataBrew schedule.
    func describeSchedule(input: DescribeScheduleInput, completion: @escaping (ClientRuntime.SdkResult<DescribeScheduleOutputResponse, DescribeScheduleOutputError>) -> Void)
    /// Lists all of the DataBrew datasets.
    func listDatasets(input: ListDatasetsInput, completion: @escaping (ClientRuntime.SdkResult<ListDatasetsOutputResponse, ListDatasetsOutputError>) -> Void)
    /// Lists all of the previous runs of a particular DataBrew job.
    func listJobRuns(input: ListJobRunsInput, completion: @escaping (ClientRuntime.SdkResult<ListJobRunsOutputResponse, ListJobRunsOutputError>) -> Void)
    /// Lists all of the DataBrew jobs that are defined.
    func listJobs(input: ListJobsInput, completion: @escaping (ClientRuntime.SdkResult<ListJobsOutputResponse, ListJobsOutputError>) -> Void)
    /// Lists all of the DataBrew projects that are defined.
    func listProjects(input: ListProjectsInput, completion: @escaping (ClientRuntime.SdkResult<ListProjectsOutputResponse, ListProjectsOutputError>) -> Void)
    /// Lists all of the DataBrew recipes that are defined.
    func listRecipes(input: ListRecipesInput, completion: @escaping (ClientRuntime.SdkResult<ListRecipesOutputResponse, ListRecipesOutputError>) -> Void)
    /// Lists the versions of a particular DataBrew recipe, except for LATEST_WORKING.
    func listRecipeVersions(input: ListRecipeVersionsInput, completion: @escaping (ClientRuntime.SdkResult<ListRecipeVersionsOutputResponse, ListRecipeVersionsOutputError>) -> Void)
    /// List all rulesets available in the current account or rulesets associated with a specific resource (dataset).
    func listRulesets(input: ListRulesetsInput, completion: @escaping (ClientRuntime.SdkResult<ListRulesetsOutputResponse, ListRulesetsOutputError>) -> Void)
    /// Lists the DataBrew schedules that are defined.
    func listSchedules(input: ListSchedulesInput, completion: @escaping (ClientRuntime.SdkResult<ListSchedulesOutputResponse, ListSchedulesOutputError>) -> Void)
    /// Lists all the tags for a DataBrew resource.
    func listTagsForResource(input: ListTagsForResourceInput, completion: @escaping (ClientRuntime.SdkResult<ListTagsForResourceOutputResponse, ListTagsForResourceOutputError>) -> Void)
    /// Publishes a new version of a DataBrew recipe.
    func publishRecipe(input: PublishRecipeInput, completion: @escaping (ClientRuntime.SdkResult<PublishRecipeOutputResponse, PublishRecipeOutputError>) -> Void)
    /// Performs a recipe step within an interactive DataBrew session that's currently open.
    func sendProjectSessionAction(input: SendProjectSessionActionInput, completion: @escaping (ClientRuntime.SdkResult<SendProjectSessionActionOutputResponse, SendProjectSessionActionOutputError>) -> Void)
    /// Runs a DataBrew job.
    func startJobRun(input: StartJobRunInput, completion: @escaping (ClientRuntime.SdkResult<StartJobRunOutputResponse, StartJobRunOutputError>) -> Void)
    /// Creates an interactive session, enabling you to manipulate data in a DataBrew project.
    func startProjectSession(input: StartProjectSessionInput, completion: @escaping (ClientRuntime.SdkResult<StartProjectSessionOutputResponse, StartProjectSessionOutputError>) -> Void)
    /// Stops a particular run of a job.
    func stopJobRun(input: StopJobRunInput, completion: @escaping (ClientRuntime.SdkResult<StopJobRunOutputResponse, StopJobRunOutputError>) -> Void)
    /// Adds metadata tags to a DataBrew resource, such as a dataset, project, recipe, job, or schedule.
    func tagResource(input: TagResourceInput, completion: @escaping (ClientRuntime.SdkResult<TagResourceOutputResponse, TagResourceOutputError>) -> Void)
    /// Removes metadata tags from a DataBrew resource.
    func untagResource(input: UntagResourceInput, completion: @escaping (ClientRuntime.SdkResult<UntagResourceOutputResponse, UntagResourceOutputError>) -> Void)
    /// Modifies the definition of an existing DataBrew dataset.
    func updateDataset(input: UpdateDatasetInput, completion: @escaping (ClientRuntime.SdkResult<UpdateDatasetOutputResponse, UpdateDatasetOutputError>) -> Void)
    /// Modifies the definition of an existing profile job.
    func updateProfileJob(input: UpdateProfileJobInput, completion: @escaping (ClientRuntime.SdkResult<UpdateProfileJobOutputResponse, UpdateProfileJobOutputError>) -> Void)
    /// Modifies the definition of an existing DataBrew project.
    func updateProject(input: UpdateProjectInput, completion: @escaping (ClientRuntime.SdkResult<UpdateProjectOutputResponse, UpdateProjectOutputError>) -> Void)
    /// Modifies the definition of the LATEST_WORKING version of a DataBrew recipe.
    func updateRecipe(input: UpdateRecipeInput, completion: @escaping (ClientRuntime.SdkResult<UpdateRecipeOutputResponse, UpdateRecipeOutputError>) -> Void)
    /// Modifies the definition of an existing DataBrew recipe job.
    func updateRecipeJob(input: UpdateRecipeJobInput, completion: @escaping (ClientRuntime.SdkResult<UpdateRecipeJobOutputResponse, UpdateRecipeJobOutputError>) -> Void)
    /// Updates specified ruleset.
    func updateRuleset(input: UpdateRulesetInput, completion: @escaping (ClientRuntime.SdkResult<UpdateRulesetOutputResponse, UpdateRulesetOutputError>) -> Void)
    /// Modifies the definition of an existing DataBrew schedule.
    func updateSchedule(input: UpdateScheduleInput, completion: @escaping (ClientRuntime.SdkResult<UpdateScheduleOutputResponse, UpdateScheduleOutputError>) -> Void)
}

public enum DataBrewClientTypes {}
