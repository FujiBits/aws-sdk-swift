// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDataflowEndpointGroupsOutputResponseBody: Equatable {
    public let nextToken: String?
    public let dataflowEndpointGroupList: [DataflowEndpointListItem]?
}

extension ListDataflowEndpointGroupsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case dataflowEndpointGroupList
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let dataflowEndpointGroupListContainer = try containerValues.decodeIfPresent([DataflowEndpointListItem?].self, forKey: .dataflowEndpointGroupList)
        var dataflowEndpointGroupListDecoded0:[DataflowEndpointListItem]? = nil
        if let dataflowEndpointGroupListContainer = dataflowEndpointGroupListContainer {
            dataflowEndpointGroupListDecoded0 = [DataflowEndpointListItem]()
            for structure0 in dataflowEndpointGroupListContainer {
                if let structure0 = structure0 {
                    dataflowEndpointGroupListDecoded0?.append(structure0)
                }
            }
        }
        dataflowEndpointGroupList = dataflowEndpointGroupListDecoded0
    }
}
