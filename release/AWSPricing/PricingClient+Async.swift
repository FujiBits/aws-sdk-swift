// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

#if swift(>=5.5) && canImport(_Concurrency)
@available(macOS 12.0, iOS 15.0, tvOS 15.0, watchOS 8.0, macCatalyst 15.0, *)
public extension PricingClient {
    /// Returns the metadata for one service or a list of the metadata for all services. Use
    ///          this without a service code to get the service codes for all services.
    ///          Use it with a service code, such as AmazonEC2, to get information specific to
    ///          that service, such as the attribute
    ///          names available for that service. For example, some of the attribute names available for EC2 are
    ///          volumeType, maxIopsVolume, operation,
    ///          locationType, and instanceCapacity10xlarge.
    func describeServices(input: DescribeServicesInput) async throws -> DescribeServicesOutputResponse
    {
        typealias describeServicesContinuation = CheckedContinuation<DescribeServicesOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: describeServicesContinuation) in
            describeServices(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Returns a list of attribute values. Attibutes are similar to the details
    ///           in a Price List API offer file. For a list of available attributes, see
    ///          <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/reading-an-offer.html#pps-defs">Offer File Definitions
    ///          in the <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/billing-what-is.html">Amazon Web Services Billing and Cost Management User Guide.
    func getAttributeValues(input: GetAttributeValuesInput) async throws -> GetAttributeValuesOutputResponse
    {
        typealias getAttributeValuesContinuation = CheckedContinuation<GetAttributeValuesOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: getAttributeValuesContinuation) in
            getAttributeValues(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// Returns a list of all products that match the filter criteria.
    func getProducts(input: GetProductsInput) async throws -> GetProductsOutputResponse
    {
        typealias getProductsContinuation = CheckedContinuation<GetProductsOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: getProductsContinuation) in
            getProducts(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

}
#endif
