// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListReportsForReportGroupOutputResponseBody: Equatable {
    public let nextToken: String?
    public let reports: [String]?
}

extension ListReportsForReportGroupOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case reports
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let reportsContainer = try containerValues.decodeIfPresent([String?].self, forKey: .reports)
        var reportsDecoded0:[String]? = nil
        if let reportsContainer = reportsContainer {
            reportsDecoded0 = [String]()
            for string0 in reportsContainer {
                if let string0 = string0 {
                    reportsDecoded0?.append(string0)
                }
            }
        }
        reports = reportsDecoded0
    }
}
