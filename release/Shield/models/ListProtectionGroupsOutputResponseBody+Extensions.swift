// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListProtectionGroupsOutputResponseBody: Equatable {
    public let protectionGroups: [ProtectionGroup]?
    public let nextToken: String?
}

extension ListProtectionGroupsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case protectionGroups = "ProtectionGroups"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let protectionGroupsContainer = try containerValues.decodeIfPresent([ProtectionGroup?].self, forKey: .protectionGroups)
        var protectionGroupsDecoded0:[ProtectionGroup]? = nil
        if let protectionGroupsContainer = protectionGroupsContainer {
            protectionGroupsDecoded0 = [ProtectionGroup]()
            for structure0 in protectionGroupsContainer {
                if let structure0 = structure0 {
                    protectionGroupsDecoded0?.append(structure0)
                }
            }
        }
        protectionGroups = protectionGroupsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
