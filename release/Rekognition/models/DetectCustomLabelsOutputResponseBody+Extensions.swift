// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DetectCustomLabelsOutputResponseBody: Equatable {
    public let customLabels: [CustomLabel]?
}

extension DetectCustomLabelsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case customLabels = "CustomLabels"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let customLabelsContainer = try containerValues.decodeIfPresent([CustomLabel?].self, forKey: .customLabels)
        var customLabelsDecoded0:[CustomLabel]? = nil
        if let customLabelsContainer = customLabelsContainer {
            customLabelsDecoded0 = [CustomLabel]()
            for structure0 in customLabelsContainer {
                if let structure0 = structure0 {
                    customLabelsDecoded0?.append(structure0)
                }
            }
        }
        customLabels = customLabelsDecoded0
    }
}
