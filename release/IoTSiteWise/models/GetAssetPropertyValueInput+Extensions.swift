// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct GetAssetPropertyValueInputHeadersMiddleware: Middleware {
    public let id: String = "GetAssetPropertyValueInputHeadersMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<GetAssetPropertyValueInput>,
                  next: H) -> Swift.Result<OperationOutput<GetAssetPropertyValueOutputResponse>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<GetAssetPropertyValueInput>
    public typealias MOutput = OperationOutput<GetAssetPropertyValueOutputResponse>
    public typealias Context = ClientRuntime.HttpContext
    public typealias MError = SdkError<GetAssetPropertyValueOutputError>
}

public struct GetAssetPropertyValueInputQueryItemMiddleware: Middleware {
    public let id: String = "GetAssetPropertyValueInputQueryItemMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<GetAssetPropertyValueInput>,
                  next: H) -> Swift.Result<OperationOutput<GetAssetPropertyValueOutputResponse>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        if let assetId = input.operationInput.assetId {
            let assetIdQueryItem = URLQueryItem(name: "assetId".urlPercentEncoding(), value: String(assetId).urlPercentEncoding())
            input.builder.withQueryItem(assetIdQueryItem)
        }
        if let propertyAlias = input.operationInput.propertyAlias {
            let propertyAliasQueryItem = URLQueryItem(name: "propertyAlias".urlPercentEncoding(), value: String(propertyAlias).urlPercentEncoding())
            input.builder.withQueryItem(propertyAliasQueryItem)
        }
        if let propertyId = input.operationInput.propertyId {
            let propertyIdQueryItem = URLQueryItem(name: "propertyId".urlPercentEncoding(), value: String(propertyId).urlPercentEncoding())
            input.builder.withQueryItem(propertyIdQueryItem)
        }
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<GetAssetPropertyValueInput>
    public typealias MOutput = OperationOutput<GetAssetPropertyValueOutputResponse>
    public typealias Context = ClientRuntime.HttpContext
    public typealias MError = SdkError<GetAssetPropertyValueOutputError>
}

extension GetAssetPropertyValueInput: Encodable, Reflection {

    public func encode(to encoder: Encoder) throws {
    }
}
