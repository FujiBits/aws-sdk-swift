// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct StopActivityStreamOutputResponseBody: Equatable {
    public let kmsKeyId: String?
    public let kinesisStreamName: String?
    public let status: ActivityStreamStatus?
}

extension StopActivityStreamOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case kinesisStreamName = "KinesisStreamName"
        case kmsKeyId = "KmsKeyId"
        case status = "Status"
    }

    public init (from decoder: Decoder) throws {
        let topLevelContainer = try decoder.container(keyedBy: Key.self)
        let containerValues = try topLevelContainer.nestedContainer(keyedBy: CodingKeys.self, forKey: Key("StopActivityStreamResult"))
        let kmsKeyIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .kmsKeyId)
        kmsKeyId = kmsKeyIdDecoded
        let kinesisStreamNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .kinesisStreamName)
        kinesisStreamName = kinesisStreamNameDecoded
        let statusDecoded = try containerValues.decodeIfPresent(ActivityStreamStatus.self, forKey: .status)
        status = statusDecoded
    }
}
