// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Configuration information for the JWT token type.</p>
public struct JwtTokenTypeConfiguration: Equatable {
    /// <p>The regular expression that identifies the claim.</p>
    public let claimRegex: String?
    /// <p>The group attribute field.</p>
    public let groupAttributeField: String?
    /// <p>The issuer of the token.</p>
    public let issuer: String?
    /// <p>The location of the key.</p>
    public let keyLocation: KeyLocation?
    /// <p>The Amazon Resource Name (arn) of the secret.</p>
    public let secretManagerArn: String?
    /// <p>The signing key URL.</p>
    public let uRL: String?
    /// <p>The user name attribute field.</p>
    public let userNameAttributeField: String?

    public init (
        claimRegex: String? = nil,
        groupAttributeField: String? = nil,
        issuer: String? = nil,
        keyLocation: KeyLocation? = nil,
        secretManagerArn: String? = nil,
        uRL: String? = nil,
        userNameAttributeField: String? = nil
    )
    {
        self.claimRegex = claimRegex
        self.groupAttributeField = groupAttributeField
        self.issuer = issuer
        self.keyLocation = keyLocation
        self.secretManagerArn = secretManagerArn
        self.uRL = uRL
        self.userNameAttributeField = userNameAttributeField
    }
}

extension JwtTokenTypeConfiguration: CustomDebugStringConvertible {
    public var debugDescription: String {
        "JwtTokenTypeConfiguration(claimRegex: \(String(describing: claimRegex)), groupAttributeField: \(String(describing: groupAttributeField)), issuer: \(String(describing: issuer)), keyLocation: \(String(describing: keyLocation)), secretManagerArn: \(String(describing: secretManagerArn)), uRL: \(String(describing: uRL)), userNameAttributeField: \(String(describing: userNameAttributeField)))"}
}
