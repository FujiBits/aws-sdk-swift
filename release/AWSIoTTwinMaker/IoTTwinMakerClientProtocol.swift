// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// TwinMaker is in public preview and is subject to change. IoT TwinMaker is a service that enables you to build operational digital twins of physical systems. IoT TwinMaker overlays measurements and analysis from real-world sensors, cameras, and enterprise applications so you can create data visualizations to monitor your physical factory, building, or industrial plant. You can use this real-world data to monitor operations and diagnose and repair errors.
public protocol IoTTwinMakerClientProtocol {
    /// Sets values for multiple time series properties.
    func batchPutPropertyValues(input: BatchPutPropertyValuesInput, completion: @escaping (ClientRuntime.SdkResult<BatchPutPropertyValuesOutputResponse, BatchPutPropertyValuesOutputError>) -> Void)
    /// Creates a component type. TwinMaker is in public preview and is subject to change.
    func createComponentType(input: CreateComponentTypeInput, completion: @escaping (ClientRuntime.SdkResult<CreateComponentTypeOutputResponse, CreateComponentTypeOutputError>) -> Void)
    /// Creates an entity.
    func createEntity(input: CreateEntityInput, completion: @escaping (ClientRuntime.SdkResult<CreateEntityOutputResponse, CreateEntityOutputError>) -> Void)
    /// Creates a scene.
    func createScene(input: CreateSceneInput, completion: @escaping (ClientRuntime.SdkResult<CreateSceneOutputResponse, CreateSceneOutputError>) -> Void)
    /// Creates a workplace.
    func createWorkspace(input: CreateWorkspaceInput, completion: @escaping (ClientRuntime.SdkResult<CreateWorkspaceOutputResponse, CreateWorkspaceOutputError>) -> Void)
    /// Deletes a component type.
    func deleteComponentType(input: DeleteComponentTypeInput, completion: @escaping (ClientRuntime.SdkResult<DeleteComponentTypeOutputResponse, DeleteComponentTypeOutputError>) -> Void)
    /// Deletes an entity.
    func deleteEntity(input: DeleteEntityInput, completion: @escaping (ClientRuntime.SdkResult<DeleteEntityOutputResponse, DeleteEntityOutputError>) -> Void)
    /// Deletes a scene.
    func deleteScene(input: DeleteSceneInput, completion: @escaping (ClientRuntime.SdkResult<DeleteSceneOutputResponse, DeleteSceneOutputError>) -> Void)
    /// Deletes a workspace.
    func deleteWorkspace(input: DeleteWorkspaceInput, completion: @escaping (ClientRuntime.SdkResult<DeleteWorkspaceOutputResponse, DeleteWorkspaceOutputError>) -> Void)
    /// Retrieves information about a component type.
    func getComponentType(input: GetComponentTypeInput, completion: @escaping (ClientRuntime.SdkResult<GetComponentTypeOutputResponse, GetComponentTypeOutputError>) -> Void)
    /// Retrieves information about an entity.
    func getEntity(input: GetEntityInput, completion: @escaping (ClientRuntime.SdkResult<GetEntityOutputResponse, GetEntityOutputError>) -> Void)
    /// Gets the property values for a component, component type, entity, or workspace. You must specify a value for either componentName, componentTypeId, entityId, or workspaceId.
    func getPropertyValue(input: GetPropertyValueInput, completion: @escaping (ClientRuntime.SdkResult<GetPropertyValueOutputResponse, GetPropertyValueOutputError>) -> Void)
    /// Retrieves information about the history of a time series property value for a component, component type, entity, or workspace. You must specify a value for workspaceId. For entity-specific queries, specify values for componentName and entityId. For cross-entity quries, specify a value for componentTypeId.
    func getPropertyValueHistory(input: GetPropertyValueHistoryInput, completion: @escaping (ClientRuntime.SdkResult<GetPropertyValueHistoryOutputResponse, GetPropertyValueHistoryOutputError>) -> Void)
    /// Retrieves information about a scene.
    func getScene(input: GetSceneInput, completion: @escaping (ClientRuntime.SdkResult<GetSceneOutputResponse, GetSceneOutputError>) -> Void)
    /// Retrieves information about a workspace.
    func getWorkspace(input: GetWorkspaceInput, completion: @escaping (ClientRuntime.SdkResult<GetWorkspaceOutputResponse, GetWorkspaceOutputError>) -> Void)
    /// Lists all component types in a workspace.
    func listComponentTypes(input: ListComponentTypesInput, completion: @escaping (ClientRuntime.SdkResult<ListComponentTypesOutputResponse, ListComponentTypesOutputError>) -> Void)
    /// Lists all entities in a workspace.
    func listEntities(input: ListEntitiesInput, completion: @escaping (ClientRuntime.SdkResult<ListEntitiesOutputResponse, ListEntitiesOutputError>) -> Void)
    /// Lists all scenes in a workspace.
    func listScenes(input: ListScenesInput, completion: @escaping (ClientRuntime.SdkResult<ListScenesOutputResponse, ListScenesOutputError>) -> Void)
    /// Lists all tags associated with a resource.
    func listTagsForResource(input: ListTagsForResourceInput, completion: @escaping (ClientRuntime.SdkResult<ListTagsForResourceOutputResponse, ListTagsForResourceOutputError>) -> Void)
    /// Retrieves information about workspaces in the current account.
    func listWorkspaces(input: ListWorkspacesInput, completion: @escaping (ClientRuntime.SdkResult<ListWorkspacesOutputResponse, ListWorkspacesOutputError>) -> Void)
    /// Adds tags to a resource.
    func tagResource(input: TagResourceInput, completion: @escaping (ClientRuntime.SdkResult<TagResourceOutputResponse, TagResourceOutputError>) -> Void)
    /// Removes tags from a resource.
    func untagResource(input: UntagResourceInput, completion: @escaping (ClientRuntime.SdkResult<UntagResourceOutputResponse, UntagResourceOutputError>) -> Void)
    /// Updates information in a component type.
    func updateComponentType(input: UpdateComponentTypeInput, completion: @escaping (ClientRuntime.SdkResult<UpdateComponentTypeOutputResponse, UpdateComponentTypeOutputError>) -> Void)
    /// Updates an entity.
    func updateEntity(input: UpdateEntityInput, completion: @escaping (ClientRuntime.SdkResult<UpdateEntityOutputResponse, UpdateEntityOutputError>) -> Void)
    /// Updates a scene.
    func updateScene(input: UpdateSceneInput, completion: @escaping (ClientRuntime.SdkResult<UpdateSceneOutputResponse, UpdateSceneOutputError>) -> Void)
    /// Updates a workspace.
    func updateWorkspace(input: UpdateWorkspaceInput, completion: @escaping (ClientRuntime.SdkResult<UpdateWorkspaceOutputResponse, UpdateWorkspaceOutputError>) -> Void)
}

public enum IoTTwinMakerClientTypes {}
