// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetProvisionedProductOutputsOutputResponseBody: Equatable {
    public let outputs: [RecordOutput]?
    public let nextPageToken: String?
}

extension GetProvisionedProductOutputsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextPageToken = "NextPageToken"
        case outputs = "Outputs"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let outputsContainer = try containerValues.decodeIfPresent([RecordOutput?].self, forKey: .outputs)
        var outputsDecoded0:[RecordOutput]? = nil
        if let outputsContainer = outputsContainer {
            outputsDecoded0 = [RecordOutput]()
            for structure0 in outputsContainer {
                if let structure0 = structure0 {
                    outputsDecoded0?.append(structure0)
                }
            }
        }
        outputs = outputsDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
