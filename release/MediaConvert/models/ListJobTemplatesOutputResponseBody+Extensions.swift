// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListJobTemplatesOutputResponseBody: Equatable {
    public let jobTemplates: [JobTemplate]?
    public let nextToken: String?
}

extension ListJobTemplatesOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case jobTemplates = "jobTemplates"
        case nextToken = "nextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let jobTemplatesContainer = try containerValues.decodeIfPresent([JobTemplate?].self, forKey: .jobTemplates)
        var jobTemplatesDecoded0:[JobTemplate]? = nil
        if let jobTemplatesContainer = jobTemplatesContainer {
            jobTemplatesDecoded0 = [JobTemplate]()
            for structure0 in jobTemplatesContainer {
                if let structure0 = structure0 {
                    jobTemplatesDecoded0?.append(structure0)
                }
            }
        }
        jobTemplates = jobTemplatesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
