// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListImagesOutputResponseBody: Equatable {
    public let images: [Image]?
    public let nextToken: String?
}

extension ListImagesOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case images = "Images"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let imagesContainer = try containerValues.decodeIfPresent([Image?].self, forKey: .images)
        var imagesDecoded0:[Image]? = nil
        if let imagesContainer = imagesContainer {
            imagesDecoded0 = [Image]()
            for structure0 in imagesContainer {
                if let structure0 = structure0 {
                    imagesDecoded0?.append(structure0)
                }
            }
        }
        images = imagesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
