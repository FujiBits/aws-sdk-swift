// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListActionsOutputResponseBody: Equatable {
    public let actionSummaries: [ActionSummary]?
    public let nextToken: String?
}

extension ListActionsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case actionSummaries = "ActionSummaries"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let actionSummariesContainer = try containerValues.decodeIfPresent([ActionSummary?].self, forKey: .actionSummaries)
        var actionSummariesDecoded0:[ActionSummary]? = nil
        if let actionSummariesContainer = actionSummariesContainer {
            actionSummariesDecoded0 = [ActionSummary]()
            for structure0 in actionSummariesContainer {
                if let structure0 = structure0 {
                    actionSummariesDecoded0?.append(structure0)
                }
            }
        }
        actionSummaries = actionSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
