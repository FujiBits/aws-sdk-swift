// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct UpdateTrialComponentInput: Equatable {
    /// <p>The name of the component as displayed. The name doesn't need to be unique. If
    ///         <code>DisplayName</code> isn't specified, <code>TrialComponentName</code> is
    ///       displayed.</p>
    public let displayName: String?
    /// <p>When the component ended.</p>
    public let endTime: Date?
    /// <p>Replaces all of the component's input artifacts with the specified artifacts.</p>
    public let inputArtifacts: [String:TrialComponentArtifact]?
    /// <p>The input artifacts to remove from the component.</p>
    public let inputArtifactsToRemove: [String]?
    /// <p>Replaces all of the component's output artifacts with the specified artifacts.</p>
    public let outputArtifacts: [String:TrialComponentArtifact]?
    /// <p>The output artifacts to remove from the component.</p>
    public let outputArtifactsToRemove: [String]?
    /// <p>Replaces all of the component's hyperparameters with the specified hyperparameters.</p>
    public let parameters: [String:TrialComponentParameterValue]?
    /// <p>The hyperparameters to remove from the component.</p>
    public let parametersToRemove: [String]?
    /// <p>When the component started.</p>
    public let startTime: Date?
    /// <p>The new status of the component.</p>
    public let status: TrialComponentStatus?
    /// <p>The name of the component to update.</p>
    public let trialComponentName: String?

    public init (
        displayName: String? = nil,
        endTime: Date? = nil,
        inputArtifacts: [String:TrialComponentArtifact]? = nil,
        inputArtifactsToRemove: [String]? = nil,
        outputArtifacts: [String:TrialComponentArtifact]? = nil,
        outputArtifactsToRemove: [String]? = nil,
        parameters: [String:TrialComponentParameterValue]? = nil,
        parametersToRemove: [String]? = nil,
        startTime: Date? = nil,
        status: TrialComponentStatus? = nil,
        trialComponentName: String? = nil
    )
    {
        self.displayName = displayName
        self.endTime = endTime
        self.inputArtifacts = inputArtifacts
        self.inputArtifactsToRemove = inputArtifactsToRemove
        self.outputArtifacts = outputArtifacts
        self.outputArtifactsToRemove = outputArtifactsToRemove
        self.parameters = parameters
        self.parametersToRemove = parametersToRemove
        self.startTime = startTime
        self.status = status
        self.trialComponentName = trialComponentName
    }
}

extension UpdateTrialComponentInput: CustomDebugStringConvertible {
    public var debugDescription: String {
        "UpdateTrialComponentInput(displayName: \(String(describing: displayName)), endTime: \(String(describing: endTime)), inputArtifacts: \(String(describing: inputArtifacts)), inputArtifactsToRemove: \(String(describing: inputArtifactsToRemove)), outputArtifacts: \(String(describing: outputArtifacts)), outputArtifactsToRemove: \(String(describing: outputArtifactsToRemove)), parameters: \(String(describing: parameters)), parametersToRemove: \(String(describing: parametersToRemove)), startTime: \(String(describing: startTime)), status: \(String(describing: status)), trialComponentName: \(String(describing: trialComponentName)))"}
}
