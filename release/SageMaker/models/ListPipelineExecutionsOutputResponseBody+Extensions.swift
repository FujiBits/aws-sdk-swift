// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPipelineExecutionsOutputResponseBody: Equatable {
    public let pipelineExecutionSummaries: [PipelineExecutionSummary]?
    public let nextToken: String?
}

extension ListPipelineExecutionsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case pipelineExecutionSummaries = "PipelineExecutionSummaries"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let pipelineExecutionSummariesContainer = try containerValues.decodeIfPresent([PipelineExecutionSummary?].self, forKey: .pipelineExecutionSummaries)
        var pipelineExecutionSummariesDecoded0:[PipelineExecutionSummary]? = nil
        if let pipelineExecutionSummariesContainer = pipelineExecutionSummariesContainer {
            pipelineExecutionSummariesDecoded0 = [PipelineExecutionSummary]()
            for structure0 in pipelineExecutionSummariesContainer {
                if let structure0 = structure0 {
                    pipelineExecutionSummariesDecoded0?.append(structure0)
                }
            }
        }
        pipelineExecutionSummaries = pipelineExecutionSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
