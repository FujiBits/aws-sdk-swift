// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListContextsOutputResponseBody: Equatable {
    public let contextSummaries: [ContextSummary]?
    public let nextToken: String?
}

extension ListContextsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case contextSummaries = "ContextSummaries"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let contextSummariesContainer = try containerValues.decodeIfPresent([ContextSummary?].self, forKey: .contextSummaries)
        var contextSummariesDecoded0:[ContextSummary]? = nil
        if let contextSummariesContainer = contextSummariesContainer {
            contextSummariesDecoded0 = [ContextSummary]()
            for structure0 in contextSummariesContainer {
                if let structure0 = structure0 {
                    contextSummariesDecoded0?.append(structure0)
                }
            }
        }
        contextSummaries = contextSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
