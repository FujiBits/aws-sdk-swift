// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListArtifactsOutputResponseBody: Equatable {
    public let artifactSummaries: [ArtifactSummary]?
    public let nextToken: String?
}

extension ListArtifactsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case artifactSummaries = "ArtifactSummaries"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let artifactSummariesContainer = try containerValues.decodeIfPresent([ArtifactSummary?].self, forKey: .artifactSummaries)
        var artifactSummariesDecoded0:[ArtifactSummary]? = nil
        if let artifactSummariesContainer = artifactSummariesContainer {
            artifactSummariesDecoded0 = [ArtifactSummary]()
            for structure0 in artifactSummariesContainer {
                if let structure0 = structure0 {
                    artifactSummariesDecoded0?.append(structure0)
                }
            }
        }
        artifactSummaries = artifactSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
