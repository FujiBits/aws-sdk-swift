// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAssociationsOutputResponseBody: Equatable {
    public let associationSummaries: [AssociationSummary]?
    public let nextToken: String?
}

extension ListAssociationsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case associationSummaries = "AssociationSummaries"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let associationSummariesContainer = try containerValues.decodeIfPresent([AssociationSummary?].self, forKey: .associationSummaries)
        var associationSummariesDecoded0:[AssociationSummary]? = nil
        if let associationSummariesContainer = associationSummariesContainer {
            associationSummariesDecoded0 = [AssociationSummary]()
            for structure0 in associationSummariesContainer {
                if let structure0 = structure0 {
                    associationSummariesDecoded0?.append(structure0)
                }
            }
        }
        associationSummaries = associationSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
