// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPipelinesOutputResponseBody: Equatable {
    public let pipelineSummaries: [PipelineSummary]?
    public let nextToken: String?
}

extension ListPipelinesOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case pipelineSummaries = "PipelineSummaries"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let pipelineSummariesContainer = try containerValues.decodeIfPresent([PipelineSummary?].self, forKey: .pipelineSummaries)
        var pipelineSummariesDecoded0:[PipelineSummary]? = nil
        if let pipelineSummariesContainer = pipelineSummariesContainer {
            pipelineSummariesDecoded0 = [PipelineSummary]()
            for structure0 in pipelineSummariesContainer {
                if let structure0 = structure0 {
                    pipelineSummariesDecoded0?.append(structure0)
                }
            }
        }
        pipelineSummaries = pipelineSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
