// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListNotebookInstanceLifecycleConfigsOutputResponseBody: Equatable {
    public let nextToken: String?
    public let notebookInstanceLifecycleConfigs: [NotebookInstanceLifecycleConfigSummary]?
}

extension ListNotebookInstanceLifecycleConfigsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case notebookInstanceLifecycleConfigs = "NotebookInstanceLifecycleConfigs"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let notebookInstanceLifecycleConfigsContainer = try containerValues.decodeIfPresent([NotebookInstanceLifecycleConfigSummary?].self, forKey: .notebookInstanceLifecycleConfigs)
        var notebookInstanceLifecycleConfigsDecoded0:[NotebookInstanceLifecycleConfigSummary]? = nil
        if let notebookInstanceLifecycleConfigsContainer = notebookInstanceLifecycleConfigsContainer {
            notebookInstanceLifecycleConfigsDecoded0 = [NotebookInstanceLifecycleConfigSummary]()
            for structure0 in notebookInstanceLifecycleConfigsContainer {
                if let structure0 = structure0 {
                    notebookInstanceLifecycleConfigsDecoded0?.append(structure0)
                }
            }
        }
        notebookInstanceLifecycleConfigs = notebookInstanceLifecycleConfigsDecoded0
    }
}
