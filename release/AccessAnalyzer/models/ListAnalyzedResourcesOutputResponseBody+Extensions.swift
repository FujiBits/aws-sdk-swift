// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAnalyzedResourcesOutputResponseBody: Equatable {
    public let analyzedResources: [AnalyzedResourceSummary]?
    public let nextToken: String?
}

extension ListAnalyzedResourcesOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case analyzedResources
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let analyzedResourcesContainer = try containerValues.decodeIfPresent([AnalyzedResourceSummary?].self, forKey: .analyzedResources)
        var analyzedResourcesDecoded0:[AnalyzedResourceSummary]? = nil
        if let analyzedResourcesContainer = analyzedResourcesContainer {
            analyzedResourcesDecoded0 = [AnalyzedResourceSummary]()
            for structure0 in analyzedResourcesContainer {
                if let structure0 = structure0 {
                    analyzedResourcesDecoded0?.append(structure0)
                }
            }
        }
        analyzedResources = analyzedResourcesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
