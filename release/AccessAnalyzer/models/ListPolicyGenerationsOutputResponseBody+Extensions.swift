// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPolicyGenerationsOutputResponseBody: Equatable {
    public let policyGenerations: [PolicyGeneration]?
    public let nextToken: String?
}

extension ListPolicyGenerationsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case policyGenerations
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let policyGenerationsContainer = try containerValues.decodeIfPresent([PolicyGeneration?].self, forKey: .policyGenerations)
        var policyGenerationsDecoded0:[PolicyGeneration]? = nil
        if let policyGenerationsContainer = policyGenerationsContainer {
            policyGenerationsDecoded0 = [PolicyGeneration]()
            for structure0 in policyGenerationsContainer {
                if let structure0 = structure0 {
                    policyGenerationsDecoded0?.append(structure0)
                }
            }
        }
        policyGenerations = policyGenerationsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
