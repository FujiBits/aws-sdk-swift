// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAnalyzersOutputResponseBody: Equatable {
    public let analyzers: [AnalyzerSummary]?
    public let nextToken: String?
}

extension ListAnalyzersOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case analyzers
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let analyzersContainer = try containerValues.decodeIfPresent([AnalyzerSummary?].self, forKey: .analyzers)
        var analyzersDecoded0:[AnalyzerSummary]? = nil
        if let analyzersContainer = analyzersContainer {
            analyzersDecoded0 = [AnalyzerSummary]()
            for structure0 in analyzersContainer {
                if let structure0 = structure0 {
                    analyzersDecoded0?.append(structure0)
                }
            }
        }
        analyzers = analyzersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
