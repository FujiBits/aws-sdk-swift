// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeScalingPlanResourcesOutputResponseBody: Equatable {
    public let scalingPlanResources: [ScalingPlanResource]?
    public let nextToken: String?
}

extension DescribeScalingPlanResourcesOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case scalingPlanResources = "ScalingPlanResources"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let scalingPlanResourcesContainer = try containerValues.decodeIfPresent([ScalingPlanResource?].self, forKey: .scalingPlanResources)
        var scalingPlanResourcesDecoded0:[ScalingPlanResource]? = nil
        if let scalingPlanResourcesContainer = scalingPlanResourcesContainer {
            scalingPlanResourcesDecoded0 = [ScalingPlanResource]()
            for structure0 in scalingPlanResourcesContainer {
                if let structure0 = structure0 {
                    scalingPlanResourcesDecoded0?.append(structure0)
                }
            }
        }
        scalingPlanResources = scalingPlanResourcesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
