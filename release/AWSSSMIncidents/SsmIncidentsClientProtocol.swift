// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// AWS Systems Manager Incident Manager is an incident management console designed to help
///       users mitigate and recover from incidents affecting their AWS-hosted applications. An incident
///       is any unplanned interruption or reduction in quality of services.
///          Incident Manager increases incident resolution by notifying responders of impact,
///       highlighting relevant troubleshooting data, and providing collaboration tools to get services
///       back up and running. To achieve the primary goal of reducing the time-to-resolution of
///       critical incidents, Incident Manager automates response plans and enables responder team
///       escalation.
public protocol SsmIncidentsClientProtocol {
    /// A replication set replicates and encrypts your data to the provided Regions with the
    ///             provided KMS key.
    func createReplicationSet(input: CreateReplicationSetInput, completion: @escaping (ClientRuntime.SdkResult<CreateReplicationSetOutputResponse, CreateReplicationSetOutputError>) -> Void)
    /// Creates a response plan that automates the initial response to incidents. A response
    ///             plan engages contacts, starts chat channel collaboration, and
    ///             initiates
    ///             runbooks at the beginning of an incident.
    func createResponsePlan(input: CreateResponsePlanInput, completion: @escaping (ClientRuntime.SdkResult<CreateResponsePlanOutputResponse, CreateResponsePlanOutputError>) -> Void)
    /// Creates a custom timeline event on the incident details page of an incident record.
    ///             Timeline events are automatically created by Incident Manager, marking key moment during an
    ///             incident. You can create custom timeline events to mark important events that are
    ///             automatically detected by Incident Manager.
    func createTimelineEvent(input: CreateTimelineEventInput, completion: @escaping (ClientRuntime.SdkResult<CreateTimelineEventOutputResponse, CreateTimelineEventOutputError>) -> Void)
    /// Delete an incident record from Incident Manager.
    func deleteIncidentRecord(input: DeleteIncidentRecordInput, completion: @escaping (ClientRuntime.SdkResult<DeleteIncidentRecordOutputResponse, DeleteIncidentRecordOutputError>) -> Void)
    /// Deletes all Regions in your replication set. Deleting the replication set deletes all
    ///             Incident Manager data.
    func deleteReplicationSet(input: DeleteReplicationSetInput, completion: @escaping (ClientRuntime.SdkResult<DeleteReplicationSetOutputResponse, DeleteReplicationSetOutputError>) -> Void)
    /// Deletes the resource policy that
    ///             AWS
    ///             Resource Access Manager uses to share your Incident Manager resource.
    func deleteResourcePolicy(input: DeleteResourcePolicyInput, completion: @escaping (ClientRuntime.SdkResult<DeleteResourcePolicyOutputResponse, DeleteResourcePolicyOutputError>) -> Void)
    /// Deletes the specified response plan. Deleting a response plan stops all linked
    ///             CloudWatch alarms and EventBridge events from creating an incident with this response
    ///             plan.
    func deleteResponsePlan(input: DeleteResponsePlanInput, completion: @escaping (ClientRuntime.SdkResult<DeleteResponsePlanOutputResponse, DeleteResponsePlanOutputError>) -> Void)
    /// Deletes a timeline event from an incident.
    func deleteTimelineEvent(input: DeleteTimelineEventInput, completion: @escaping (ClientRuntime.SdkResult<DeleteTimelineEventOutputResponse, DeleteTimelineEventOutputError>) -> Void)
    /// Returns the details of the specified incident record.
    func getIncidentRecord(input: GetIncidentRecordInput, completion: @escaping (ClientRuntime.SdkResult<GetIncidentRecordOutputResponse, GetIncidentRecordOutputError>) -> Void)
    /// Retrieve your Incident Manager replication set.
    func getReplicationSet(input: GetReplicationSetInput, completion: @escaping (ClientRuntime.SdkResult<GetReplicationSetOutputResponse, GetReplicationSetOutputError>) -> Void)
    /// Retrieves the resource policies attached to the specified response plan.
    func getResourcePolicies(input: GetResourcePoliciesInput, completion: @escaping (ClientRuntime.SdkResult<GetResourcePoliciesOutputResponse, GetResourcePoliciesOutputError>) -> Void)
    /// Retrieves the details of the specified response plan.
    func getResponsePlan(input: GetResponsePlanInput, completion: @escaping (ClientRuntime.SdkResult<GetResponsePlanOutputResponse, GetResponsePlanOutputError>) -> Void)
    /// Retrieves a timeline event based on its ID and incident record.
    func getTimelineEvent(input: GetTimelineEventInput, completion: @escaping (ClientRuntime.SdkResult<GetTimelineEventOutputResponse, GetTimelineEventOutputError>) -> Void)
    /// Lists all incident records in your account. Use this command to retrieve the Amazon
    ///             Resource Name (ARN) of the incident record you want to update.
    func listIncidentRecords(input: ListIncidentRecordsInput, completion: @escaping (ClientRuntime.SdkResult<ListIncidentRecordsOutputResponse, ListIncidentRecordsOutputError>) -> Void)
    /// List all related items for an incident record.
    func listRelatedItems(input: ListRelatedItemsInput, completion: @escaping (ClientRuntime.SdkResult<ListRelatedItemsOutputResponse, ListRelatedItemsOutputError>) -> Void)
    /// Lists details about the replication set configured in your account.
    func listReplicationSets(input: ListReplicationSetsInput, completion: @escaping (ClientRuntime.SdkResult<ListReplicationSetsOutputResponse, ListReplicationSetsOutputError>) -> Void)
    /// Lists all response plans in your account.
    func listResponsePlans(input: ListResponsePlansInput, completion: @escaping (ClientRuntime.SdkResult<ListResponsePlansOutputResponse, ListResponsePlansOutputError>) -> Void)
    /// Lists the tags that are attached to the specified response plan.
    func listTagsForResource(input: ListTagsForResourceInput, completion: @escaping (ClientRuntime.SdkResult<ListTagsForResourceOutputResponse, ListTagsForResourceOutputError>) -> Void)
    /// Lists timeline events of the specified incident record.
    func listTimelineEvents(input: ListTimelineEventsInput, completion: @escaping (ClientRuntime.SdkResult<ListTimelineEventsOutputResponse, ListTimelineEventsOutputError>) -> Void)
    /// Adds a resource policy to the specified response plan.
    func putResourcePolicy(input: PutResourcePolicyInput, completion: @escaping (ClientRuntime.SdkResult<PutResourcePolicyOutputResponse, PutResourcePolicyOutputError>) -> Void)
    /// Used to start an incident from CloudWatch alarms, EventBridge events, or manually.
    func startIncident(input: StartIncidentInput, completion: @escaping (ClientRuntime.SdkResult<StartIncidentOutputResponse, StartIncidentOutputError>) -> Void)
    /// Adds a tag to a response plan.
    func tagResource(input: TagResourceInput, completion: @escaping (ClientRuntime.SdkResult<TagResourceOutputResponse, TagResourceOutputError>) -> Void)
    /// Removes a tag from a resource.
    func untagResource(input: UntagResourceInput, completion: @escaping (ClientRuntime.SdkResult<UntagResourceOutputResponse, UntagResourceOutputError>) -> Void)
    /// Update deletion protection to either allow or deny deletion of the final Region in a
    ///             replication set.
    func updateDeletionProtection(input: UpdateDeletionProtectionInput, completion: @escaping (ClientRuntime.SdkResult<UpdateDeletionProtectionOutputResponse, UpdateDeletionProtectionOutputError>) -> Void)
    /// Update the details of an incident record. You can use this action to update an
    ///             incident record from the defined chat channel. For more information about using actions
    ///             in chat channels, see <a href="https://docs.aws.amazon.com/incident-manager/latest/userguide/chat.html#chat-interact">Interacting through chat.
    func updateIncidentRecord(input: UpdateIncidentRecordInput, completion: @escaping (ClientRuntime.SdkResult<UpdateIncidentRecordOutputResponse, UpdateIncidentRecordOutputError>) -> Void)
    /// Add or remove related items from the related items tab of an incident record.
    func updateRelatedItems(input: UpdateRelatedItemsInput, completion: @escaping (ClientRuntime.SdkResult<UpdateRelatedItemsOutputResponse, UpdateRelatedItemsOutputError>) -> Void)
    /// Add or delete Regions from your replication set.
    func updateReplicationSet(input: UpdateReplicationSetInput, completion: @escaping (ClientRuntime.SdkResult<UpdateReplicationSetOutputResponse, UpdateReplicationSetOutputError>) -> Void)
    /// Updates the specified response plan.
    func updateResponsePlan(input: UpdateResponsePlanInput, completion: @escaping (ClientRuntime.SdkResult<UpdateResponsePlanOutputResponse, UpdateResponsePlanOutputError>) -> Void)
    /// Updates a timeline event. You can update events of type Custom
    ///             Event.
    func updateTimelineEvent(input: UpdateTimelineEventInput, completion: @escaping (ClientRuntime.SdkResult<UpdateTimelineEventOutputResponse, UpdateTimelineEventOutputError>) -> Void)
}

public enum SsmIncidentsClientTypes {}
