// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetDimensionKeyDetailsOutputResponseBody: Equatable {
    public let dimensions: [DimensionKeyDetail]?
}

extension GetDimensionKeyDetailsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case dimensions = "Dimensions"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dimensionsContainer = try containerValues.decodeIfPresent([DimensionKeyDetail?].self, forKey: .dimensions)
        var dimensionsDecoded0:[DimensionKeyDetail]? = nil
        if let dimensionsContainer = dimensionsContainer {
            dimensionsDecoded0 = [DimensionKeyDetail]()
            for structure0 in dimensionsContainer {
                if let structure0 = structure0 {
                    dimensionsDecoded0?.append(structure0)
                }
            }
        }
        dimensions = dimensionsDecoded0
    }
}
