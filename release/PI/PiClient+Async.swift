// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

#if swift(>=5.5)
@available(macOS 12.0, iOS 15.0, tvOS 15.0, watchOS 8.0, macCatalyst 15.0, *)
public extension PiClient {
    /// <p>For a specific time period, retrieve the top <code>N</code> dimension keys for a
    ///       metric.</p>
    ///          <note>
    ///             <p>Each response element returns a maximum of 500 bytes. For larger elements, such as SQL statements,
    ///         only the first 500 bytes are returned.</p>
    ///          </note>
    func describeDimensionKeys(input: DescribeDimensionKeysInput) async throws -> DescribeDimensionKeysOutputResponse
    {
        typealias describeDimensionKeysContinuation = CheckedContinuation<DescribeDimensionKeysOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: describeDimensionKeysContinuation) in
            describeDimensionKeys(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// <p>Get the attributes of the specified dimension group for a DB instance or data source. For example, if you specify a
    ///       SQL ID, <code>GetDimensionKeyDetails</code> retrieves the full text of the dimension <code>db.sql.statement</code>
    ///       associated with this ID. This operation is useful because <code>GetResourceMetrics</code> and
    ///         <code>DescribeDimensionKeys</code> don't support retrieval of large SQL statement text.</p>
    func getDimensionKeyDetails(input: GetDimensionKeyDetailsInput) async throws -> GetDimensionKeyDetailsOutputResponse
    {
        typealias getDimensionKeyDetailsContinuation = CheckedContinuation<GetDimensionKeyDetailsOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: getDimensionKeyDetailsContinuation) in
            getDimensionKeyDetails(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

    /// <p>Retrieve Performance Insights metrics for a set of data sources, over a time period. You can provide
    ///       specific dimension groups and dimensions, and provide aggregation and filtering criteria for
    ///       each group.</p>
    ///          <note>
    ///             <p>Each response element returns a maximum of 500 bytes. For larger elements, such as SQL statements,
    ///                only the first 500 bytes are returned.</p>
    ///          </note>
    func getResourceMetrics(input: GetResourceMetricsInput) async throws -> GetResourceMetricsOutputResponse
    {
        typealias getResourceMetricsContinuation = CheckedContinuation<GetResourceMetricsOutputResponse, Swift.Error>
        return try await withCheckedThrowingContinuation { (continuation: getResourceMetricsContinuation) in
            getResourceMetrics(input: input) { result in
                switch result {
                    case .success(let output):
                        continuation.resume(returning: output)
                    case .failure(let error):
                        continuation.resume(throwing: error)
                }
            }
        }
    }

}
#endif
