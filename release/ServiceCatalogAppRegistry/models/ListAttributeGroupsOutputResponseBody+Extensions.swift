// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAttributeGroupsOutputResponseBody: Equatable {
    public let attributeGroups: [AttributeGroupSummary]?
    public let nextToken: String?
}

extension ListAttributeGroupsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case attributeGroups
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let attributeGroupsContainer = try containerValues.decodeIfPresent([AttributeGroupSummary?].self, forKey: .attributeGroups)
        var attributeGroupsDecoded0:[AttributeGroupSummary]? = nil
        if let attributeGroupsContainer = attributeGroupsContainer {
            attributeGroupsDecoded0 = [AttributeGroupSummary]()
            for structure0 in attributeGroupsContainer {
                if let structure0 = structure0 {
                    attributeGroupsDecoded0?.append(structure0)
                }
            }
        }
        attributeGroups = attributeGroupsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
