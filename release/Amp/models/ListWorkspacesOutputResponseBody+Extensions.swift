// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListWorkspacesOutputResponseBody: Equatable {
    public let workspaces: [WorkspaceSummary]?
    public let nextToken: String?
}

extension ListWorkspacesOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case workspaces
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let workspacesContainer = try containerValues.decodeIfPresent([WorkspaceSummary?].self, forKey: .workspaces)
        var workspacesDecoded0:[WorkspaceSummary]? = nil
        if let workspacesContainer = workspacesContainer {
            workspacesDecoded0 = [WorkspaceSummary]()
            for structure0 in workspacesContainer {
                if let structure0 = structure0 {
                    workspacesDecoded0?.append(structure0)
                }
            }
        }
        workspaces = workspacesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
