// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

///  Amazon Comprehend Medical extracts structured information from unstructured clinical text. Use these actions
///       to gain insight in your documents.
public protocol ComprehendMedicalClientProtocol {
    /// Gets the properties associated with a medical entities detection job. Use this operation
    ///       to get the status of a detection job.
    func describeEntitiesDetectionV2Job(input: DescribeEntitiesDetectionV2JobInput, completion: @escaping (ClientRuntime.SdkResult<DescribeEntitiesDetectionV2JobOutputResponse, DescribeEntitiesDetectionV2JobOutputError>) -> Void)
    /// Gets the properties associated with an InferICD10CM job. Use this operation to get the
    ///       status of an inference job.
    func describeICD10CMInferenceJob(input: DescribeICD10CMInferenceJobInput, completion: @escaping (ClientRuntime.SdkResult<DescribeICD10CMInferenceJobOutputResponse, DescribeICD10CMInferenceJobOutputError>) -> Void)
    /// Gets the properties associated with a protected health information (PHI) detection job.
    ///       Use this operation to get the status of a detection job.
    func describePHIDetectionJob(input: DescribePHIDetectionJobInput, completion: @escaping (ClientRuntime.SdkResult<DescribePHIDetectionJobOutputResponse, DescribePHIDetectionJobOutputError>) -> Void)
    /// Gets the properties associated with an InferRxNorm job. Use this operation to get the
    ///       status of an inference job.
    func describeRxNormInferenceJob(input: DescribeRxNormInferenceJobInput, completion: @escaping (ClientRuntime.SdkResult<DescribeRxNormInferenceJobOutputResponse, DescribeRxNormInferenceJobOutputError>) -> Void)
    /// The DetectEntities operation is deprecated. You should use the DetectEntitiesV2 operation instead.
    ///           Inspects the clinical text for a variety of medical entities and returns specific
    ///       information about them such as entity category, location, and confidence score on that
    ///       information .
    @available(*, deprecated, message: "This operation is deprecated, use DetectEntitiesV2 instead.")
    func detectEntities(input: DetectEntitiesInput, completion: @escaping (ClientRuntime.SdkResult<DetectEntitiesOutputResponse, DetectEntitiesOutputError>) -> Void)
    /// Inspects the clinical text for a variety of medical entities and returns specific
    ///       information about them such as entity category, location, and confidence score on that
    ///       information. Amazon Comprehend Medical only detects medical entities in English language
    ///       texts.
    ///          The DetectEntitiesV2 operation replaces the DetectEntities
    ///       operation. This new action uses a different model for determining the entities in your medical
    ///       text and changes the way that some entities are returned in the output. You should use the
    ///         DetectEntitiesV2 operation in all new applications.
    ///          The DetectEntitiesV2 operation returns the Acuity and
    ///         Direction entities as attributes instead of types.
    func detectEntitiesV2(input: DetectEntitiesV2Input, completion: @escaping (ClientRuntime.SdkResult<DetectEntitiesV2OutputResponse, DetectEntitiesV2OutputError>) -> Void)
    ///  Inspects the clinical text for protected health information (PHI) entities and returns
    ///       the entity category, location, and confidence score for each entity. Amazon Comprehend Medical
    ///       only detects entities in English language texts.
    func detectPHI(input: DetectPHIInput, completion: @escaping (ClientRuntime.SdkResult<DetectPHIOutputResponse, DetectPHIOutputError>) -> Void)
    /// InferICD10CM detects medical conditions as entities listed in a patient record and links
    ///       those entities to normalized concept identifiers in the ICD-10-CM knowledge base from the
    ///       Centers for Disease Control. Amazon Comprehend Medical only detects medical entities in
    ///       English language texts.
    func inferICD10CM(input: InferICD10CMInput, completion: @escaping (ClientRuntime.SdkResult<InferICD10CMOutputResponse, InferICD10CMOutputError>) -> Void)
    /// InferRxNorm detects medications as entities listed in a patient record and links to the
    ///       normalized concept identifiers in the RxNorm database from the National Library of Medicine.
    ///       Amazon Comprehend Medical only detects medical entities in English language texts.
    func inferRxNorm(input: InferRxNormInput, completion: @escaping (ClientRuntime.SdkResult<InferRxNormOutputResponse, InferRxNormOutputError>) -> Void)
    /// Gets a list of medical entity detection jobs that you have submitted.
    func listEntitiesDetectionV2Jobs(input: ListEntitiesDetectionV2JobsInput, completion: @escaping (ClientRuntime.SdkResult<ListEntitiesDetectionV2JobsOutputResponse, ListEntitiesDetectionV2JobsOutputError>) -> Void)
    /// Gets a list of InferICD10CM jobs that you have submitted.
    func listICD10CMInferenceJobs(input: ListICD10CMInferenceJobsInput, completion: @escaping (ClientRuntime.SdkResult<ListICD10CMInferenceJobsOutputResponse, ListICD10CMInferenceJobsOutputError>) -> Void)
    /// Gets a list of protected health information (PHI) detection jobs that you have
    ///       submitted.
    func listPHIDetectionJobs(input: ListPHIDetectionJobsInput, completion: @escaping (ClientRuntime.SdkResult<ListPHIDetectionJobsOutputResponse, ListPHIDetectionJobsOutputError>) -> Void)
    /// Gets a list of InferRxNorm jobs that you have submitted.
    func listRxNormInferenceJobs(input: ListRxNormInferenceJobsInput, completion: @escaping (ClientRuntime.SdkResult<ListRxNormInferenceJobsOutputResponse, ListRxNormInferenceJobsOutputError>) -> Void)
    /// Starts an asynchronous medical entity detection job for a collection of documents. Use the
    ///         DescribeEntitiesDetectionV2Job operation to track the status of a job.
    func startEntitiesDetectionV2Job(input: StartEntitiesDetectionV2JobInput, completion: @escaping (ClientRuntime.SdkResult<StartEntitiesDetectionV2JobOutputResponse, StartEntitiesDetectionV2JobOutputError>) -> Void)
    /// Starts an asynchronous job to detect medical conditions and link them to the ICD-10-CM
    ///       ontology. Use the DescribeICD10CMInferenceJob operation to track the status of a
    ///       job.
    func startICD10CMInferenceJob(input: StartICD10CMInferenceJobInput, completion: @escaping (ClientRuntime.SdkResult<StartICD10CMInferenceJobOutputResponse, StartICD10CMInferenceJobOutputError>) -> Void)
    /// Starts an asynchronous job to detect protected health information (PHI). Use the
    ///         DescribePHIDetectionJob operation to track the status of a job.
    func startPHIDetectionJob(input: StartPHIDetectionJobInput, completion: @escaping (ClientRuntime.SdkResult<StartPHIDetectionJobOutputResponse, StartPHIDetectionJobOutputError>) -> Void)
    /// Starts an asynchronous job to detect medication entities and link them to the RxNorm
    ///       ontology. Use the DescribeRxNormInferenceJob operation to track the status of a
    ///       job.
    func startRxNormInferenceJob(input: StartRxNormInferenceJobInput, completion: @escaping (ClientRuntime.SdkResult<StartRxNormInferenceJobOutputResponse, StartRxNormInferenceJobOutputError>) -> Void)
    /// Stops a medical entities detection job in progress.
    func stopEntitiesDetectionV2Job(input: StopEntitiesDetectionV2JobInput, completion: @escaping (ClientRuntime.SdkResult<StopEntitiesDetectionV2JobOutputResponse, StopEntitiesDetectionV2JobOutputError>) -> Void)
    /// Stops an InferICD10CM inference job in progress.
    func stopICD10CMInferenceJob(input: StopICD10CMInferenceJobInput, completion: @escaping (ClientRuntime.SdkResult<StopICD10CMInferenceJobOutputResponse, StopICD10CMInferenceJobOutputError>) -> Void)
    /// Stops a protected health information (PHI) detection job in progress.
    func stopPHIDetectionJob(input: StopPHIDetectionJobInput, completion: @escaping (ClientRuntime.SdkResult<StopPHIDetectionJobOutputResponse, StopPHIDetectionJobOutputError>) -> Void)
    /// Stops an InferRxNorm inference job in progress.
    func stopRxNormInferenceJob(input: StopRxNormInferenceJobInput, completion: @escaping (ClientRuntime.SdkResult<StopRxNormInferenceJobOutputResponse, StopRxNormInferenceJobOutputError>) -> Void)
}

public enum ComprehendMedicalClientTypes {}
