// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDeliverabilityTestReportsOutputResponseBody: Equatable {
    public let deliverabilityTestReports: [DeliverabilityTestReport]?
    public let nextToken: String?
}

extension ListDeliverabilityTestReportsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case deliverabilityTestReports = "DeliverabilityTestReports"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deliverabilityTestReportsContainer = try containerValues.decodeIfPresent([DeliverabilityTestReport?].self, forKey: .deliverabilityTestReports)
        var deliverabilityTestReportsDecoded0:[DeliverabilityTestReport]? = nil
        if let deliverabilityTestReportsContainer = deliverabilityTestReportsContainer {
            deliverabilityTestReportsDecoded0 = [DeliverabilityTestReport]()
            for structure0 in deliverabilityTestReportsContainer {
                if let structure0 = structure0 {
                    deliverabilityTestReportsDecoded0?.append(structure0)
                }
            }
        }
        deliverabilityTestReports = deliverabilityTestReportsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
