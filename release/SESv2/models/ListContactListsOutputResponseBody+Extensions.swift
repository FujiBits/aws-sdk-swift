// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListContactListsOutputResponseBody: Equatable {
    public let contactLists: [ContactList]?
    public let nextToken: String?
}

extension ListContactListsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case contactLists = "ContactLists"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let contactListsContainer = try containerValues.decodeIfPresent([ContactList?].self, forKey: .contactLists)
        var contactListsDecoded0:[ContactList]? = nil
        if let contactListsContainer = contactListsContainer {
            contactListsDecoded0 = [ContactList]()
            for structure0 in contactListsContainer {
                if let structure0 = structure0 {
                    contactListsDecoded0?.append(structure0)
                }
            }
        }
        contactLists = contactListsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
