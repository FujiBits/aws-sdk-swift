// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// AWS IoT Wireless API documentation
public protocol IotWirelessClientProtocol {
    /// Associates a partner account with your AWS account.
    func associateAwsAccountWithPartnerAccount(input: AssociateAwsAccountWithPartnerAccountInput, completion: @escaping (ClientRuntime.SdkResult<AssociateAwsAccountWithPartnerAccountOutputResponse, AssociateAwsAccountWithPartnerAccountOutputError>) -> Void)
    /// Associate a multicast group with a FUOTA task.
    func associateMulticastGroupWithFuotaTask(input: AssociateMulticastGroupWithFuotaTaskInput, completion: @escaping (ClientRuntime.SdkResult<AssociateMulticastGroupWithFuotaTaskOutputResponse, AssociateMulticastGroupWithFuotaTaskOutputError>) -> Void)
    /// Associate a wireless device with a FUOTA task.
    func associateWirelessDeviceWithFuotaTask(input: AssociateWirelessDeviceWithFuotaTaskInput, completion: @escaping (ClientRuntime.SdkResult<AssociateWirelessDeviceWithFuotaTaskOutputResponse, AssociateWirelessDeviceWithFuotaTaskOutputError>) -> Void)
    /// Associates a wireless device with a multicast group.
    func associateWirelessDeviceWithMulticastGroup(input: AssociateWirelessDeviceWithMulticastGroupInput, completion: @escaping (ClientRuntime.SdkResult<AssociateWirelessDeviceWithMulticastGroupOutputResponse, AssociateWirelessDeviceWithMulticastGroupOutputError>) -> Void)
    /// Associates a wireless device with a thing.
    func associateWirelessDeviceWithThing(input: AssociateWirelessDeviceWithThingInput, completion: @escaping (ClientRuntime.SdkResult<AssociateWirelessDeviceWithThingOutputResponse, AssociateWirelessDeviceWithThingOutputError>) -> Void)
    /// Associates a wireless gateway with a certificate.
    func associateWirelessGatewayWithCertificate(input: AssociateWirelessGatewayWithCertificateInput, completion: @escaping (ClientRuntime.SdkResult<AssociateWirelessGatewayWithCertificateOutputResponse, AssociateWirelessGatewayWithCertificateOutputError>) -> Void)
    /// Associates a wireless gateway with a thing.
    func associateWirelessGatewayWithThing(input: AssociateWirelessGatewayWithThingInput, completion: @escaping (ClientRuntime.SdkResult<AssociateWirelessGatewayWithThingOutputResponse, AssociateWirelessGatewayWithThingOutputError>) -> Void)
    /// Cancels an existing multicast group session.
    func cancelMulticastGroupSession(input: CancelMulticastGroupSessionInput, completion: @escaping (ClientRuntime.SdkResult<CancelMulticastGroupSessionOutputResponse, CancelMulticastGroupSessionOutputError>) -> Void)
    /// Creates a new destination that maps a device message to an AWS IoT rule.
    func createDestination(input: CreateDestinationInput, completion: @escaping (ClientRuntime.SdkResult<CreateDestinationOutputResponse, CreateDestinationOutputError>) -> Void)
    /// Creates a new device profile.
    func createDeviceProfile(input: CreateDeviceProfileInput, completion: @escaping (ClientRuntime.SdkResult<CreateDeviceProfileOutputResponse, CreateDeviceProfileOutputError>) -> Void)
    /// Creates a FUOTA task.
    func createFuotaTask(input: CreateFuotaTaskInput, completion: @escaping (ClientRuntime.SdkResult<CreateFuotaTaskOutputResponse, CreateFuotaTaskOutputError>) -> Void)
    /// Creates a multicast group.
    func createMulticastGroup(input: CreateMulticastGroupInput, completion: @escaping (ClientRuntime.SdkResult<CreateMulticastGroupOutputResponse, CreateMulticastGroupOutputError>) -> Void)
    /// Creates a new service profile.
    func createServiceProfile(input: CreateServiceProfileInput, completion: @escaping (ClientRuntime.SdkResult<CreateServiceProfileOutputResponse, CreateServiceProfileOutputError>) -> Void)
    /// Provisions a wireless device.
    func createWirelessDevice(input: CreateWirelessDeviceInput, completion: @escaping (ClientRuntime.SdkResult<CreateWirelessDeviceOutputResponse, CreateWirelessDeviceOutputError>) -> Void)
    /// Provisions a wireless gateway.
    func createWirelessGateway(input: CreateWirelessGatewayInput, completion: @escaping (ClientRuntime.SdkResult<CreateWirelessGatewayOutputResponse, CreateWirelessGatewayOutputError>) -> Void)
    /// Creates a task for a wireless gateway.
    func createWirelessGatewayTask(input: CreateWirelessGatewayTaskInput, completion: @escaping (ClientRuntime.SdkResult<CreateWirelessGatewayTaskOutputResponse, CreateWirelessGatewayTaskOutputError>) -> Void)
    /// Creates a gateway task definition.
    func createWirelessGatewayTaskDefinition(input: CreateWirelessGatewayTaskDefinitionInput, completion: @escaping (ClientRuntime.SdkResult<CreateWirelessGatewayTaskDefinitionOutputResponse, CreateWirelessGatewayTaskDefinitionOutputError>) -> Void)
    /// Deletes a destination.
    func deleteDestination(input: DeleteDestinationInput, completion: @escaping (ClientRuntime.SdkResult<DeleteDestinationOutputResponse, DeleteDestinationOutputError>) -> Void)
    /// Deletes a device profile.
    func deleteDeviceProfile(input: DeleteDeviceProfileInput, completion: @escaping (ClientRuntime.SdkResult<DeleteDeviceProfileOutputResponse, DeleteDeviceProfileOutputError>) -> Void)
    /// Deletes a FUOTA task.
    func deleteFuotaTask(input: DeleteFuotaTaskInput, completion: @escaping (ClientRuntime.SdkResult<DeleteFuotaTaskOutputResponse, DeleteFuotaTaskOutputError>) -> Void)
    /// Deletes a multicast group if it is not in use by a fuota task.
    func deleteMulticastGroup(input: DeleteMulticastGroupInput, completion: @escaping (ClientRuntime.SdkResult<DeleteMulticastGroupOutputResponse, DeleteMulticastGroupOutputError>) -> Void)
    /// Deletes a service profile.
    func deleteServiceProfile(input: DeleteServiceProfileInput, completion: @escaping (ClientRuntime.SdkResult<DeleteServiceProfileOutputResponse, DeleteServiceProfileOutputError>) -> Void)
    /// Deletes a wireless device.
    func deleteWirelessDevice(input: DeleteWirelessDeviceInput, completion: @escaping (ClientRuntime.SdkResult<DeleteWirelessDeviceOutputResponse, DeleteWirelessDeviceOutputError>) -> Void)
    /// Deletes a wireless gateway.
    func deleteWirelessGateway(input: DeleteWirelessGatewayInput, completion: @escaping (ClientRuntime.SdkResult<DeleteWirelessGatewayOutputResponse, DeleteWirelessGatewayOutputError>) -> Void)
    /// Deletes a wireless gateway task.
    func deleteWirelessGatewayTask(input: DeleteWirelessGatewayTaskInput, completion: @escaping (ClientRuntime.SdkResult<DeleteWirelessGatewayTaskOutputResponse, DeleteWirelessGatewayTaskOutputError>) -> Void)
    /// Deletes a wireless gateway task definition. Deleting this task definition does not affect tasks that are currently in progress.
    func deleteWirelessGatewayTaskDefinition(input: DeleteWirelessGatewayTaskDefinitionInput, completion: @escaping (ClientRuntime.SdkResult<DeleteWirelessGatewayTaskDefinitionOutputResponse, DeleteWirelessGatewayTaskDefinitionOutputError>) -> Void)
    /// Disassociates your AWS account from a partner account. If PartnerAccountId and PartnerType are null, disassociates your AWS account from all partner accounts.
    func disassociateAwsAccountFromPartnerAccount(input: DisassociateAwsAccountFromPartnerAccountInput, completion: @escaping (ClientRuntime.SdkResult<DisassociateAwsAccountFromPartnerAccountOutputResponse, DisassociateAwsAccountFromPartnerAccountOutputError>) -> Void)
    /// Disassociates a multicast group from a fuota task.
    func disassociateMulticastGroupFromFuotaTask(input: DisassociateMulticastGroupFromFuotaTaskInput, completion: @escaping (ClientRuntime.SdkResult<DisassociateMulticastGroupFromFuotaTaskOutputResponse, DisassociateMulticastGroupFromFuotaTaskOutputError>) -> Void)
    /// Disassociates a wireless device from a FUOTA task.
    func disassociateWirelessDeviceFromFuotaTask(input: DisassociateWirelessDeviceFromFuotaTaskInput, completion: @escaping (ClientRuntime.SdkResult<DisassociateWirelessDeviceFromFuotaTaskOutputResponse, DisassociateWirelessDeviceFromFuotaTaskOutputError>) -> Void)
    /// Disassociates a wireless device from a multicast group.
    func disassociateWirelessDeviceFromMulticastGroup(input: DisassociateWirelessDeviceFromMulticastGroupInput, completion: @escaping (ClientRuntime.SdkResult<DisassociateWirelessDeviceFromMulticastGroupOutputResponse, DisassociateWirelessDeviceFromMulticastGroupOutputError>) -> Void)
    /// Disassociates a wireless device from its currently associated thing.
    func disassociateWirelessDeviceFromThing(input: DisassociateWirelessDeviceFromThingInput, completion: @escaping (ClientRuntime.SdkResult<DisassociateWirelessDeviceFromThingOutputResponse, DisassociateWirelessDeviceFromThingOutputError>) -> Void)
    /// Disassociates a wireless gateway from its currently associated certificate.
    func disassociateWirelessGatewayFromCertificate(input: DisassociateWirelessGatewayFromCertificateInput, completion: @escaping (ClientRuntime.SdkResult<DisassociateWirelessGatewayFromCertificateOutputResponse, DisassociateWirelessGatewayFromCertificateOutputError>) -> Void)
    /// Disassociates a wireless gateway from its currently associated thing.
    func disassociateWirelessGatewayFromThing(input: DisassociateWirelessGatewayFromThingInput, completion: @escaping (ClientRuntime.SdkResult<DisassociateWirelessGatewayFromThingOutputResponse, DisassociateWirelessGatewayFromThingOutputError>) -> Void)
    /// Gets information about a destination.
    func getDestination(input: GetDestinationInput, completion: @escaping (ClientRuntime.SdkResult<GetDestinationOutputResponse, GetDestinationOutputError>) -> Void)
    /// Gets information about a device profile.
    func getDeviceProfile(input: GetDeviceProfileInput, completion: @escaping (ClientRuntime.SdkResult<GetDeviceProfileOutputResponse, GetDeviceProfileOutputError>) -> Void)
    /// Gets information about a FUOTA task.
    func getFuotaTask(input: GetFuotaTaskInput, completion: @escaping (ClientRuntime.SdkResult<GetFuotaTaskOutputResponse, GetFuotaTaskOutputError>) -> Void)
    /// Returns current default log levels or log levels by resource types. Based on resource types, log levels can be for wireless device log options or wireless gateway log options.
    func getLogLevelsByResourceTypes(input: GetLogLevelsByResourceTypesInput, completion: @escaping (ClientRuntime.SdkResult<GetLogLevelsByResourceTypesOutputResponse, GetLogLevelsByResourceTypesOutputError>) -> Void)
    /// Gets information about a multicast group.
    func getMulticastGroup(input: GetMulticastGroupInput, completion: @escaping (ClientRuntime.SdkResult<GetMulticastGroupOutputResponse, GetMulticastGroupOutputError>) -> Void)
    /// Gets information about a multicast group session.
    func getMulticastGroupSession(input: GetMulticastGroupSessionInput, completion: @escaping (ClientRuntime.SdkResult<GetMulticastGroupSessionOutputResponse, GetMulticastGroupSessionOutputError>) -> Void)
    /// Get NetworkAnalyzer configuration.
    func getNetworkAnalyzerConfiguration(input: GetNetworkAnalyzerConfigurationInput, completion: @escaping (ClientRuntime.SdkResult<GetNetworkAnalyzerConfigurationOutputResponse, GetNetworkAnalyzerConfigurationOutputError>) -> Void)
    /// Gets information about a partner account. If PartnerAccountId and PartnerType are null, returns all partner accounts.
    func getPartnerAccount(input: GetPartnerAccountInput, completion: @escaping (ClientRuntime.SdkResult<GetPartnerAccountOutputResponse, GetPartnerAccountOutputError>) -> Void)
    /// Get the event configuration for a particular resource identifier.
    func getResourceEventConfiguration(input: GetResourceEventConfigurationInput, completion: @escaping (ClientRuntime.SdkResult<GetResourceEventConfigurationOutputResponse, GetResourceEventConfigurationOutputError>) -> Void)
    /// Fetches the log-level override, if any, for a given resource-ID and resource-type. It can be used for a wireless device or a wireless gateway.
    func getResourceLogLevel(input: GetResourceLogLevelInput, completion: @escaping (ClientRuntime.SdkResult<GetResourceLogLevelOutputResponse, GetResourceLogLevelOutputError>) -> Void)
    /// Gets the account-specific endpoint for Configuration and Update Server (CUPS) protocol or LoRaWAN Network Server (LNS) connections.
    func getServiceEndpoint(input: GetServiceEndpointInput, completion: @escaping (ClientRuntime.SdkResult<GetServiceEndpointOutputResponse, GetServiceEndpointOutputError>) -> Void)
    /// Gets information about a service profile.
    func getServiceProfile(input: GetServiceProfileInput, completion: @escaping (ClientRuntime.SdkResult<GetServiceProfileOutputResponse, GetServiceProfileOutputError>) -> Void)
    /// Gets information about a wireless device.
    func getWirelessDevice(input: GetWirelessDeviceInput, completion: @escaping (ClientRuntime.SdkResult<GetWirelessDeviceOutputResponse, GetWirelessDeviceOutputError>) -> Void)
    /// Gets operating information about a wireless device.
    func getWirelessDeviceStatistics(input: GetWirelessDeviceStatisticsInput, completion: @escaping (ClientRuntime.SdkResult<GetWirelessDeviceStatisticsOutputResponse, GetWirelessDeviceStatisticsOutputError>) -> Void)
    /// Gets information about a wireless gateway.
    func getWirelessGateway(input: GetWirelessGatewayInput, completion: @escaping (ClientRuntime.SdkResult<GetWirelessGatewayOutputResponse, GetWirelessGatewayOutputError>) -> Void)
    /// Gets the ID of the certificate that is currently associated with a wireless gateway.
    func getWirelessGatewayCertificate(input: GetWirelessGatewayCertificateInput, completion: @escaping (ClientRuntime.SdkResult<GetWirelessGatewayCertificateOutputResponse, GetWirelessGatewayCertificateOutputError>) -> Void)
    /// Gets the firmware version and other information about a wireless gateway.
    func getWirelessGatewayFirmwareInformation(input: GetWirelessGatewayFirmwareInformationInput, completion: @escaping (ClientRuntime.SdkResult<GetWirelessGatewayFirmwareInformationOutputResponse, GetWirelessGatewayFirmwareInformationOutputError>) -> Void)
    /// Gets operating information about a wireless gateway.
    func getWirelessGatewayStatistics(input: GetWirelessGatewayStatisticsInput, completion: @escaping (ClientRuntime.SdkResult<GetWirelessGatewayStatisticsOutputResponse, GetWirelessGatewayStatisticsOutputError>) -> Void)
    /// Gets information about a wireless gateway task.
    func getWirelessGatewayTask(input: GetWirelessGatewayTaskInput, completion: @escaping (ClientRuntime.SdkResult<GetWirelessGatewayTaskOutputResponse, GetWirelessGatewayTaskOutputError>) -> Void)
    /// Gets information about a wireless gateway task definition.
    func getWirelessGatewayTaskDefinition(input: GetWirelessGatewayTaskDefinitionInput, completion: @escaping (ClientRuntime.SdkResult<GetWirelessGatewayTaskDefinitionOutputResponse, GetWirelessGatewayTaskDefinitionOutputError>) -> Void)
    /// Lists the destinations registered to your AWS account.
    func listDestinations(input: ListDestinationsInput, completion: @escaping (ClientRuntime.SdkResult<ListDestinationsOutputResponse, ListDestinationsOutputError>) -> Void)
    /// Lists the device profiles registered to your AWS account.
    func listDeviceProfiles(input: ListDeviceProfilesInput, completion: @escaping (ClientRuntime.SdkResult<ListDeviceProfilesOutputResponse, ListDeviceProfilesOutputError>) -> Void)
    /// Lists the FUOTA tasks registered to your AWS account.
    func listFuotaTasks(input: ListFuotaTasksInput, completion: @escaping (ClientRuntime.SdkResult<ListFuotaTasksOutputResponse, ListFuotaTasksOutputError>) -> Void)
    /// Lists the multicast groups registered to your AWS account.
    func listMulticastGroups(input: ListMulticastGroupsInput, completion: @escaping (ClientRuntime.SdkResult<ListMulticastGroupsOutputResponse, ListMulticastGroupsOutputError>) -> Void)
    /// List all multicast groups associated with a fuota task.
    func listMulticastGroupsByFuotaTask(input: ListMulticastGroupsByFuotaTaskInput, completion: @escaping (ClientRuntime.SdkResult<ListMulticastGroupsByFuotaTaskOutputResponse, ListMulticastGroupsByFuotaTaskOutputError>) -> Void)
    /// Lists the partner accounts associated with your AWS account.
    func listPartnerAccounts(input: ListPartnerAccountsInput, completion: @escaping (ClientRuntime.SdkResult<ListPartnerAccountsOutputResponse, ListPartnerAccountsOutputError>) -> Void)
    /// Lists the service profiles registered to your AWS account.
    func listServiceProfiles(input: ListServiceProfilesInput, completion: @escaping (ClientRuntime.SdkResult<ListServiceProfilesOutputResponse, ListServiceProfilesOutputError>) -> Void)
    /// Lists the tags (metadata) you have assigned to the resource.
    func listTagsForResource(input: ListTagsForResourceInput, completion: @escaping (ClientRuntime.SdkResult<ListTagsForResourceOutputResponse, ListTagsForResourceOutputError>) -> Void)
    /// Lists the wireless devices registered to your AWS account.
    func listWirelessDevices(input: ListWirelessDevicesInput, completion: @escaping (ClientRuntime.SdkResult<ListWirelessDevicesOutputResponse, ListWirelessDevicesOutputError>) -> Void)
    /// Lists the wireless gateways registered to your AWS account.
    func listWirelessGateways(input: ListWirelessGatewaysInput, completion: @escaping (ClientRuntime.SdkResult<ListWirelessGatewaysOutputResponse, ListWirelessGatewaysOutputError>) -> Void)
    /// List the wireless gateway tasks definitions registered to your AWS account.
    func listWirelessGatewayTaskDefinitions(input: ListWirelessGatewayTaskDefinitionsInput, completion: @escaping (ClientRuntime.SdkResult<ListWirelessGatewayTaskDefinitionsOutputResponse, ListWirelessGatewayTaskDefinitionsOutputError>) -> Void)
    /// Sets the log-level override for a resource-ID and resource-type. This option can be specified for a wireless gateway or a wireless device. A limit of 200 log level override can be set per account.
    func putResourceLogLevel(input: PutResourceLogLevelInput, completion: @escaping (ClientRuntime.SdkResult<PutResourceLogLevelOutputResponse, PutResourceLogLevelOutputError>) -> Void)
    /// Removes the log-level overrides for all resources; both wireless devices and wireless gateways.
    func resetAllResourceLogLevels(input: ResetAllResourceLogLevelsInput, completion: @escaping (ClientRuntime.SdkResult<ResetAllResourceLogLevelsOutputResponse, ResetAllResourceLogLevelsOutputError>) -> Void)
    /// Removes the log-level override, if any, for a specific resource-ID and resource-type. It can be used for a wireless device or a wireless gateway.
    func resetResourceLogLevel(input: ResetResourceLogLevelInput, completion: @escaping (ClientRuntime.SdkResult<ResetResourceLogLevelOutputResponse, ResetResourceLogLevelOutputError>) -> Void)
    /// Sends the specified data to a multicast group.
    func sendDataToMulticastGroup(input: SendDataToMulticastGroupInput, completion: @escaping (ClientRuntime.SdkResult<SendDataToMulticastGroupOutputResponse, SendDataToMulticastGroupOutputError>) -> Void)
    /// Sends a decrypted application data frame to a device.
    func sendDataToWirelessDevice(input: SendDataToWirelessDeviceInput, completion: @escaping (ClientRuntime.SdkResult<SendDataToWirelessDeviceOutputResponse, SendDataToWirelessDeviceOutputError>) -> Void)
    /// Starts a bulk association of all qualifying wireless devices with a multicast group.
    func startBulkAssociateWirelessDeviceWithMulticastGroup(input: StartBulkAssociateWirelessDeviceWithMulticastGroupInput, completion: @escaping (ClientRuntime.SdkResult<StartBulkAssociateWirelessDeviceWithMulticastGroupOutputResponse, StartBulkAssociateWirelessDeviceWithMulticastGroupOutputError>) -> Void)
    /// Starts a bulk disassociatin of all qualifying wireless devices from a multicast group.
    func startBulkDisassociateWirelessDeviceFromMulticastGroup(input: StartBulkDisassociateWirelessDeviceFromMulticastGroupInput, completion: @escaping (ClientRuntime.SdkResult<StartBulkDisassociateWirelessDeviceFromMulticastGroupOutputResponse, StartBulkDisassociateWirelessDeviceFromMulticastGroupOutputError>) -> Void)
    /// Starts a FUOTA task.
    func startFuotaTask(input: StartFuotaTaskInput, completion: @escaping (ClientRuntime.SdkResult<StartFuotaTaskOutputResponse, StartFuotaTaskOutputError>) -> Void)
    /// Starts a multicast group session.
    func startMulticastGroupSession(input: StartMulticastGroupSessionInput, completion: @escaping (ClientRuntime.SdkResult<StartMulticastGroupSessionOutputResponse, StartMulticastGroupSessionOutputError>) -> Void)
    /// Adds a tag to a resource.
    func tagResource(input: TagResourceInput, completion: @escaping (ClientRuntime.SdkResult<TagResourceOutputResponse, TagResourceOutputError>) -> Void)
    /// Simulates a provisioned device by sending an uplink data payload of Hello.
    func testWirelessDevice(input: TestWirelessDeviceInput, completion: @escaping (ClientRuntime.SdkResult<TestWirelessDeviceOutputResponse, TestWirelessDeviceOutputError>) -> Void)
    /// Removes one or more tags from a resource.
    func untagResource(input: UntagResourceInput, completion: @escaping (ClientRuntime.SdkResult<UntagResourceOutputResponse, UntagResourceOutputError>) -> Void)
    /// Updates properties of a destination.
    func updateDestination(input: UpdateDestinationInput, completion: @escaping (ClientRuntime.SdkResult<UpdateDestinationOutputResponse, UpdateDestinationOutputError>) -> Void)
    /// Updates properties of a FUOTA task.
    func updateFuotaTask(input: UpdateFuotaTaskInput, completion: @escaping (ClientRuntime.SdkResult<UpdateFuotaTaskOutputResponse, UpdateFuotaTaskOutputError>) -> Void)
    /// Set default log level, or log levels by resource types. This can be for wireless device log options or wireless gateways log options and is used to control the log messages that'll be displayed in CloudWatch.
    func updateLogLevelsByResourceTypes(input: UpdateLogLevelsByResourceTypesInput, completion: @escaping (ClientRuntime.SdkResult<UpdateLogLevelsByResourceTypesOutputResponse, UpdateLogLevelsByResourceTypesOutputError>) -> Void)
    /// Updates properties of a multicast group session.
    func updateMulticastGroup(input: UpdateMulticastGroupInput, completion: @escaping (ClientRuntime.SdkResult<UpdateMulticastGroupOutputResponse, UpdateMulticastGroupOutputError>) -> Void)
    /// Update NetworkAnalyzer configuration.
    func updateNetworkAnalyzerConfiguration(input: UpdateNetworkAnalyzerConfigurationInput, completion: @escaping (ClientRuntime.SdkResult<UpdateNetworkAnalyzerConfigurationOutputResponse, UpdateNetworkAnalyzerConfigurationOutputError>) -> Void)
    /// Updates properties of a partner account.
    func updatePartnerAccount(input: UpdatePartnerAccountInput, completion: @escaping (ClientRuntime.SdkResult<UpdatePartnerAccountOutputResponse, UpdatePartnerAccountOutputError>) -> Void)
    /// Update the event configuration for a particular resource identifier.
    func updateResourceEventConfiguration(input: UpdateResourceEventConfigurationInput, completion: @escaping (ClientRuntime.SdkResult<UpdateResourceEventConfigurationOutputResponse, UpdateResourceEventConfigurationOutputError>) -> Void)
    /// Updates properties of a wireless device.
    func updateWirelessDevice(input: UpdateWirelessDeviceInput, completion: @escaping (ClientRuntime.SdkResult<UpdateWirelessDeviceOutputResponse, UpdateWirelessDeviceOutputError>) -> Void)
    /// Updates properties of a wireless gateway.
    func updateWirelessGateway(input: UpdateWirelessGatewayInput, completion: @escaping (ClientRuntime.SdkResult<UpdateWirelessGatewayOutputResponse, UpdateWirelessGatewayOutputError>) -> Void)
}

public enum IotWirelessClientTypes {}
