// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListFindingsFiltersOutputResponseBody: Equatable {
    public let findingsFilterListItems: [FindingsFilterListItem]?
    public let nextToken: String?
}

extension ListFindingsFiltersOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case findingsFilterListItems = "findingsFilterListItems"
        case nextToken = "nextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let findingsFilterListItemsContainer = try containerValues.decodeIfPresent([FindingsFilterListItem?].self, forKey: .findingsFilterListItems)
        var findingsFilterListItemsDecoded0:[FindingsFilterListItem]? = nil
        if let findingsFilterListItemsContainer = findingsFilterListItemsContainer {
            findingsFilterListItemsDecoded0 = [FindingsFilterListItem]()
            for structure0 in findingsFilterListItemsContainer {
                if let structure0 = structure0 {
                    findingsFilterListItemsDecoded0?.append(structure0)
                }
            }
        }
        findingsFilterListItems = findingsFilterListItemsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
