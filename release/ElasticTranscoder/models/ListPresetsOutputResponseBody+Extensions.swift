// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPresetsOutputResponseBody: Equatable {
    public let presets: [Preset]?
    public let nextPageToken: String?
}

extension ListPresetsOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextPageToken = "NextPageToken"
        case presets = "Presets"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let presetsContainer = try containerValues.decodeIfPresent([Preset?].self, forKey: .presets)
        var presetsDecoded0:[Preset]? = nil
        if let presetsContainer = presetsContainer {
            presetsDecoded0 = [Preset]()
            for structure0 in presetsContainer {
                if let structure0 = structure0 {
                    presetsDecoded0?.append(structure0)
                }
            }
        }
        presets = presetsDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
