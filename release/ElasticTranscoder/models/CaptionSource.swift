// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>A source file for the input sidecar captions used during the transcoding process.</p>
public struct CaptionSource: Equatable {
    /// <p>The encryption settings, if any, that Elastic Transcoder needs to decyrpt your caption sources, or that you
    ///             want Elastic Transcoder to apply to your caption sources.</p>
    public let encryption: Encryption?
    /// <p>The name of the sidecar caption file that you want Elastic Transcoder to include in the output file.</p>
    public let key: String?
    /// <p>The label of the caption shown in the player when choosing a language. We recommend that you
    ///             put the caption language name here, in the language of the captions.</p>
    public let label: String?
    /// <p>A string that specifies the language of the caption. If you specified multiple inputs with captions,
    ///             the caption language must match in order to be included in the output. Specify this as one of:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>2-character ISO 639-1 code</p>
    ///             </li>
    ///             <li>
    ///                 <p>3-character ISO 639-2 code</p>
    ///             </li>
    ///          </ul>
    ///         <p>For more information on ISO language codes and language names, see the List of ISO 639-1 codes.</p>
    public let language: String?
    /// <p>For clip generation or captions that do not start at the same time
    ///             as the associated video file, the <code>TimeOffset</code> tells Elastic Transcoder how much of the video to encode
    ///             before including captions.</p>
    ///         <p>Specify the TimeOffset in the form [+-]SS.sss or [+-]HH:mm:SS.ss.</p>
    public let timeOffset: String?

    public init (
        encryption: Encryption? = nil,
        key: String? = nil,
        label: String? = nil,
        language: String? = nil,
        timeOffset: String? = nil
    )
    {
        self.encryption = encryption
        self.key = key
        self.label = label
        self.language = language
        self.timeOffset = timeOffset
    }
}

extension CaptionSource: CustomDebugStringConvertible {
    public var debugDescription: String {
        "CaptionSource(encryption: \(String(describing: encryption)), key: \(String(describing: key)), label: \(String(describing: label)), language: \(String(describing: language)), timeOffset: \(String(describing: timeOffset)))"}
}
