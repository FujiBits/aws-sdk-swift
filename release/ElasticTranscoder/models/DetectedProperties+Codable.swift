// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DetectedProperties: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case durationMillis = "DurationMillis"
        case fileSize = "FileSize"
        case frameRate = "FrameRate"
        case height = "Height"
        case width = "Width"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let durationMillis = durationMillis {
            try encodeContainer.encode(durationMillis, forKey: .durationMillis)
        }
        if let fileSize = fileSize {
            try encodeContainer.encode(fileSize, forKey: .fileSize)
        }
        if let frameRate = frameRate {
            try encodeContainer.encode(frameRate, forKey: .frameRate)
        }
        if let height = height {
            try encodeContainer.encode(height, forKey: .height)
        }
        if let width = width {
            try encodeContainer.encode(width, forKey: .width)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let widthDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .width)
        width = widthDecoded
        let heightDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .height)
        height = heightDecoded
        let frameRateDecoded = try containerValues.decodeIfPresent(String.self, forKey: .frameRate)
        frameRate = frameRateDecoded
        let fileSizeDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .fileSize)
        fileSize = fileSizeDecoded
        let durationMillisDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .durationMillis)
        durationMillis = durationMillisDecoded
    }
}
