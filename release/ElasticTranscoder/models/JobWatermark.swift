// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Watermarks can be in .png or .jpg format. If you want to display a watermark that is not
///     rectangular, use the .png format, which supports transparency.</p>
public struct JobWatermark: Equatable {
    /// <p>The encryption settings, if any, that you want Elastic Transcoder to apply to your watermarks.</p>
    public let encryption: Encryption?
    /// <p> The name of the .png or .jpg file that you want to use for the watermark. To determine
    ///     which Amazon S3 bucket contains the specified file, Elastic Transcoder checks the pipeline specified by
    ///         <code>Pipeline</code>; the <code>Input Bucket</code> object in that pipeline
    ///     identifies the bucket.</p>
    ///          <p> If the file name includes a prefix, for example, <b>logos/128x64.png</b>,
    ///     include the prefix in the key. If the file isn't in the specified bucket, Elastic Transcoder returns
    ///     an error. </p>
    public let inputKey: String?
    /// <p>The ID of the watermark settings that Elastic Transcoder uses to add watermarks to the video during transcoding.
    ///     The settings are in the preset specified by Preset for the current output. In that preset, the value
    ///     of Watermarks Id tells Elastic Transcoder which settings to use.</p>
    public let presetWatermarkId: String?

    public init (
        encryption: Encryption? = nil,
        inputKey: String? = nil,
        presetWatermarkId: String? = nil
    )
    {
        self.encryption = encryption
        self.inputKey = inputKey
        self.presetWatermarkId = presetWatermarkId
    }
}

extension JobWatermark: CustomDebugStringConvertible {
    public var debugDescription: String {
        "JobWatermark(encryption: \(String(describing: encryption)), inputKey: \(String(describing: inputKey)), presetWatermarkId: \(String(describing: presetWatermarkId)))"}
}
