// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct TestRoleOutputResponseBody: Equatable {
    public let success: String?
    public let messages: [String]?
}

extension TestRoleOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case messages = "Messages"
        case success = "Success"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let successDecoded = try containerValues.decodeIfPresent(String.self, forKey: .success)
        success = successDecoded
        let messagesContainer = try containerValues.decodeIfPresent([String?].self, forKey: .messages)
        var messagesDecoded0:[String]? = nil
        if let messagesContainer = messagesContainer {
            messagesDecoded0 = [String]()
            for string0 in messagesContainer {
                if let string0 = string0 {
                    messagesDecoded0?.append(string0)
                }
            }
        }
        messages = messagesDecoded0
    }
}
