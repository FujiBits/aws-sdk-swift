// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreatePipelineOutputResponseBody: Equatable {
    public let pipeline: Pipeline?
    public let warnings: [Warning]?
}

extension CreatePipelineOutputResponseBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case pipeline = "Pipeline"
        case warnings = "Warnings"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let pipelineDecoded = try containerValues.decodeIfPresent(Pipeline.self, forKey: .pipeline)
        pipeline = pipelineDecoded
        let warningsContainer = try containerValues.decodeIfPresent([Warning?].self, forKey: .warnings)
        var warningsDecoded0:[Warning]? = nil
        if let warningsContainer = warningsContainer {
            warningsDecoded0 = [Warning]()
            for structure0 in warningsContainer {
                if let structure0 = structure0 {
                    warningsDecoded0?.append(structure0)
                }
            }
        }
        warnings = warningsDecoded0
    }
}
