// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// The Amplify UI Builder API provides a programmatic interface for creating and configuring user interface (UI) component libraries and themes for use in your Amplify applications. You can then connect these UI components to an application's backend Amazon Web Services resources. You can also use the Amplify Studio visual designer to create UI components and model data for an app. For more information, see [Introduction](https://docs.amplify.aws/console/adminui/intro) in the Amplify Docs. The Amplify Framework is a comprehensive set of SDKs, libraries, tools, and documentation for client app development. For more information, see the [Amplify Framework](https://docs.amplify.aws/). For more information about deploying an Amplify application to Amazon Web Services, see the [Amplify Console User Guide](https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html).
public protocol AmplifyUiBuilderClientProtocol {
    /// Creates a new component for an Amplify app.
    func createComponent(input: CreateComponentInput, completion: @escaping (ClientRuntime.SdkResult<CreateComponentOutputResponse, CreateComponentOutputError>) -> Void)
    /// Creates a theme to apply to the components in an Amplify app.
    func createTheme(input: CreateThemeInput, completion: @escaping (ClientRuntime.SdkResult<CreateThemeOutputResponse, CreateThemeOutputError>) -> Void)
    /// Deletes a component from an Amplify app.
    func deleteComponent(input: DeleteComponentInput, completion: @escaping (ClientRuntime.SdkResult<DeleteComponentOutputResponse, DeleteComponentOutputError>) -> Void)
    /// Deletes a theme from an Amplify app.
    func deleteTheme(input: DeleteThemeInput, completion: @escaping (ClientRuntime.SdkResult<DeleteThemeOutputResponse, DeleteThemeOutputError>) -> Void)
    /// Exchanges an access code for a token.
    func exchangeCodeForToken(input: ExchangeCodeForTokenInput, completion: @escaping (ClientRuntime.SdkResult<ExchangeCodeForTokenOutputResponse, ExchangeCodeForTokenOutputError>) -> Void)
    /// Exports component configurations to code that is ready to integrate into an Amplify app.
    func exportComponents(input: ExportComponentsInput, completion: @escaping (ClientRuntime.SdkResult<ExportComponentsOutputResponse, ExportComponentsOutputError>) -> Void)
    /// Exports theme configurations to code that is ready to integrate into an Amplify app.
    func exportThemes(input: ExportThemesInput, completion: @escaping (ClientRuntime.SdkResult<ExportThemesOutputResponse, ExportThemesOutputError>) -> Void)
    /// Returns an existing component for an Amplify app.
    func getComponent(input: GetComponentInput, completion: @escaping (ClientRuntime.SdkResult<GetComponentOutputResponse, GetComponentOutputError>) -> Void)
    /// Returns an existing theme for an Amplify app.
    func getTheme(input: GetThemeInput, completion: @escaping (ClientRuntime.SdkResult<GetThemeOutputResponse, GetThemeOutputError>) -> Void)
    /// Retrieves a list of components for a specified Amplify app and backend environment.
    func listComponents(input: ListComponentsInput, completion: @escaping (ClientRuntime.SdkResult<ListComponentsOutputResponse, ListComponentsOutputError>) -> Void)
    /// Retrieves a list of themes for a specified Amplify app and backend environment.
    func listThemes(input: ListThemesInput, completion: @escaping (ClientRuntime.SdkResult<ListThemesOutputResponse, ListThemesOutputError>) -> Void)
    /// Refreshes a previously issued access token that might have expired.
    func refreshToken(input: RefreshTokenInput, completion: @escaping (ClientRuntime.SdkResult<RefreshTokenOutputResponse, RefreshTokenOutputError>) -> Void)
    /// Updates an existing component.
    func updateComponent(input: UpdateComponentInput, completion: @escaping (ClientRuntime.SdkResult<UpdateComponentOutputResponse, UpdateComponentOutputError>) -> Void)
    /// Updates an existing theme.
    func updateTheme(input: UpdateThemeInput, completion: @escaping (ClientRuntime.SdkResult<UpdateThemeOutputResponse, UpdateThemeOutputError>) -> Void)
}

public enum AmplifyUiBuilderClientTypes {}
