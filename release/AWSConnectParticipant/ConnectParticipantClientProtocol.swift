// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// Amazon Connect is a cloud-based contact center solution that makes it easy to set up and manage
///             a customer contact center and provide reliable customer engagement at any scale.
///         Amazon Connect enables customer contacts through voice or chat.
///
///         The APIs described here are used by chat participants, such as agents and
///             customers.
public protocol ConnectParticipantClientProtocol {
    /// Allows you to confirm that the attachment has been uploaded using the pre-signed URL
    ///             provided in StartAttachmentUpload API.
    func completeAttachmentUpload(input: CompleteAttachmentUploadInput, completion: @escaping (ClientRuntime.SdkResult<CompleteAttachmentUploadOutputResponse, CompleteAttachmentUploadOutputError>) -> Void)
    /// Creates the participant's connection. Note that ParticipantToken is used for invoking
    ///             this API instead of ConnectionToken.
    ///         The participant token is valid for the lifetime of the participant â€“ until they are
    ///             part of a contact.
    ///         The response URL for WEBSOCKET Type has a connect expiry timeout of 100s.
    ///             Clients must manually connect to the returned websocket URL and subscribe to the desired
    ///             topic.
    ///         For chat, you need to publish the following on the established websocket
    ///             connection:
    ///
    ///
    ///
    ///             {"topic":"aws/subscribe","content":{"topics":["aws/chat"]}}
    ///
    ///
    ///         Upon websocket URL expiry, as specified in the response ConnectionExpiry parameter,
    ///             clients need to call this API again to obtain a new websocket URL and perform the same
    ///             steps as before.
    ///
    ///
    ///             The Amazon Connect Participant Service APIs do not use <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature Version 4
    ///                     authentication.
    ///
    func createParticipantConnection(input: CreateParticipantConnectionInput, completion: @escaping (ClientRuntime.SdkResult<CreateParticipantConnectionOutputResponse, CreateParticipantConnectionOutputError>) -> Void)
    /// Disconnects a participant. Note that ConnectionToken is used for invoking this API
    ///             instead of ParticipantToken.
    ///         The Amazon Connect Participant Service APIs do not use <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature Version 4
    ///                 authentication.
    func disconnectParticipant(input: DisconnectParticipantInput, completion: @escaping (ClientRuntime.SdkResult<DisconnectParticipantOutputResponse, DisconnectParticipantOutputError>) -> Void)
    /// Provides a pre-signed URL for download of a completed attachment. This is an
    ///             asynchronous API for use with active contacts.
    func getAttachment(input: GetAttachmentInput, completion: @escaping (ClientRuntime.SdkResult<GetAttachmentOutputResponse, GetAttachmentOutputError>) -> Void)
    /// Retrieves a transcript of the session, including details about any attachments. Note
    ///             that ConnectionToken is used for invoking this API instead of ParticipantToken.
    ///         The Amazon Connect Participant Service APIs do not use <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature Version 4
    ///                 authentication.
    func getTranscript(input: GetTranscriptInput, completion: @escaping (ClientRuntime.SdkResult<GetTranscriptOutputResponse, GetTranscriptOutputError>) -> Void)
    /// Sends an event. Note that ConnectionToken is used for invoking this API instead of
    ///             ParticipantToken.
    ///         The Amazon Connect Participant Service APIs do not use <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature Version 4
    ///                 authentication.
    func sendEvent(input: SendEventInput, completion: @escaping (ClientRuntime.SdkResult<SendEventOutputResponse, SendEventOutputError>) -> Void)
    /// Sends a message. Note that ConnectionToken is used for invoking this API instead of
    ///             ParticipantToken.
    ///
    ///             The Amazon Connect Participant Service APIs do not use <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature Version 4
    ///                     authentication.
    ///
    func sendMessage(input: SendMessageInput, completion: @escaping (ClientRuntime.SdkResult<SendMessageOutputResponse, SendMessageOutputError>) -> Void)
    /// Provides a pre-signed Amazon S3 URL in response for uploading the file directly to
    ///             S3.
    func startAttachmentUpload(input: StartAttachmentUploadInput, completion: @escaping (ClientRuntime.SdkResult<StartAttachmentUploadOutputResponse, StartAttachmentUploadOutputError>) -> Void)
}

public enum ConnectParticipantClientTypes {}
