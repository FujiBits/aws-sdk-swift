// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime
import Foundation

extension UnprocessedIdentityId: Codable, Reflection {
    private enum CodingKeys: String, CodingKey {
        case errorCode = "ErrorCode"
        case identityId = "IdentityId"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        if let errorCode = errorCode {
            try container.encode(errorCode.rawValue, forKey: .errorCode)
        }
        if let identityId = identityId {
            try container.encode(identityId, forKey: .identityId)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let identityIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .identityId)
        identityId = identityIdDecoded
        let errorCodeDecoded = try containerValues.decodeIfPresent(ErrorCode.self, forKey: .errorCode)
        errorCode = errorCodeDecoded
    }
}
