// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime
import Foundation

extension SetIdentityPoolRolesInput: Encodable, Reflection {
    private enum CodingKeys: String, CodingKey {
        case identityPoolId = "IdentityPoolId"
        case roleMappings = "RoleMappings"
        case roles = "Roles"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        if let identityPoolId = identityPoolId {
            try container.encode(identityPoolId, forKey: .identityPoolId)
        }
        if let roleMappings = roleMappings {
            var roleMappingsContainer = container.nestedContainer(keyedBy: Key.self, forKey: .roleMappings)
            for (dictKey0, rolemappingmap0) in roleMappings {
                try roleMappingsContainer.encode(rolemappingmap0, forKey: Key(stringValue: dictKey0))
            }
        }
        if let roles = roles {
            var rolesContainer = container.nestedContainer(keyedBy: Key.self, forKey: .roles)
            for (dictKey0, rolesmap0) in roles {
                try rolesContainer.encode(rolesmap0, forKey: Key(stringValue: dictKey0))
            }
        }
    }
}
