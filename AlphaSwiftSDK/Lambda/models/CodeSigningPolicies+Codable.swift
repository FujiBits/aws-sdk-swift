// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime
import Foundation

extension CodeSigningPolicies: Codable, Reflection {
    private enum CodingKeys: String, CodingKey {
        case untrustedArtifactOnDeployment = "UntrustedArtifactOnDeployment"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        if let untrustedArtifactOnDeployment = untrustedArtifactOnDeployment {
            try container.encode(untrustedArtifactOnDeployment.rawValue, forKey: .untrustedArtifactOnDeployment)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let untrustedArtifactOnDeploymentDecoded = try containerValues.decodeIfPresent(CodeSigningPolicy.self, forKey: .untrustedArtifactOnDeployment)
        untrustedArtifactOnDeployment = untrustedArtifactOnDeploymentDecoded
    }
}
