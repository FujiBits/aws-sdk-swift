// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime
import Foundation

extension UpdateUserAttributesInput: Encodable, Reflection {
    private enum CodingKeys: String, CodingKey {
        case accessToken = "AccessToken"
        case clientMetadata = "ClientMetadata"
        case userAttributes = "UserAttributes"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        if let accessToken = accessToken {
            try container.encode(accessToken, forKey: .accessToken)
        }
        if let clientMetadata = clientMetadata {
            var clientMetadataContainer = container.nestedContainer(keyedBy: Key.self, forKey: .clientMetadata)
            for (dictKey0, clientmetadatatype0) in clientMetadata {
                try clientMetadataContainer.encode(clientmetadatatype0, forKey: Key(stringValue: dictKey0))
            }
        }
        if let userAttributes = userAttributes {
            var userAttributesContainer = container.nestedUnkeyedContainer(forKey: .userAttributes)
            for attributelisttype0 in userAttributes {
                try userAttributesContainer.encode(attributelisttype0)
            }
        }
    }
}
