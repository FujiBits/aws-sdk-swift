// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime
import Foundation

extension AdminCreateUserConfigType: Codable, Reflection {
    private enum CodingKeys: String, CodingKey {
        case allowAdminCreateUserOnly = "AllowAdminCreateUserOnly"
        case inviteMessageTemplate = "InviteMessageTemplate"
        case unusedAccountValidityDays = "UnusedAccountValidityDays"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        if allowAdminCreateUserOnly != false {
            try container.encode(allowAdminCreateUserOnly, forKey: .allowAdminCreateUserOnly)
        }
        if let inviteMessageTemplate = inviteMessageTemplate {
            try container.encode(inviteMessageTemplate, forKey: .inviteMessageTemplate)
        }
        if unusedAccountValidityDays != 0 {
            try container.encode(unusedAccountValidityDays, forKey: .unusedAccountValidityDays)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let allowAdminCreateUserOnlyDecoded = try containerValues.decode(Bool.self, forKey: .allowAdminCreateUserOnly)
        allowAdminCreateUserOnly = allowAdminCreateUserOnlyDecoded
        let unusedAccountValidityDaysDecoded = try containerValues.decode(Int.self, forKey: .unusedAccountValidityDays)
        unusedAccountValidityDays = unusedAccountValidityDaysDecoded
        let inviteMessageTemplateDecoded = try containerValues.decodeIfPresent(MessageTemplateType.self, forKey: .inviteMessageTemplate)
        inviteMessageTemplate = inviteMessageTemplateDecoded
    }
}
