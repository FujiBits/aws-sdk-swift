// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime
import Foundation

extension ConfirmDeviceInput: Encodable, Reflection {
    private enum CodingKeys: String, CodingKey {
        case accessToken = "AccessToken"
        case deviceKey = "DeviceKey"
        case deviceName = "DeviceName"
        case deviceSecretVerifierConfig = "DeviceSecretVerifierConfig"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        if let accessToken = accessToken {
            try container.encode(accessToken, forKey: .accessToken)
        }
        if let deviceKey = deviceKey {
            try container.encode(deviceKey, forKey: .deviceKey)
        }
        if let deviceName = deviceName {
            try container.encode(deviceName, forKey: .deviceName)
        }
        if let deviceSecretVerifierConfig = deviceSecretVerifierConfig {
            try container.encode(deviceSecretVerifierConfig, forKey: .deviceSecretVerifierConfig)
        }
    }
}
