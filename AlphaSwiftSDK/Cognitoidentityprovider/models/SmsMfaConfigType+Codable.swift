// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime
import Foundation

extension SmsMfaConfigType: Codable, Reflection {
    private enum CodingKeys: String, CodingKey {
        case smsAuthenticationMessage = "SmsAuthenticationMessage"
        case smsConfiguration = "SmsConfiguration"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        if let smsAuthenticationMessage = smsAuthenticationMessage {
            try container.encode(smsAuthenticationMessage, forKey: .smsAuthenticationMessage)
        }
        if let smsConfiguration = smsConfiguration {
            try container.encode(smsConfiguration, forKey: .smsConfiguration)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let smsAuthenticationMessageDecoded = try containerValues.decodeIfPresent(String.self, forKey: .smsAuthenticationMessage)
        smsAuthenticationMessage = smsAuthenticationMessageDecoded
        let smsConfigurationDecoded = try containerValues.decodeIfPresent(SmsConfigurationType.self, forKey: .smsConfiguration)
        smsConfiguration = smsConfigurationDecoded
    }
}
