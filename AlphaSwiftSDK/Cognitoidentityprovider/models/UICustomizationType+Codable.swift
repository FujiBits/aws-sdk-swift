// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime
import Foundation

extension UICustomizationType: Codable, Reflection {
    private enum CodingKeys: String, CodingKey {
        case cSS = "CSS"
        case cSSVersion = "CSSVersion"
        case clientId = "ClientId"
        case creationDate = "CreationDate"
        case imageUrl = "ImageUrl"
        case lastModifiedDate = "LastModifiedDate"
        case userPoolId = "UserPoolId"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        if let cSS = cSS {
            try container.encode(cSS, forKey: .cSS)
        }
        if let cSSVersion = cSSVersion {
            try container.encode(cSSVersion, forKey: .cSSVersion)
        }
        if let clientId = clientId {
            try container.encode(clientId, forKey: .clientId)
        }
        if let creationDate = creationDate {
            try container.encode(creationDate.timeIntervalSince1970, forKey: .creationDate)
        }
        if let imageUrl = imageUrl {
            try container.encode(imageUrl, forKey: .imageUrl)
        }
        if let lastModifiedDate = lastModifiedDate {
            try container.encode(lastModifiedDate.timeIntervalSince1970, forKey: .lastModifiedDate)
        }
        if let userPoolId = userPoolId {
            try container.encode(userPoolId, forKey: .userPoolId)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let userPoolIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .userPoolId)
        userPoolId = userPoolIdDecoded
        let clientIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .clientId)
        clientId = clientIdDecoded
        let imageUrlDecoded = try containerValues.decodeIfPresent(String.self, forKey: .imageUrl)
        imageUrl = imageUrlDecoded
        let cSSDecoded = try containerValues.decodeIfPresent(String.self, forKey: .cSS)
        cSS = cSSDecoded
        let cSSVersionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .cSSVersion)
        cSSVersion = cSSVersionDecoded
        let lastModifiedDateDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .lastModifiedDate)
        lastModifiedDate = lastModifiedDateDecoded
        let creationDateDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .creationDate)
        creationDate = creationDateDecoded
    }
}
