// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime
import Foundation

extension DeviceSecretVerifierConfigType: Codable, Reflection {
    private enum CodingKeys: String, CodingKey {
        case passwordVerifier = "PasswordVerifier"
        case salt = "Salt"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        if let passwordVerifier = passwordVerifier {
            try container.encode(passwordVerifier, forKey: .passwordVerifier)
        }
        if let salt = salt {
            try container.encode(salt, forKey: .salt)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let passwordVerifierDecoded = try containerValues.decodeIfPresent(String.self, forKey: .passwordVerifier)
        passwordVerifier = passwordVerifierDecoded
        let saltDecoded = try containerValues.decodeIfPresent(String.self, forKey: .salt)
        salt = saltDecoded
    }
}
