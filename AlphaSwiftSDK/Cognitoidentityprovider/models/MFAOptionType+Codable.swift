// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime
import Foundation

extension MFAOptionType: Codable, Reflection {
    private enum CodingKeys: String, CodingKey {
        case attributeName = "AttributeName"
        case deliveryMedium = "DeliveryMedium"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        if let attributeName = attributeName {
            try container.encode(attributeName, forKey: .attributeName)
        }
        if let deliveryMedium = deliveryMedium {
            try container.encode(deliveryMedium.rawValue, forKey: .deliveryMedium)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deliveryMediumDecoded = try containerValues.decodeIfPresent(DeliveryMediumType.self, forKey: .deliveryMedium)
        deliveryMedium = deliveryMediumDecoded
        let attributeNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .attributeName)
        attributeName = attributeNameDecoded
    }
}
