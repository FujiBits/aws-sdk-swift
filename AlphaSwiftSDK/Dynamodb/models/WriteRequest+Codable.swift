// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime
import Foundation

extension WriteRequest: Codable, Reflection {
    private enum CodingKeys: String, CodingKey {
        case deleteRequest = "DeleteRequest"
        case putRequest = "PutRequest"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        if let deleteRequest = deleteRequest {
            try container.encode(deleteRequest, forKey: .deleteRequest)
        }
        if let putRequest = putRequest {
            try container.encode(putRequest, forKey: .putRequest)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let putRequestDecoded = try containerValues.decodeIfPresent(PutRequest.self, forKey: .putRequest)
        putRequest = putRequestDecoded
        let deleteRequestDecoded = try containerValues.decodeIfPresent(DeleteRequest.self, forKey: .deleteRequest)
        deleteRequest = deleteRequestDecoded
    }
}
