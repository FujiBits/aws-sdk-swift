// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime
import Foundation

extension GlobalSecondaryIndexAutoScalingUpdate: Codable, Reflection {
    private enum CodingKeys: String, CodingKey {
        case indexName = "IndexName"
        case provisionedWriteCapacityAutoScalingUpdate = "ProvisionedWriteCapacityAutoScalingUpdate"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        if let indexName = indexName {
            try container.encode(indexName, forKey: .indexName)
        }
        if let provisionedWriteCapacityAutoScalingUpdate = provisionedWriteCapacityAutoScalingUpdate {
            try container.encode(provisionedWriteCapacityAutoScalingUpdate, forKey: .provisionedWriteCapacityAutoScalingUpdate)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let indexNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .indexName)
        indexName = indexNameDecoded
        let provisionedWriteCapacityAutoScalingUpdateDecoded = try containerValues.decodeIfPresent(AutoScalingSettingsUpdate.self, forKey: .provisionedWriteCapacityAutoScalingUpdate)
        provisionedWriteCapacityAutoScalingUpdate = provisionedWriteCapacityAutoScalingUpdateDecoded
    }
}
