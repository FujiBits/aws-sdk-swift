// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime
import Foundation

extension ExecuteTransactionInput: Encodable, Reflection {
    private enum CodingKeys: String, CodingKey {
        case clientRequestToken = "ClientRequestToken"
        case transactStatements = "TransactStatements"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        if let clientRequestToken = clientRequestToken {
            try container.encode(clientRequestToken, forKey: .clientRequestToken)
        }
        if let transactStatements = transactStatements {
            var transactStatementsContainer = container.nestedUnkeyedContainer(forKey: .transactStatements)
            for parameterizedstatements0 in transactStatements {
                try transactStatementsContainer.encode(parameterizedstatements0)
            }
        }
    }
}
