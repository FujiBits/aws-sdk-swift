// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime
import Foundation

extension UpdateGlobalSecondaryIndexAction: Codable, Reflection {
    private enum CodingKeys: String, CodingKey {
        case indexName = "IndexName"
        case provisionedThroughput = "ProvisionedThroughput"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        if let indexName = indexName {
            try container.encode(indexName, forKey: .indexName)
        }
        if let provisionedThroughput = provisionedThroughput {
            try container.encode(provisionedThroughput, forKey: .provisionedThroughput)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let indexNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .indexName)
        indexName = indexNameDecoded
        let provisionedThroughputDecoded = try containerValues.decodeIfPresent(ProvisionedThroughput.self, forKey: .provisionedThroughput)
        provisionedThroughput = provisionedThroughputDecoded
    }
}
