// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime
import Foundation

extension CreateTableInput: Encodable, Reflection {
    private enum CodingKeys: String, CodingKey {
        case attributeDefinitions = "AttributeDefinitions"
        case billingMode = "BillingMode"
        case globalSecondaryIndexes = "GlobalSecondaryIndexes"
        case keySchema = "KeySchema"
        case localSecondaryIndexes = "LocalSecondaryIndexes"
        case provisionedThroughput = "ProvisionedThroughput"
        case sSESpecification = "SSESpecification"
        case streamSpecification = "StreamSpecification"
        case tableName = "TableName"
        case tags = "Tags"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        if let attributeDefinitions = attributeDefinitions {
            var attributeDefinitionsContainer = container.nestedUnkeyedContainer(forKey: .attributeDefinitions)
            for attributedefinitions0 in attributeDefinitions {
                try attributeDefinitionsContainer.encode(attributedefinitions0)
            }
        }
        if let billingMode = billingMode {
            try container.encode(billingMode.rawValue, forKey: .billingMode)
        }
        if let globalSecondaryIndexes = globalSecondaryIndexes {
            var globalSecondaryIndexesContainer = container.nestedUnkeyedContainer(forKey: .globalSecondaryIndexes)
            for globalsecondaryindexlist0 in globalSecondaryIndexes {
                try globalSecondaryIndexesContainer.encode(globalsecondaryindexlist0)
            }
        }
        if let keySchema = keySchema {
            var keySchemaContainer = container.nestedUnkeyedContainer(forKey: .keySchema)
            for keyschema0 in keySchema {
                try keySchemaContainer.encode(keyschema0)
            }
        }
        if let localSecondaryIndexes = localSecondaryIndexes {
            var localSecondaryIndexesContainer = container.nestedUnkeyedContainer(forKey: .localSecondaryIndexes)
            for localsecondaryindexlist0 in localSecondaryIndexes {
                try localSecondaryIndexesContainer.encode(localsecondaryindexlist0)
            }
        }
        if let provisionedThroughput = provisionedThroughput {
            try container.encode(provisionedThroughput, forKey: .provisionedThroughput)
        }
        if let sSESpecification = sSESpecification {
            try container.encode(sSESpecification, forKey: .sSESpecification)
        }
        if let streamSpecification = streamSpecification {
            try container.encode(streamSpecification, forKey: .streamSpecification)
        }
        if let tableName = tableName {
            try container.encode(tableName, forKey: .tableName)
        }
        if let tags = tags {
            var tagsContainer = container.nestedUnkeyedContainer(forKey: .tags)
            for taglist0 in tags {
                try tagsContainer.encode(taglist0)
            }
        }
    }
}
