// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime
import Foundation

extension UpdateTableReplicaAutoScalingInput: Encodable, Reflection {
    private enum CodingKeys: String, CodingKey {
        case globalSecondaryIndexUpdates = "GlobalSecondaryIndexUpdates"
        case provisionedWriteCapacityAutoScalingUpdate = "ProvisionedWriteCapacityAutoScalingUpdate"
        case replicaUpdates = "ReplicaUpdates"
        case tableName = "TableName"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        if let globalSecondaryIndexUpdates = globalSecondaryIndexUpdates {
            var globalSecondaryIndexUpdatesContainer = container.nestedUnkeyedContainer(forKey: .globalSecondaryIndexUpdates)
            for globalsecondaryindexautoscalingupdatelist0 in globalSecondaryIndexUpdates {
                try globalSecondaryIndexUpdatesContainer.encode(globalsecondaryindexautoscalingupdatelist0)
            }
        }
        if let provisionedWriteCapacityAutoScalingUpdate = provisionedWriteCapacityAutoScalingUpdate {
            try container.encode(provisionedWriteCapacityAutoScalingUpdate, forKey: .provisionedWriteCapacityAutoScalingUpdate)
        }
        if let replicaUpdates = replicaUpdates {
            var replicaUpdatesContainer = container.nestedUnkeyedContainer(forKey: .replicaUpdates)
            for replicaautoscalingupdatelist0 in replicaUpdates {
                try replicaUpdatesContainer.encode(replicaautoscalingupdatelist0)
            }
        }
        if let tableName = tableName {
            try container.encode(tableName, forKey: .tableName)
        }
    }
}
