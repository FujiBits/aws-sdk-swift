// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime
import Foundation

extension BatchWriteItemInput: Encodable, Reflection {
    private enum CodingKeys: String, CodingKey {
        case requestItems = "RequestItems"
        case returnConsumedCapacity = "ReturnConsumedCapacity"
        case returnItemCollectionMetrics = "ReturnItemCollectionMetrics"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        if let requestItems = requestItems {
            var requestItemsContainer = container.nestedContainer(keyedBy: Key.self, forKey: .requestItems)
            for (dictKey0, batchwriteitemrequestmap0) in requestItems {
                try requestItemsContainer.encode(batchwriteitemrequestmap0, forKey: Key(stringValue: dictKey0))
            }
        }
        if let returnConsumedCapacity = returnConsumedCapacity {
            try container.encode(returnConsumedCapacity.rawValue, forKey: .returnConsumedCapacity)
        }
        if let returnItemCollectionMetrics = returnItemCollectionMetrics {
            try container.encode(returnItemCollectionMetrics.rawValue, forKey: .returnItemCollectionMetrics)
        }
    }
}
