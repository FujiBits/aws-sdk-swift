// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime
import Foundation

extension AttributeDefinition: Codable, Reflection {
    private enum CodingKeys: String, CodingKey {
        case attributeName = "AttributeName"
        case attributeType = "AttributeType"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        if let attributeName = attributeName {
            try container.encode(attributeName, forKey: .attributeName)
        }
        if let attributeType = attributeType {
            try container.encode(attributeType.rawValue, forKey: .attributeType)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let attributeNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .attributeName)
        attributeName = attributeNameDecoded
        let attributeTypeDecoded = try containerValues.decodeIfPresent(ScalarAttributeType.self, forKey: .attributeType)
        attributeType = attributeTypeDecoded
    }
}
